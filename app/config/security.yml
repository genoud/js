# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    encoders:
        JSAppBundle\Entity\Utilisateur:
            algorithm: sha1
            encode_as_base64: false
            iterations: 1

    providers:
        my_db_provider:
            entity:
                class: JSAppBundle:Utilisateur
    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern: ^/
            anonymous: ~
            # activate different ways to authenticate

            # http_basic: ~
            # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate

            form_login:
                login_path: js_login
                check_path: js_login
                csrf_token_generator: security.csrf.token_manager
            logout:
                path: /logout
                target: /login

    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/edition, roles: ROLE_JS_AUTHOR }
        - { path: ^/admin, roles: ROLE_JS_EDITOR }
        - { path: ^/public, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }


    role_hierarchy:
        ROLE_JS_PUBLIC:      [ROLE_ERATING_AGENT]
        ROLE_JS_AUTHOR:      [ROLE_JS_PUBLIC]
        ROLE_JS_REVIEWER:    [ROLE_JS_AUTHOR]
        ROLE_JS_EDITOR:      [ROLE_JS_REVIEWER]
        ROLE_JS_PUBLISHER:   [ROLE_JS_AUTHOR]
        ROLE_JS_SUPER_ADMIN: [ROLE_JS_EDITOR]
