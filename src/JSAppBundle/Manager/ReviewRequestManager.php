<?php
/**
 * Created by PhpStorm.
 * User: magloire
 * Date: 30/06/2016
 * Time: 21:19
 */

namespace JSAppBundle\Manager;

use JSAppBundle\Dao\ReviewRequestRepository;
use JSAppBundle\Entity\Review;
use JSAppBundle\Entity\ReviewRequest;
use JSAppBundle\Entity\Utilisateur;
use Symfony\Component\DependencyInjection\ContainerInterface as Container;
class ReviewRequestManager extends CoreManager
{
    public function __construct(Container $container, CoreService $core)
    {
        $entityClass="JSAppBundle\Entity\ReviewRequest";
        parent::__construct($container, $core, $entityClass);
    }

    /**
     * @param int $id
     * @return null|ReviewRequest
     */
    public function load($id)
    {
        return parent::load($id); // TODO: Change the autogenerated stub
    }

    /**
     * @param Utilisateur $reviewer
     * @return int|mixed
     */
    public function countPendingByReviewer($reviewer, $query){

        $repo=$this->getRepository();
        return $repo->countPendingByReviewer($reviewer, $query);

    }

    /**
     * @param Utilisateur $reviewer
     * @param int $page
     * @param int $limit
     * @param string $query
     * @return ReviewRequest[]
     */
    public function findPendingByReviewer($reviewer, $page, $limit, $query){
        $repo=$this->getRepository();
        return $repo->findPendingByReviewer($reviewer, $page, $limit, $query);
    }

    /**
     * @return ReviewRequestRepository
     */
    public function getRepository()
    {
        return parent::getRepository();
    }

    /**
     * @param ReviewRequest $request
     * @param boolean $decision
     */
    public function handleRequest($request, $decision)
    {
        $request->setAccepted($decision);
        $request->setStatus(ReviewRequest::$STATUS_HANDLED);
        parent::update($request);

        if($decision){
            //create the review object

            $review=new Review();
            $review->setReviewer($this->getConnectedUser());
            $review->setArticle($request->getArticle());
            $review->setStatut(Review::$REVIEW_IN_PROGRESS);

            $this->getCore()->getReviewManager()->create($review);
        }



    }

}