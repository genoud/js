ting Customer Classification ********************/
            If ISA($customerClassification, SIL_CUSTOMERCLASSIFICATIONfccram) Then
               SIL_CUSTOMERCLASSIFICATIONfccram $fccramClassfication := CAST(SIL_CUSTOMERCLASSIFICATIONfccram, $customerClassification);
               $cmnParty.FCCRiskRating.calculatedFCCRRCode := INT_Mapping._mapString($cmnParty.FCCRiskRating.calculatedFCCRRCode, LIST(TOSTRING($fccramClassfication.calculatedFCCRRCode), 'SIL_FCCRCodes', 'id', 'sil_id'));
               $cmnParty.FCCRiskRating.manualFCCRRCode := INT_Mapping._mapString($cmnParty.FCCRiskRating.manualFCCRRCode, LIST(TOSTRING($fccramClassfication.manualOverrideValue), 'SIL_FCCRCodes', 'id', 'sil_id'));
               $cmnParty.FCCRiskRating.customerFamily := INT_Mapping._mapString($cmnParty.FCCRiskRating.customerFamily, LIST($cmnParty.FCCRiskRating.customerFamily, 'SIL_FCCRAMCustomerTypes', 'cmn_description', 'id'));
               $cmnParty.FCCRiskRating.customerType := INT_Mapping._mapString($cmnParty.FCCRiskRating.customerType, LIST(TOSTRING($fccramClassfication.customerType), 'SIL_FCCRAMCustomerTypes', 'cmn_description', 'description'));
               $cmnParty.legalEntityStructure := INT_SILMappingSILtoCMN._mapString($cmnParty.legalEntityStructure, LIST(TOSTRING($fccramClassfication.calculatedFCCRRLegalEntityStructureCode), 'SIL_LegalEntityStructures', 'id', 'id'));
            End
         End
      Else
         LIB_Logger.integrationError('Nocustomer Role was found for Party: ' & $cmnParty.getSILID());
      End
      /******************************** Applicant Role ************************************/
      ForEach SIL_INVOLVEDPARTYinvolvedPartyRole $role In $silInvolvedParty.roles Do
         If ISA($role, SIL_INVOLVEDPARTYapplicant) Then
            //$cmnParty.
         End
      End
   End
   /****************** RETURN RESULT ***********************************/
   Return $cmnParty;
End]]></definition>
        </method>
        <method name="createCMNPartyFromSILInvolvedPartyIDV" userId="pezzi" uuid="ffffffff-cf5f-544a-0000-000000000000">
            <definition><![CDATA[StaticFunction createCMNPartyFromSILInvolvedPartyIDV(CMN_Party $cmnParty, SIL_INVOLVEDPARTYinvolvedParty $silInvolvedParty) : CMN_Party Begin
   /****************** CREATE PARTY ************************************/
   If $silInvolvedParty != null Then
      If ISA($silInvolvedParty, 'SIL_INVOLVEDPARTYindividual') Then
         $cmnParty := INT_SILMappingSILtoCMN.createCMNPhysicalPerson($cmnParty, CAST(SIL_INVOLVEDPARTYindividual, $silInvolvedParty));
      ElseIf ISA($silInvolvedParty, 'SIL_INVOLVEDPARTYorganization') Then
         $cmnParty := INT_SILMappingSILtoCMN.createCMNLegalEntity($cmnParty, CAST(SIL_INVOLVEDPARTYorganization, $silInvolvedParty));
      Else
         LIB_Logger.integrationError('Unknown Data Type: ' & TOSTRING($silInvolvedParty));
         FAIL('Unknown Data Type');
      End
      If $cmnParty == null Then
         LIB_Logger.integrationError('Unknown Data Type: ' & TOSTRING($silInvolvedParty));
         FAIL('Unknown Data Type');
      End
   Else
      If (ISA($silInvolvedParty, 'SIL_INVOLVEDPARTYindividual') && $cmnParty.type.isLegalEntity()) or (ISA($silInvolvedParty, 'SIL_INVOLVEDPARTYorganization') && $cmnParty.type.isPhysicalPerson()) Then
         FAIL('Data Type do not correspond 2: ' & TypeOf($silInvolvedParty, true).getType() & ' vs ' & TypeOf($cmnParty, true).getType());
      End
   End
   If $cmnParty != null Then
      /****************** MAPPING GENERAL FIELDS **************************/
      $cmnParty.contact := INT_SILMappingSILtoCMN.createCMNContact($silInvolvedParty.addresses, $cmnParty);
      $cmnParty.setSILID($silInvolvedParty.id);
      $cmnParty._status := INT_SILMappingSILtoCMN._mapString($cmnParty._status, $silInvolvedParty.state);
      $cmnParty.fiscalDomicile := INT_SILMappingSILtoCMN._mapString($cmnParty.fiscalDomicile, $silInvolvedParty.domicile);
      $cmnParty.tin := INT_SILMappingSILtoCMN._mapString($cmnParty.tin, $silInvolvedParty.taxId);
      /****************** MAPPING Documents FIELDS **************************/
      SIL_INVOLVEDPARTYdocumentationItem $silDocumentationItem;
      If LIB_Validator.validateNotEmptyIndexed($silInvolvedParty.documentationItems) Then
         ForEach $silDocumentationItem In $silInvolvedParty.documentationItems Do
            CMN_IdentificationDocument $cmnIdentificationDocument := INT_SILMappingSILtoCMN.createCMNIdentificationDocument($silDocumentationItem);
            $cmnParty.identifications.addElement($cmnIdentificationDocument);
         End
      End
      /******************************** Customer Role ************************************/
      SIL_INVOLVEDPARTYcustomerRole $silCustomerRole := INT_SILUtils.getFirstSilCustomerRole($silInvolvedParty.roles);
      If $silCustomerRole != null Then
         $cmnParty.clientStatus := INT_SILMappingSILtoCMN._mapString($cmnParty.clientStatus, $silCustomerRole.clientStatus);
         /*If LIB_Validator.validateNotEmptyIndexed($silCustomerRole.legalFormFCCRAMCode) Then
            $cmnParty.legalForm := INT_SILMappingSILtoCMN._mapString($cmnParty.legalForm, LIST(TOSTRING($silCustomerRole.legalFormFCCRAMCode[1]), 'SIL_LegalEntityStructures', 'id', 'description'));
            //$cmnParty.legalForm := INT_SILMappingSILtoCMN._mapString($cmnParty.legalForm, TOSTRING($silCustomerRole.legalFormFCCRAMCode[1]));
         End*/
         If LIB_Validator.validateNotEmptyIndexed($silCustomerRole.customerClassifications) Then
            /******************* Creating Customer Classification ********************/
            ForEach $customerClassification In $silCustomerRole.customerClassifications Do
               If ISA($customerClassification, SIL_CUSTOMERCLASSIFICATIONfccram) Then
                  SIL_CUSTOMERCLASSIFICATIONfccram $fccramClassfication := CAST(SIL_CUSTOMERCLASSIFICATIONfccram, $customerClassification);
                  $cmnParty.FCCRiskRating.calculatedFCCRRCode := INT_Mapping._mapString($cmnParty.FCCRiskRating.calculatedFCCRRCode, LIST(TOSTRING($fccramClassfication.calculatedFCCRRCode), 'SIL_FCCRCodes', 'id', 'sil_id'));
                  $cmnParty.FCCRiskRating.manualFCCRRCode := INT_Mapping._mapString($cmnParty.FCCRiskRating.manualFCCRRCode, LIST(TOSTRING($fccramClassfication.manualOverrideValue), 'SIL_FCCRCodes', 'id', 'sil_id'));
                  $cmnParty.FCCRiskRating.customerFamily := INT_Mapping._mapString($cmnParty.FCCRiskRating.customerFamily, LIST($cmnParty.FCCRiskRating.customerFamily, 'SIL_FCCRAMCustomerFamilies', 'cmn_description', 'id'));
                  $cmnParty.FCCRiskRating.customerType := INT_Mapping._mapString($cmnParty.FCCRiskRating.customerType, LIST(TOSTRING($fccramClassfication.customerType), 'SIL_FCCRAMCustomerTypes', 'cmn_description', 'description'));
                  $cmnParty.legalEntityStructure := INT_SILMappingSILtoCMN._mapString($cmnParty.legalEntityStructure, LIST(TOSTRING($fccramClassfication.classification), 'SIL_LegalEntityStructures', 'id', 'sil_Id'));
                  $cmnParty.FCCRiskRating.calculatedFCCRRCountryCode := INT_Mapping._mapString($cmnParty.FCCRiskRating.calculatedFCCRRCountryCode, LIST(TOSTRING($fccramClassfication.calculatedFCCRRCountryCode), 'SIL_FCCRCodes', 'id', 'sil_id'));
                  $cmnParty.FCCRiskRating.calculatedFCCRRBusinessOccCode := INT_Mapping._mapString($cmnParty.FCCRiskRating.calculatedFCCRRBusinessOccCode, LIST(TOSTRING($fccramClassfication.calculatedFCCRRBusinessOccupationCode), 'SIL_FCCRCodes', 'id', 'sil_id'));
                  $cmnParty.FCCRiskRating.calculatedFCCRRLegalStructCode := INT_Mapping._mapString($cmnParty.FCCRiskRating.calculatedFCCRRLegalStructCode, LIST(TOSTRING($fccramClassfication.calculatedFCCRRLegalEntityStructureCode), 'SIL_FCCRCodes', 'id', 'sil_id'));
                  $cmnParty.FCCRiskRating.calculatedFCCRRProductCode := INT_Mapping._mapString($cmnParty.FCCRiskRating.calculatedFCCRRProductCode, LIST(TOSTRING($fccramClassfication.calculatedFCCRRProductCode), 'SIL_FCCRCodes', 'id', 'sil_id'));
               End
            End
         End
         If LIB_Validator.validateNotEmptyIndexed($silCustomerRole.documents) Then
            ForEach SIL_CMSdocument $silDocument In $silCustomerRole.documents Do
               If $cmnParty.type.isPhysicalPerson() Then
                  If $silDocument.type == 'Source Of Fund' Then
                     CMN_hyperlink $cmnHyperLink := NEW(CMN_hyperlink);
                     $cmnHyperLink.hyperlink := $silDocument.link;
                     $cmnParty.kycProfile.overallNetWorthAndIncome.evidences.addElement($cmnHyperLink);
                  End
               End
            End
         End
      Else
         LIB_Logger.integrationError('Nocustomer Role was found for Party: ' & $cmnParty.getSILID());
      End
      /****************** TAX INFORMATION *************************/
   End
   /****************** RETURN RESULT ***********************************/
   Return $cmnParty;
End]]></definition>
        </method>
        <method name="createCMNPartyFromSILOverallNetWorth" userId="pezzi" uuid="00000000-0643-d8b0-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createCMNPartyFromSILOverallNetWorth'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
silKYCestimatedNetWorths*/
StaticFunction createCMNPartyFromSILOverallNetWorth(CMN_Party $cmnParty, Indexed SIL_KYCestimatedNetWorth $silKYCestimatedNetWorths) : CMN_Party Begin
   If not LIB_Validator.validateNotEmptyIndexed($silKYCestimatedNetWorths) Then
      Return $cmnParty;
   End
   SIL_KYCestimatedNetWorth $silKYCestimatedNetWorth := $silKYCestimatedNetWorths[1];
   If $silKYCestimatedNetWorth == null Then
      Return $cmnParty;
   End
   CMN_OverallNetWorthAndIncome $cmnOverallNetWorthAndIncome := $cmnParty.kycProfile.overallNetWorthAndIncome;
   $cmnOverallNetWorthAndIncome.estimatedAnnualIncomes.clear();
   $cmnOverallNetWorthAndIncome.setSILID(INT_SILMappingSILtoCMN._mapString($cmnOverallNetWorthAndIncome.getSILID(), $silKYCestimatedNetWorth.id));
   $cmnOverallNetWorthAndIncome.estimatedOverallNetWorth := INT_SILMappingSILtoCMN._mapLong($cmnOverallNetWorthAndIncome.estimatedOverallNetWorth, TOLONG($silKYCestimatedNetWorth.netWealthAmount) / 1000);
   If $silKYCestimatedNetWorth.netWealthAmountCurrency != null Then
      $cmnOverallNetWorthAndIncome.currency := INT_SILMappingSILtoCMN._mapString($cmnOverallNetWorthAndIncome.currency, $silKYCestimatedNetWorth.netWealthAmountCurrency.code);
   End
   If LIB_Validator.validateNotEmptyIndexed($silKYCestimatedNetWorth.estimatedNetWorthDetails) Then
      ForEach SIL_KYCestimatedNetWorthDetails $silKYCestimatedNetWorthDetails In $silKYCestimatedNetWorth.estimatedNetWorthDetails Do
         If $silKYCestimatedNetWorthDetails.type == 'Other' Then
            $cmnOverallNetWorthAndIncome.netWorthItems[$cmnOverallNetWorthAndIncome.netWorthItems.size()].amount := INT_SILMappingSILtoCMN._mapLong($cmnOverallNetWorthAndIncome.netWorthItems[$cmnOverallNetWorthAndIncome.netWorthItems.size()].amount, TOLONG($silKYCestimatedNetWorthDetails.amount));
            $cmnOverallNetWorthAndIncome.netWorthItems[$cmnOverallNetWorthAndIncome.netWorthItems.size()].name := INT_SILMappingSILtoCMN._mapString($cmnOverallNetWorthAndIncome.netWorthItems[$cmnOverallNetWorthAndIncome.netWorthItems.size()].name, $silKYCestimatedNetWorthDetails.name);
         Else
            String $silType := LIST($silKYCestimatedNetWorthDetails.type, 'CMN_NetWorthSource', 'description', 'sil_Id');
            If NotEmpty($silType) Then
               For Integer $i := 1 Condition $i <= $cmnOverallNetWorthAndIncome.netWorthItems.size() Step $i := $i + 1 Do
                  If $cmnOverallNetWorthAndIncome.netWorthItems[$i].name == $silType Then
                     $cmnOverallNetWorthAndIncome.netWorthItems[$i].amount := INT_SILMappingSILtoCMN._mapLong($cmnOverallNetWorthAndIncome.netWorthItems[$i].amount, TOLONG($silKYCestimatedNetWorthDetails.amount));
                     Break;
                  End
               End
            Else
               $cmnOverallNetWorthAndIncome.estimatedAnnualIncomes.addElement(INT_SILMappingSILtoCMN.createCMNEstimatedAnnualIncome($silKYCestimatedNetWorthDetails));
            End
         End
      End
   End
   Return $cmnParty;
End]]></definition>
        </method>
        <method name="createCMNPartyFromSILSCC" userId="pezzi" uuid="ffffffff-923b-1b65-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createCMNPartyFromSILSCC'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createCMNPartyFromSILSCC(CMN_Party $cmnParty, Indexed SIL_CUSTOMERCLASSIFICATIONspecialCategoryCustomer $silCustomerClassifications) : CMN_Party Begin
   If $silCustomerClassifications != null Then
      SIL_CUSTOMERCLASSIFICATIONspecialCategoryCustomer $specialCategoryCustomer;
      CMN_PEPSCCDetails $pepDetails := $cmnParty.kycProfile.pepSCCDetails;
      $pepDetails.pepTypeSCCConnectedParty.clear();
      $pepDetails.typeSCCConnectedParty.clear();
      ForEach $specialCategoryCustomer In $silCustomerClassifications Do
         $cmnParty.kycProfile.pepSCCDetails.isPartyScc := INT_Mapping._mapBoolean($cmnParty.kycProfile.pepSCCDetails.isPartyScc, $specialCategoryCustomer.sccIndicator);
         Indexed SIL_CUSTOMERCLASSIFICATIONsccCategory $sccCategoryTypes := $specialCategoryCustomer.manualSCCReasons;
         If LIB_Validator.validateNotEmptyIndexed($sccCategoryTypes) Then
            ForEach SIL_CUSTOMERCLASSIFICATIONsccCategory $sccCategoryType In $sccCategoryTypes Do
               String $sccType := LIST(TOSTRING($sccCategoryType.type), 'CMN_KYCSccConnectedParty', 'id', 'SIL_Id');
               If (EQUAL($sccType, 'SCC01') or EQUAL($sccType, 'SCC02')) Then
                  If not $pepDetails.pepTypeSCCConnectedParty.contains($sccType) Then
                     $pepDetails.pepTypeSCCConnectedParty.addElement($sccType);
                  End
               ElseIf NotEmpty($sccType) && not $pepDetails.typeSCCConnectedParty.contains($sccType) Then
                  $pepDetails.typeSCCConnectedParty.addElement($sccType);
               End
            End
         End
         If LIB_Validator.validateNotEmptyIndexed($specialCategoryCustomer.sccOverrides) Then
            SIL_CUSTOMERCLASSIFICATIONsccOverride $sccOverride := $specialCategoryCustomer.sccOverrides[1];
            $cmnParty.kycProfile.pepSCCDetails.fccSccOverride := INT_Mapping._mapBoolean($cmnParty.kycProfile.pepSCCDetails.fccSccOverride, $sccOverride.overrideIndicator);
            //$cmnParty.kycProfile.pepSCCDetails.complianceOverrideSCCStatus := INT_Mapping._mapBoolean($cmnParty.kycProfile.pepSCCDetails.isPartyScc, $sccOverride.sccIndicator);
            If $cmnParty.kycProfile.pepSCCDetails.fccSccOverride Then
               $cmnParty.kycProfile.pepSCCDetails.fccSccOverrideReason := INT_Mapping._mapString($cmnParty.kycProfile.pepSCCDetails.fccSccOverrideReason, LIST($sccOverride.overrideReason, 'CMN_KYCSCCOverrideReasons', 'id', 'sil_id'));
               $cmnParty.kycProfile.pepSCCDetails.sccOverrideDescription := INT_Mapping._mapString($cmnParty.kycProfile.pepSCCDetails.sccOverrideDescription, $sccOverride.overrideDescription);
               $cmnParty.kycProfile.pepSCCDetails.complianceOverrideSCCStatus := INT_Mapping._mapBoolean($cmnParty.kycProfile.pepSCCDetails.complianceOverrideSCCStatus, ! $specialCategoryCustomer.sccIndicator);
            Else
               $cmnParty.kycProfile.pepSCCDetails.complianceOverrideSCCStatus := INT_Mapping._mapBoolean($cmnParty.kycProfile.pepSCCDetails.complianceOverrideSCCStatus, $specialCategoryCustomer.sccIndicator);
            End
         Else
            $cmnParty.kycProfile.pepSCCDetails.fccSccOverride := INT_Mapping._mapBoolean($cmnParty.kycProfile.pepSCCDetails.fccSccOverride, false);
         End
         $pepDetails.basicReasonForSCCDesignation := INT_SILMappingSILtoCMN._mapString($pepDetails.basicReasonForSCCDesignation, $specialCategoryCustomer.sccDescription);
         If ISA($specialCategoryCustomer, 'SIL_CUSTOMERCLASSIFICATIONpepCustomer') Then
            /** SCC 01 **/
            SIL_CUSTOMERCLASSIFICATIONpepCustomer $pepCustomer := CAST(SIL_CUSTOMERCLASSIFICATIONpepCustomer, $specialCategoryCustomer);
            If $pepCustomer.pepCustomerInformation != null Then
               $pepDetails.pepReason := INT_Mapping._mapString($pepDetails.pepReason, LIST($pepCustomer.pepCustomerInformation.pepReason, 'CMN_KYCAssociatedPepReason', 'id', 'sil_id'));
               $pepDetails.pepDescriptionHeld := INT_Mapping._mapString($pepDetails.pepDescriptionHeld, $pepCustomer.pepCustomerInformation.pepDescription);
               $pepDetails.endAppointedPEPDate := INT_Mapping._mapDate($pepDetails.endAppointedPEPDate, $pepCustomer.pepCustomerInformation.endDate);
               $pepDetails.startAppointedPEPDate := INT_Mapping._mapDate($pepDetails.startAppointedPEPDate, $pepCustomer.pepCustomerInformation.startDate);
               If $pepCustomer.pepCustomerInformation.relatedCountry != null Then
                  $pepDetails.isAppHighRiskjurisdiction := INT_Mapping._mapBoolean($pepDetails.isAppHighRiskjurisdiction, $pepCustomer.pepCustomerInformation.relatedCountry.highRiskJuridictionIndicator);
                  If NotEmpty($pepCustomer.pepCustomerInformation.relatedCountry.code) Then
                     $pepDetails.countryPoliticalExposure := INT_Mapping._mapString($pepDetails.countryPoliticalExposure, $pepCustomer.pepCustomerInformation.relatedCountry.code);
                  End
               End
            End
         Else
            /* General SCC && SCC 02 */
            $pepDetails.setSILID(INT_SILMappingSILtoCMN._mapString($pepDetails.getSILID(), $specialCategoryCustomer.id));
            $pepDetails.finalPEPCategory := INT_SILMappingSILtoCMN._mapString($pepDetails.finalPEPCategory, LIST($specialCategoryCustomer.finalPEPCategory, 'CMN_KYCPEPCategory', 'id', 'sil_id'));
            If LIB_Validator.validateNotEmptyIndexed($specialCategoryCustomer.relatedParties) Then
               /** SCC 02 **/
               SIL_CUSTOMERCLASSIFICATIONpepRelatedParty $silPepRelatedParty := $specialCategoryCustomer.relatedParties[1];
               If $silPepRelatedParty != null Then
                  $pepDetails.isAssociatedExistBankPartner := INT_Mapping._mapBoolean($pepDetails.isAssociatedExistBankPartner, $silPepRelatedParty.isAnExistingCustomer);
                  If LIB_Validator.validateNotEmptyIndexed($silPepRelatedParty.pepRelatedPartyInformation) && $silPepRelatedParty.pepRelatedPartyInformation[1] != null Then
                     $pepDetails.associatedPEPReason := INT_Mapping._mapString($pepDetails.associatedPEPReason, LIST($silPepRelatedParty.pepRelatedPartyInformation[1].pepReason, 'CMN_KYCAssociatedPepReason', 'id', 'sil_id'));
                     $pepDetails.associatedPEPDescription := INT_Mapping._mapString($pepDetails.associatedPEPDescription, $silPepRelatedParty.pepRelatedPartyInformation[1].pepDescription);
                     $pepDetails.associatedStartPEPDate := INT_Mapping._mapDate($pepDetails.associatedStartPEPDate, $silPepRelatedParty.pepRelatedPartyInformation[1].startDate);
                     $pepDetails.associatedEndPEPDate := INT_Mapping._mapDate($pepDetails.associatedEndPEPDate, $silPepRelatedParty.pepRelatedPartyInformation[1].endDate);
                     If $silPepRelatedParty.pepRelatedPartyInformation[1].relatedCountry != null and NotEmpty($silPepRelatedParty.pepRelatedPartyInformation[1].relatedCountry.code) Then
                        $pepDetails.associatedMainCountryRelate := INT_Mapping._mapString($pepDetails.associatedMainCountryRelate, $silPepRelatedParty.pepRelatedPartyInformation[1].relatedCountry.code);
                        $pepDetails.isAssHighRiskjurisdiction := INT_Mapping._mapBoolean($pepDetails.isAssHighRiskjurisdiction, $silPepRelatedParty.pepRelatedPartyInformation[1].relatedCountry.highRiskJuridictionIndicator);
                     End
                  End
                  $pepDetails.hasAssociatedPepControl := INT_Mapping._mapBoolean($pepDetails.hasAssociatedPepControl, $silPepRelatedParty.hasEffectiveControlOverCompanyIndicator);
                  $pepDetails.hasAssociatedPepConflicts := INT_Mapping._mapBoolean($pepDetails.hasAssociatedPepConflicts, $silPepRelatedParty.hasEthicalConflictWithCustomerIndicator);
                  $pepDetails.associatedPepPositionTimeHeld := INT_Mapping._mapDate($pepDetails.associatedPepPositionTimeHeld, $silPepRelatedParty.notInLastPEPPositionSince);
                  $pepDetails.associatedPepCustomerRelation := INT_Mapping._mapString($pepDetails.associatedPepCustomerRelation, $silPepRelatedParty.ethicalConflictWithCustomerDescription);
                  If $silPepRelatedParty.involvedParty != null Then
                     If LIB_Validator.validateNotEmptyIndexed($silPepRelatedParty.involvedParty.roles) Then
                        If LIB_Validator.validateNotEmptyIndexed($silPepRelatedParty.involvedParty.roles[1].involvedPartyRelationships) Then
                           SIL_INVOLVEDPARTYinvolvedPartyRelationship $silRelation := $silPepRelatedParty.involvedParty.roles[1].involvedPartyRelationships[1];
                           If $silRelation != null Then
                              If $cmnParty.type.isLegalEntity() Then
                                 $pepDetails.associatedPEPPosition := INT_Mapping._mapString($pepDetails.associatedPEPPosition, LIST($silRelation.relationshipRole, 'CMN_AssociatedPepRoles', 'id', 'sil_Id'));
                                 $pepDetails.relationEntityDescription := INT_Mapping._mapString($pepDetails.relationEntityDescription, $silRelation.details);
                              ElseIf $cmnParty.type.isPhysicalPerson() Then
                                 $pepDetails.relationshipPEPToCustomer := INT_Mapping._mapString($pepDetails.relationshipPEPToCustomer, LIST($silRelation.relationshipType, 'CMN_KYCPEPRelationship', 'id', 'sil_Id'));
                                 $pepDetails.relationshipPEPToCustomerOther := INT_Mapping._mapString($pepDetails.relationshipPEPToCustomerOther, $silRelation.relationshipSubType);
                                 $pepDetails.relationshipDescription := INT_Mapping._mapString($pepDetails.relationshipDescription, $silRelation.details);
                              End
                           End
                        End
                     End
                  End
                  If $silPepRelatedParty.involvedParty != null Then
                     $pepDetails.associatedPEPID := INT_Mapping._mapString($pepDetails.associatedPEPID, $silPepRelatedParty.involvedParty.id);
                     SIL_INVOLVEDPARTYindividualName $silIndividualName := INT_SILUtils.getFirstIndividualName($silPepRelatedParty.involvedParty.names);
                     If $silIndividualName != null Then
                        $pepDetails.associatedPEPName := INT_Mapping._mapString($pepDetails.associatedPEPName, $silIndividualName.firstName);
                        $pepDetails.associatedPEPLastName := INT_Mapping._mapString($pepDetails.associatedPEPName, $silIndividualName.lastName);
                     End
                     If LIB_Validator.validateNotEmptyIndexed($silPepRelatedParty.involvedParty.nationalities) Then
                        SIL_STATICcountry $silCountry;
                        ForEach $silCountry In $silPepRelatedParty.involvedParty.nationalities Do
                           If $silCountry != null Then
                              If NotEmpty($silCountry.code) Then
                                 $pepDetails.associatedPEPNationality := INT_Mapping._mapString($pepDetails.associatedPEPNationality, $silCountry.code);
                              End
                              Break;
                           End
                        End
                     End
                  End
               End
            End
         End
      End
   End
   Return $cmnParty;
End]]></definition>
        </method>
        <method name="createCMNPartyFromSILScreeningScreening" userId="pezzi" uuid="00000000-274f-030e-0000-000000000000">
            <definition><![CDATA[StaticFunction createCMNPartyFromSILScreeningScreening(CMN_Party $cmnParty, Indexed SIL_INVOLVEDPARTYSCREENINGscreening $silScreeningScreenings) : CMN_Party Begin
   If $cmnParty == null Then
      Return null;
   End
   If $silScreeningScreenings == null Then
      Return $cmnParty;
   End
   ForEach SIL_INVOLVEDPARTYSCREENINGscreening $silScreeningScreening In $silScreeningScreenings Do
      If ISA($silScreeningScreening, SIL_INVOLVEDPARTYSCREENINGdatabaseScreening) Then
         SIL_INVOLVEDPARTYSCREENINGdatabaseScreening $silScreeningDatabaseScreening := CAST(SIL_INVOLVEDPARTYSCREENINGdatabaseScreening, $silScreeningScreening);
         /********* Generic Information *******/
         If $silScreeningDatabaseScreening.name == 'GenericScreening' Then
            $cmnParty.kycProfile.screening.hasParentConfirmed := INT_SILMappingSILtoCMN._mapBoolean($cmnParty.kycProfile.screening.hasParentConfirmed, $silScreeningDatabaseScreening.compliantWithHSBCPolicyIndicator);
            //$cmnParty.kycProfile.screening.hasConfirmed := INT_SILMappingSILtoCMN._mapBoolean($cmnParty.kycProfile.screening.hasConfirmed, $silScreeningDatabaseScreening.compliantWithHSBCPolicyIndicator);
            $cmnParty.kycProfile.screening.isSubjectToNegativeNews := INT_SILMappingSILtoCMN._mapBoolean($cmnParty.kycProfile.screening.isSubjectToNegativeNews, $silScreeningDatabaseScreening.isSubjectToNegativeMedia);
            If $silScreeningScreening.party != null Then
               $cmnParty.kycProfile.screening.hasInfluence := INT_SILMappingSILtoCMN._mapBoolean($cmnParty.kycProfile.screening.hasInfluence, $silScreeningDatabaseScreening.party.influenceGovernmentIndicator);
               $cmnParty.kycProfile.screening.commentGovernmentInfluence := INT_SILMappingSILtoCMN._mapString($cmnParty.kycProfile.screening.commentGovernmentInfluence, $silScreeningDatabaseScreening.party.influenceGovernmentDescription);
               $cmnParty.kycProfile.screening.regOIndicator := INT_SILMappingSILtoCMN._mapBoolean($cmnParty.kycProfile.screening.regOIndicator, $silScreeningDatabaseScreening.party.subjectToRegulationOIndicator);
               IF($cmnParty.kycProfile.screening.regOIndicator, $cmnParty.kycProfile.screening.regOComment := INT_SILMappingSILtoCMN._mapString($cmnParty.kycProfile.screening.regOComment, $silScreeningDatabaseScreening.party.regulationOComment));
               $cmnParty.kycProfile.screening.sanctionedCountries.clear();
               If LIB_Validator.validateNotEmptyIndexed($silScreeningDatabaseScreening.party.addresses) Then
                  ForEach SIL_INVOLVEDPARTYaddress $silAddress In $silScreeningDatabaseScreening.party.addresses Do
                     If ISA($silAddress, SIL_INVOLVEDPARTYcountryAddress) && $silAddress.type == INT_SILEnumerations.getCountryTypeExposure() Then
                        SIL_INVOLVEDPARTYcountryAddress $silCountry := CAST(SIL_INVOLVEDPARTYcountryAddress, $silAddress);
                        If $silCountry.country != null && $silCountry.country.sanctionedIndicator && NotEmpty($silCountry.country.code) Then
                           String $countryCode := LIST($silCountry.country.code, 'SIL_SanctionedCountries', 'id', 'sil_Id');
                           If $countryCode == 'none' Then
                              $cmnParty.kycProfile.screening.hasNoneSanctionedCountry := INT_SILMappingSILtoCMN._mapBoolean($cmnParty.kycProfile.screening.hasNoneSanctionedCountry, true);
                           ElseIf NotEmpty($countryCode) Then
                              $cmnParty.kycProfile.screening.sanctionedCountries.addElement($countryCode);
                              $cmnParty.kycProfile.screening.sanctionedCountriesComment := INT_SILMappingSILtoCMN._mapString($cmnParty.kycProfile.screening.sanctionedCountriesComment, $silCountry.comment);
                           End
                        End
                     End
                  End
               End
               If $cmnParty.kycProfile.screening.hasNoneSanctionedCountry Then
                  $cmnParty.kycProfile.screening.sanctionedCountries.clear();
                  $cmnParty.kycProfile.screening.sanctionedCountriesComment := null;
               End
            End
         Else
            If not LIB_Validator.validateNotEmptyIndexed($cmnParty.negativeNews.getNegativeNewsRecordSet().negativeNewsRecords) Then
               $cmnParty.negativeNews.importNegativeNewsRecords();
            End
            $cmnParty.negativeNews.hasBeenEdited := true;
            IF($silScreeningDatabaseScreening.party != null, $cmnParty.kycProfile.screening.hasLegalOrRegulatoryIssues := $silScreeningDatabaseScreening.party.hasComplianceIssueIndicator);
            CMN_NegativeNewsRecord $aCmnNegativeNewsRecord;
            CMN_NegativeNewsRecord $cmnNegativeNewsRecord := null;
            ForEach $aCmnNegativeNewsRecord In $cmnParty.negativeNews.getNegativeNewsRecordSet().negativeNewsRecords Do
               If $aCmnNegativeNewsRecord.id == LIST($silScreeningDatabaseScreening.name, 'COB_NegativeNews', 'id', 'sil_id') Then
                  $cmnNegativeNewsRecord := $aCmnNegativeNewsRecord;
                  Break;
               End
            End
            If $cmnNegativeNewsRecord == null Then
               If NotEmpty(LIST($silScreeningDatabaseScreening.name, 'COB_NegativeNews', 'id', 'sil_id')) Then
                  $cmnNegativeNewsRecord := NEW(CMN_NegativeNewsRecord);
                  $cmnNegativeNewsRecord.isMandatory := false;
                  $cmnNegativeNewsRecord.title := LIST($silScreeningDatabaseScreening.name, 'COB_NegativeNews', 'id', 'sil_id');
                  $cmnParty.negativeNews.getNegativeNewsRecordSet().negativeNewsRecords.addElement($cmnNegativeNewsRecord);
               Else
                  Continue;
               End
            End
            $cmnNegativeNewsRecord.setSILID(INT_SILMappingSILtoCMN._mapString($cmnNegativeNewsRecord.getSILID(), $silScreeningDatabaseScreening.id));
            If $cmnNegativeNewsRecord.id == 'worldcheck' Then
               $cmnNegativeNewsRecord.worldcheckID := INT_SILMappingSILtoCMN._mapString($cmnNegativeNewsRecord.worldcheckID, $silScreeningDatabaseScreening.referenceId);
            ElseIf $cmnNegativeNewsRecord.id == 'other' Then
               $cmnNegativeNewsRecord.title := INT_SILMappingSILtoCMN._mapString($cmnNegativeNewsRecord.title, $silScreeningDatabaseScreening.description);
            End
            $cmnNegativeNewsRecord.selectedQuestion := INT_SILMappingSILtoCMN._mapString($cmnNegativeNewsRecord.selectedQuestion, LIST($silScreeningDatabaseScreening.status, 'CMN_NegativeNewsChoices__selector', 'id', 'sil_id'));
            $cmnNegativeNewsRecord.comment := INT_SILMappingSILtoCMN._mapString($cmnNegativeNewsRecord.comment, $silScreeningDatabaseScreening.comment);
            $cmnNegativeNewsRecord.date := INT_SILMappingSILtoCMN._mapDate($cmnNegativeNewsRecord.date, $silScreeningDatabaseScreening.date);
            If $silScreeningDatabaseScreening.screener != null and $silScreeningDatabaseScreening.screener.party != null and LIB_Validator.validateNotEmptyIndexed($silScreeningDatabaseScreening.screener.party.names) and ISA($silScreeningDatabaseScreening.screener.party.names[1], SIL_INVOLVEDPARTYindividualName) Then
               SIL_INVOLVEDPARTYindividualName $silName := CAST(SIL_INVOLVEDPARTYindividualName, $silScreeningDatabaseScreening.screener.party.names[1]);
               $cmnNegativeNewsRecord.performer.firstName := INT_SILMappingSILtoCMN._mapString($cmnNegativeNewsRecord.performer.firstName, $silName.firstName);
               $cmnNegativeNewsRecord.performer.lastName := INT_SILMappingSILtoCMN._mapString($cmnNegativeNewsRecord.performer.lastName, $silName.lastName);
               If EMPTY($cmnNegativeNewsRecord.performer.firstName) and EMPTY($cmnNegativeNewsRecord.performer.lastName) Then
                  Indexed String $names := SPLIT($silName.fullName, '\\s');
                  If LIB_Validator.validateNotEmptyIndexed($names) Then
                     If $names.size() > 0 Then
                        $cmnNegativeNewsRecord.performer.firstName := $names[1];
                        $names.removeElementAt(1);
                     End
                     IF($names.size() > 0, $cmnNegativeNewsRecord.performer.lastName := JOINLIST($names, ' '));
                  End
               End
            End
            $cmnNegativeNewsRecord.hyperlink := INT_SILMappingSILtoCMN._mapString($cmnNegativeNewsRecord.hyperlink, $silScreeningDatabaseScreening.evidenceLink);
         End
      End
   End
   If $cmnParty.negativeNews.hasBeenEdited Then
      $cmnParty.negativeNews.addNegativeNewsRecordToHistory($cmnParty.negativeNews.getNegativeNewsRecordSet());
      $cmnParty.negativeNews.getNegativeNewsRecordSet().clearNegativeNewsRecords();
   End
   Return $cmnParty;
End]]></definition>
        </method>
        <method name="createCMNPartyFromSILSourceOfWealth" userId="cucumazzo" uuid="ffffffff-914c-e70d-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createCMNPartyFromSILSourceOfWealth'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createCMNPartyFromSILSourceOfWealth(CMN_Party $cmnParty, Indexed SIL_SOWindividualSourceOfWealth $silIndividualSourceOfWealths) : CMN_Party Begin
   If $cmnParty != null and $cmnParty.type.isPhysicalPerson() and LIB_Validator.validateNotEmptyIndexed($silIndividualSourceOfWealths) Then
      CMN_PhysicalPerson $cmnPhysicalPerson := CAST(CMN_PhysicalPerson, $cmnParty);
      CMN_KycSow $cmnPhysicalPersonKycSow := $cmnPhysicalPerson.getKYCProfile().sourceOfWealth;
      Boolean $sowCountriesReseted := false;
      Indexed CMN_KycSowEmployment $previousCMNKycSowEmployement := NewIndexed(CMN_KycSowEmployment);
      Indexed CMN_KycSowBusinessOwner $previousCMNKycSowBusinessOwner := NewIndexed(CMN_KycSowBusinessOwner);
      Indexed CMN_KycSowInheritanceDonation $previousCMNKycSowInheritanceDonation := NewIndexed(CMN_KycSowInheritanceDonation);
      Indexed CMN_KycSowFamilyRelationsRoyalty $previousCMNKycSowFamilyRelationsRoyalty := NewIndexed(CMN_KycSowFamilyRelationsRoyalty);
      Indexed CMN_KycSowOthers $previousCMNKycSowOthers := NewIndexed(CMN_KycSowOthers);
      /*****    Keep CMN Object without ID, copy one with ID to merge with SIL Objects *****/
      ForEach CMN_KycSowEmployment $cmnKycSowEmployement In $cmnPhysicalPersonKycSow.sowEmployment Do
         If NotEmpty($cmnKycSowEmployement.getSILID()) Then
            $cmnPhysicalPersonKycSow.sowEmployment.removeElement($cmnKycSowEmployement);
            $previousCMNKycSowEmployement.addElement($cmnKycSowEmployement);
         End
      End
      ForEach CMN_KycSowBusinessOwner $cmnKycSowBusinessOwner In $cmnPhysicalPersonKycSow.sowBusinessOwner Do
         If NotEmpty($cmnKycSowBusinessOwner.getSILID()) Then
            $cmnPhysicalPersonKycSow.sowBusinessOwner.removeElement($cmnKycSowBusinessOwner);
            $previousCMNKycSowBusinessOwner.addElement($cmnKycSowBusinessOwner);
         End
      End
      ForEach CMN_KycSowInheritanceDonation $cmnKycSowInheritance In $cmnPhysicalPersonKycSow.sowInheritanceDonation Do
         If NotEmpty($cmnKycSowInheritance.getSILID()) Then
            $cmnPhysicalPersonKycSow.sowInheritanceDonation.removeElement($cmnKycSowInheritance);
            $previousCMNKycSowInheritanceDonation.addElement($cmnKycSowInheritance);
         End
      End
      ForEach CMN_KycSowFamilyRelationsRoyalty $cmnKycSowFamily In $cmnPhysicalPersonKycSow.sowFamilyRelationsRoyalty Do
         If NotEmpty($cmnKycSowFamily.getSILID()) Then
            $cmnPhysicalPersonKycSow.sowFamilyRelationsRoyalty.removeElement($cmnKycSowFamily);
            $previousCMNKycSowFamilyRelationsRoyalty.addElement($cmnKycSowFamily);
         End
      End
      ForEach CMN_KycSowOthers $cmnKycSowOther In $cmnPhysicalPersonKycSow.sowOthers Do
         If NotEmpty($cmnKycSowOther.getSILID()) Then
            $cmnPhysicalPersonKycSow.sowOthers.removeElement($cmnKycSowOther);
            $previousCMNKycSowOthers.addElement($cmnKycSowOther);
         End
      End
      If LIB_Validator.validateNotEmptyIndexed($silIndividualSourceOfWealths) Then
         SIL_SOWindividualSourceOfWealth $silIndividualSourceOfWealth;
         //$cmnPhysicalPerson.getKYCProfile().sourceOfWealth.description := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPerson.getKYCProfile().sourceOfWealth.description, $silIndividualSourceOfWealth.description);
         ForEach $silIndividualSourceOfWealth In $silIndividualSourceOfWealths Do
            If ISA($silIndividualSourceOfWealth, SIL_SOWtotalWealth) Then
               SIL_SOWtotalWealth $silGenericSourceOfWealth := CAST(SIL_SOWtotalWealth, $silIndividualSourceOfWealth);
               $cmnPhysicalPersonKycSow.description := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPersonKycSow.description, $silGenericSourceOfWealth.description);
               If $silGenericSourceOfWealth.party != null Then
                  /************************************* Employee Role ****************************/
                  ForEach SIL_INVOLVEDPARTYinvolvedPartyRole $role In $silGenericSourceOfWealth.party.roles Do
                     If ISA($role, SIL_INVOLVEDPARTYemployeeRole) Then
                        SIL_INVOLVEDPARTYemployeeRole $employeeRole := CAST(SIL_INVOLVEDPARTYemployeeRole, $role);
                        String $occupationStatus := LIST(TOSTRING($employeeRole.employmentStatus), 'SIL_EmploymentStatus', 'cmn_id', 'id');
                        If NotEmpty($occupationStatus) Then
                           IF(not LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPerson.getKYCProfile().sourceOfWealth.customerOccupationStatus), $cmnPhysicalPerson.getKYCProfile().sourceOfWealth.customerOccupationStatus := NewIndexed(String));
                           $cmnPhysicalPerson.getKYCProfile().sourceOfWealth.customerOccupationStatus[1] := $occupationStatus;
                        End
                        Break;
                     End
                  End
                  /************************************* Source of Wealths ****************************/
                  $cmnPhysicalPerson.getKYCProfile().sourceOfWealth.educationalBackground := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPerson.getKYCProfile().sourceOfWealth.educationalBackground, $silGenericSourceOfWealth.party.educationalBackground);
                  If LIB_Validator.validateNotEmptyIndexed($silGenericSourceOfWealth.party.addresses) Then
                     ForEach SIL_INVOLVEDPARTYaddress $silAddress In $silGenericSourceOfWealth.party.addresses Do
                        If ISA($silAddress, SIL_INVOLVEDPARTYcountryAddress) and $silAddress.type == INT_SILEnumerations.getCountryTypeSourceOfWealth() Then
                           SIL_INVOLVEDPARTYcountryAddress $countryAddress := CAST(SIL_INVOLVEDPARTYcountryAddress, $silAddress);
                           If $countryAddress.country != null Then
                              CMN_KycSowCountries $sowCountry := NEW(CMN_KycSowCountries);
                              $sowCountry.comment := $countryAddress.comment;
                              $sowCountry.country := $countryAddress.country.code;
                              $cmnPhysicalPersonKycSow.sowCountries.addElement($sowCountry);
                           End
                        End
                     End
                  End
               End
            ElseIf ISA($silIndividualSourceOfWealth, SIL_SOWincomeWealthDetails) Then
               SIL_SOWincomeWealthDetails $silIncomeWealthDetail := CAST(SIL_SOWincomeWealthDetails, $silIndividualSourceOfWealth);
               Boolean $odbDataNotFound := true;
               CMN_KycSowEmployment $cmnKycSowEmployement;
               ForEach CMN_KycSowEmployment $otherCMNKycSowEmployement In $previousCMNKycSowEmployement Do
                  If $otherCMNKycSowEmployement.getSILID() == $silIndividualSourceOfWealth.id Then
                     $cmnKycSowEmployement := $otherCMNKycSowEmployement;
                     Break;
                  End
               End
               $cmnPhysicalPersonKycSow.sowEmployment.addElement(INT_SILMappingSILtoCMN.createCMNKycSowEmployment($silIncomeWealthDetail, $cmnKycSowEmployement));
            ElseIf ISA($silIndividualSourceOfWealth, SIL_SOWbusinessWealthDetails) Then
               SIL_SOWbusinessWealthDetails $silBusinessOwner := CAST(SIL_SOWbusinessWealthDetails, $silIndividualSourceOfWealth);
               Boolean $odbDataNotFound := true;
               CMN_KycSowBusinessOwner $cmnKycSowBusinessOwner;
               ForEach CMN_KycSowBusinessOwner $otherCMNKycSowBusinessOwner In $previousCMNKycSowBusinessOwner Do
                  If $otherCMNKycSowBusinessOwner.getSILID() == $silIndividualSourceOfWealth.id Then
                     $cmnKycSowBusinessOwner := $otherCMNKycSowBusinessOwner;
                     Break;
                  End
               End
               $cmnPhysicalPersonKycSow.sowBusinessOwner.addElement(INT_SILMappingSILtoCMN.createCMNKycSowBusinessOwner($silBusinessOwner, $cmnKycSowBusinessOwner));
            ElseIf ISA($silIndividualSourceOfWealth, SIL_SOWinheritanceWealthDetails) Then
               SIL_SOWinheritanceWealthDetails $silInheritanceWealthDetails := CAST(SIL_SOWinheritanceWealthDetails, $silIndividualSourceOfWealth);
               CMN_KycSowInheritanceDonation $cmnkycSowInheritanceDonation := NEW(CMN_KycSowInheritanceDonation);
               ForEach CMN_KycSowInheritanceDonation $otherCMNkycSowInheritanceDonation In $previousCMNKycSowInheritanceDonation Do
                  If $otherCMNkycSowInheritanceDonation.getSILID() == $silInheritanceWealthDetails.id Then
                     $cmnkycSowInheritanceDonation := $otherCMNkycSowInheritanceDonation;
                     Break;
                  End
               End
               $cmnPhysicalPersonKycSow.sowInheritanceDonation.addElement(INT_SILMappingSILtoCMN.createCMNKycSOWInheritanceDonation($silInheritanceWealthDetails, $cmnkycSowInheritanceDonation));
            ElseIf ISA($silIndividualSourceOfWealth, SIL_SOWfamilyWealthDetails) Then
               SIL_SOWfamilyWealthDetails $silFamilyWealthDetails := CAST(SIL_SOWfamilyWealthDetails, $silIndividualSourceOfWealth);
               CMN_KycSowFamilyRelationsRoyalty $cmnSowFamilyRelationsRoyalty := NEW(CMN_KycSowFamilyRelationsRoyalty);
               ForEach CMN_KycSowFamilyRelationsRoyalty $othercmnSowFamilyRelationsRoyalty In $previousCMNKycSowFamilyRelationsRoyalty Do
                  If $othercmnSowFamilyRelationsRoyalty.getSILID() == $silFamilyWealthDetails.id Then
                     $cmnSowFamilyRelationsRoyalty := $othercmnSowFamilyRelationsRoyalty;
                     Break;
                  End
               End
               $cmnPhysicalPersonKycSow.sowFamilyRelationsRoyalty.addElement(INT_SILMappingSILtoCMN.createCMNKycSOWFamilyRelationsRoyalty($silFamilyWealthDetails, $cmnSowFamilyRelationsRoyalty));
            ElseIf ISA($silIndividualSourceOfWealth, SIL_SOWotherWealthDetails) Then
               SIL_SOWotherWealthDetails $silOtherWealthDetails := CAST(SIL_SOWotherWealthDetails, $silIndividualSourceOfWealth);
               CMN_KycSowOthers $cmnSowOthers := NEW(CMN_KycSowOthers);
               ForEach CMN_KycSowOthers $othercmnSowOthers In $previousCMNKycSowOthers Do
                  If $othercmnSowOthers.getSILID() == $silOtherWealthDetails.id Then
                     $cmnSowOthers := $othercmnSowOthers;
                     Break;
                  End
               End
               $cmnPhysicalPersonKycSow.sowOthers.addElement(INT_SILMappingSILtoCMN.createCMNKycSOWOthers($silOtherWealthDetails, $cmnSowOthers));
            End
         End
      End
      $cmnPhysicalPersonKycSow.initialSow['employment'] := LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPersonKycSow.sowEmployment);
      $cmnPhysicalPersonKycSow.initialSow['businessOwner'] := LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPersonKycSow.sowBusinessOwner);
      $cmnPhysicalPersonKycSow.initialSow['inheritanceDonationGift'] := LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPersonKycSow.sowInheritanceDonation);
      $cmnPhysicalPersonKycSow.initialSow['familyRelationsRoyalty'] := LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPersonKycSow.sowFamilyRelationsRoyalty);
      $cmnPhysicalPersonKycSow.initialSow['other'] := LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPersonKycSow.sowOthers);
      Return $cmnPhysicalPerson;
   End
   Return $cmnParty;
End]]></definition>
        </method>
        <method name="createCMNPartyFromSILTaxInformation" userId="pezzi" uuid="00000000-562c-29ef-0000-000000000000">
            <definition><![CDATA[StaticFunction createCMNPartyFromSILTaxInformation(CMN_Party $cmnParty, SIL_INVOLVEDPARTYtaxInformation $silTaxInformation) : CMN_Party Begin
   If $silTaxInformation != null Then
      CMN_TaxTransparency $taxTransparency;
      CMN_FatcaProfilePhysical $fatcaProfile;
      CMN_FatcaProfileLegal $fatcaProfileLegal;
      CMN_UKResidentNonDomiciled $ukNonDomiciled;
      CMN_VATPerson $vat;
      CMN_RubikPerson $rubik;
      CMN_ESDPerson $esd;
      CMN_EMIRPerson $emir;
      CMN_CRSObligation $cmnCRSObligation;
      $cmnParty.taxInformationId := INT_SILMappingSILtoCMN._mapString($cmnParty.taxInformationId, $silTaxInformation.id);
      If $cmnParty.type.isPhysicalPerson() Then
         CAST(CMN_PhysicalPerson, $cmnParty).regulatoryProfile.setSILID(INT_SILMappingSILtoCMN._mapString(CAST(CMN_PhysicalPerson, $cmnParty).getSILID(), $silTaxInformation.id));
         $taxTransparency := CAST(CMN_PhysicalPerson, $cmnParty).regulatoryProfile.taxTransparency;
         $fatcaProfile := CAST(CMN_PhysicalPerson, $cmnParty).regulatoryProfile.fatcaProfile;
         $ukNonDomiciled := CAST(CMN_PhysicalPerson, $cmnParty).regulatoryProfile.ukResidenceNonDomiciled;
         $vat := CAST(CMN_PhysicalPerson, $cmnParty).regulatoryProfile.vat;
         $rubik := CAST(CMN_PhysicalPerson, $cmnParty).regulatoryProfile.rubik;
         $esd := CAST(CMN_PhysicalPerson, $cmnParty).regulatoryProfile.esd;
      Else
         $taxTransparency := CAST(CMN_LegalEntity, $cmnParty).regulatoryProfile.taxTransparency;
         $vat := CAST(CMN_LegalEntity, $cmnParty).regulatoryProfile.vat;
         $fatcaProfileLegal := CAST(CMN_LegalEntity, $cmnParty).regulatoryProfile.fatcaProfile;
         $emir := CAST(CMN_LegalEntity, $cmnParty).regulatoryProfile.emir;
         $cmnCRSObligation := CAST(CMN_LegalEntity, $cmnParty).regulatoryProfile.CRSObligation;
         CAST(CMN_LegalEntity, $cmnParty).regulatoryProfile.setSILID(INT_SILMappingSILtoCMN._mapString(CAST(CMN_LegalEntity, $cmnParty).getSILID(), $silTaxInformation.id));
      End
      /********** TAX INFORMATION *************/
      If $cmnParty.type.isPhysicalPerson() Then
         //*** FATCA *****
         $fatcaProfile.citizen := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfile.citizen, $silTaxInformation.usPersonIndicator);
         //*** UKRND *****
         $ukNonDomiciled.isUKResidentNoNDomiciled := INT_SILMappingSILtoCMN._mapBoolean($ukNonDomiciled.isUKResidentNoNDomiciled, $silTaxInformation.ukrndIndicator);
         //*** RUBIK *****
         //$rubik.canProvideCertificateResidence
         //*** ESD *****
         //$esd.canProvideCertificateResidence
      Else
         $emir.hasPlanToInvestDerivatives := INT_SILMappingSILtoCMN._mapBoolean($emir.hasPlanToInvestDerivatives, $silTaxInformation.subjectToEMIRIndicator);
         //$fatcaProfileLegal.isIncorporatedUnderUSCountry := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfileLegal.isIncorporatedUnderUSCountry, $silTaxInformation.ukrndIndicator);
         $fatcaProfileLegal.isEntityUS := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfileLegal.isEntityUS, $silTaxInformation.usCompanyIndicator);
      End
      /********** TINS ******************/
      Try
         $taxTransparency.residencyForTaxPurposes.hasTaxTrasparent := INT_SILMappingSILtoCMN._mapBoolean($taxTransparency.residencyForTaxPurposes.hasTaxTrasparent, $silTaxInformation.fiscallyTransparentEntityIndicator);
         If LIB_Validator.validateNotEmptyIndexed($silTaxInformation.tins) Then
            SIL_INVOLVEDPARTYtaxIdentificationNumber $tin;
            Boolean $primaryAdded := false;
            ForEach $tin In $silTaxInformation.tins Do
               If $tin.type == 'Tax identification number' Then
                  $taxTransparency.residencyForTaxPurposes.type := INT_SILMappingSILtoCMN._mapString($taxTransparency.residencyForTaxPurposes.type, LIST($tin.TaxResidentOption, 'COB_ResidencyForTaxPurpose', 'id', 'sil_Id'));
                  $taxTransparency.residencyForTaxPurposes.isMain := INT_SILMappingSILtoCMN._mapBoolean($taxTransparency.residencyForTaxPurposes.isMain, $tin.isPrimary);
                  If NotEmpty($tin.identificationNumber) Then
                     $taxTransparency.residencyForTaxPurposes.tin := INT_SILMappingSILtoCMN._mapString($taxTransparency.residencyForTaxPurposes.tin, $tin.identificationNumber);
                     //$taxTransparency.residencyForTaxPurposes.type := 'tin';
                  ElseIf NotEmpty($tin.reasonOfUnableToObtainTIN) Then
                     //$taxTransparency.residencyForTaxPurposes.type := 'obtainTin';
                     $taxTransparency.residencyForTaxPurposes.reason := INT_SILMappingSILtoCMN._mapString($taxTransparency.residencyForTaxPurposes.reason, LIST($tin.reasonOfUnableToObtainTIN, 'CMN_UnableObtainTINReasons', 'id', 'sil_Id'));
                     $taxTransparency.residencyForTaxPurposes.commentReason := INT_SILMappingSILtoCMN._mapString($taxTransparency.residencyForTaxPurposes.commentReason, $tin.reasonOfUnableToObtainTINDescription);
                  End
                  IF($tin.country != null, $taxTransparency.residencyForTaxPurposes.country := INT_SILMappingSILtoCMN._mapString($taxTransparency.residencyForTaxPurposes.country, $tin.country.code));
                  $primaryAdded := true;
               End
            End
            ForEach $tin In $silTaxInformation.tins Do
               If not $primaryAdded and $tin.type == 'Tax Residence Country (Primary)' Then
                  $taxTransparency.residencyForTaxPurposes.type := INT_SILMappingSILtoCMN._mapString($taxTransparency.residencyForTaxPurposes.type, LIST($tin.TaxResidentOption, 'COB_ResidencyForTaxPurpose', 'id', 'sil_Id'));
                  $taxTransparency.residencyForTaxPurposes.isMain := INT_SILMappingSILtoCMN._mapBoolean($taxTransparency.residencyForTaxPurposes.isMain, $tin.isPrimary);
                  If NotEmpty($tin.identificationNumber) Then
                     $taxTransparency.residencyForTaxPurposes.tin := INT_SILMappingSILtoCMN._mapString($taxTransparency.residencyForTaxPurposes.tin, $tin.identificationNumber);
                     //$taxTransparency.residencyForTaxPurposes.type := 'tin';
                  End
                  IF($tin.country != null, $taxTransparency.residencyForTaxPurposes.country := INT_SILMappingSILtoCMN._mapString($taxTransparency.residencyForTaxPurposes.country, $tin.country.code));
                  $primaryAdded := true;
               ElseIf $tin.type == 'Tax Residence Country (Primary)' or $tin.type == 'Tax Residence Country (Additional)' Then
                  CMN_ResidencyForTaxPurposes $cmnResidencyForTaxPurposes := NEW(CMN_ResidencyForTaxPurposes);
                  $cmnResidencyForTaxPurposes.type := INT_SILMappingSILtoCMN._mapString($cmnResidencyForTaxPurposes.type, LIST($tin.TaxResidentOption, 'COB_ResidencyForTaxPurpose', 'id', 'sil_Id'));
                  $cmnResidencyForTaxPurposes.isMain := INT_SILMappingSILtoCMN._mapBoolean($cmnResidencyForTaxPurposes.isMain, $tin.isPrimary);
                  IF($tin.country != null, $cmnResidencyForTaxPurposes.country := INT_SILMappingSILtoCMN._mapString($cmnResidencyForTaxPurposes.country, $tin.country.code));
                  If NotEmpty($tin.identificationNumber) Then
                     $cmnResidencyForTaxPurposes.tin := INT_SILMappingSILtoCMN._mapString($cmnResidencyForTaxPurposes.tin, $tin.identificationNumber);
                     $cmnResidencyForTaxPurposes.type := 'tin';
                  End
                  $taxTransparency.additionalResidencyInformation.addElement($cmnResidencyForTaxPurposes);
               End
            End
         End
         $taxTransparency.hasTaxAdvisor := INT_SILMappingSILtoCMN._mapBoolean($taxTransparency.hasTaxAdvisor, $silTaxInformation.taxAdvisorIndicator);
         If $taxTransparency.hasTaxAdvisor Then
            If LIB_Validator.validateNotEmptyIndexed($silTaxInformation.taxAdvisors) Then
               If ISA($silTaxInformation.taxAdvisors[1].party, SIL_INVOLVEDPARTYindividual) Then
                  If LIB_Validator.validateNotEmptyIndexed($silTaxInformation.taxAdvisors[1].party.names) Then
                     SIL_INVOLVEDPARTYindividualName $silIndividualName := CAST(SIL_INVOLVEDPARTYindividualName, $silTaxInformation.taxAdvisors[1].party.names[1]);
                     $taxTransparency.taxAdvisorFirstName := INT_SILMappingSILtoCMN._mapString($taxTransparency.taxAdvisorFirstName, $silIndividualName.firstName);
                     $taxTransparency.taxAdvisorLastName := INT_SILMappingSILtoCMN._mapString($taxTransparency.taxAdvisorLastName, $silIndividualName.lastName);
                  End
               Else
                  If LIB_Validator.validateNotEmptyIndexed($silTaxInformation.taxAdvisors[1].party.names) Then
                     SIL_INVOLVEDPARTYorganizationName $silOrganizationName := CAST(SIL_INVOLVEDPARTYorganizationName, $silTaxInformation.taxAdvisors[1].party.names[1]);
                     $taxTransparency.taxAdvisoTradingName := INT_SILMappingSILtoCMN._mapString($taxTransparency.taxAdvisoTradingName, $silOrganizationName.tradingName);
                  End
               End
               If LIB_Validator.validateNotEmptyIndexed($silTaxInformation.taxAdvisors[1].party.addresses) Then
                  ForEach SIL_INVOLVEDPARTYaddress $silAddress In $silTaxInformation.taxAdvisors[1].party.addresses Do
                     If ISA($silAddress, SIL_INVOLVEDPARTYpostalAddress) && $silAddress.type == LIST('generic', 'CMN_AddressTypes__selector', 'code') Then
                        $taxTransparency.taxAdvisorProfessionalAddress := INT_SILMappingSILtoCMN.createCMNMailAddressFromSILPostalAddress($taxTransparency.taxAdvisorProfessionalAddress, CAST(SIL_INVOLVEDPARTYpostalAddress, $silAddress));
                     End
                  End
               End
            End
         End
         $taxTransparency.hasOtherCountryConnections := INT_SILMappingSILtoCMN._mapBoolean($taxTransparency.hasOtherCountryConnections, $silTaxInformation.otherCountryConnectionIndicator);
         $taxTransparency.otherCountryConnections := INT_SILMappingSILtoCMN._mapString($taxTransparency.otherCountryConnections, $silTaxInformation.otherCountryConnectionDescription);
      Catch
         LIB_Logger.integrationError('[TAX_INFORMATION] Exception: ' & TOSTRING($exception));
      End
      /********** TAX DETAILS *************/
      If $cmnParty.type.isPhysicalPerson() Then
         If LIB_Validator.validateNotEmptyIndexed($silTaxInformation.taxDetails) Then
            ForEach SIL_INVOLVEDPARTYtaxDetail $silTD In $silTaxInformation.taxDetails Do
               $taxTransparency.openingAccountReason := INT_SILMappingSILtoCMN._mapString($taxTransparency.openingAccountReason, $silTD.bookingCentreDissemblanceOpenReason);
               If ISA($silTD, SIL_INVOLVEDPARTYusTaxPolicy) Then
                  SIL_INVOLVEDPARTYusTaxPolicy $usTaxPolicy := CAST(SIL_INVOLVEDPARTYusTaxPolicy, $silTD);
                  If $usTaxPolicy.finalClassification != null Then
                     $fatcaProfile.fatcaClassification := INT_SILMappingSILtoCMN._mapString($fatcaProfile.fatcaClassification, LIST($usTaxPolicy.finalClassification.classification, 'CMN_FatcaClassificationList', 'id', 'sil_Id'));
                  End
                  $fatcaProfile.taxpayer := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfile.taxpayer, $usTaxPolicy.usPresenceIndicator);
                  $fatcaProfile.hasUSTins := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfile.hasUSTins, $usTaxPolicy.hasUSTINIndicator);
                  $fatcaProfile.hasPartyLiveInUsFrom12Months := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfile.hasPartyLiveInUsFrom12Months, $usTaxPolicy.organizationUSPlaceOfBusinessIndicator);
                  $fatcaProfile.amountOfTimeInUSComment := INT_SILMappingSILtoCMN._mapString($fatcaProfile.amountOfTimeInUSComment, $usTaxPolicy.moreThan30DaysinUSLast12MonthsDescription);
                  $fatcaProfile.hasAddressInUS := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfile.hasAddressInUS, $usTaxPolicy.nonUSEntityUSLocationIndicator);
                  $fatcaProfile.isUSPersonForTaxPurposes := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfile.isUSPersonForTaxPurposes, $usTaxPolicy.usPersonOtherReasonIndicator);
                  $fatcaProfile.hasConstructiveControl := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfile.hasConstructiveControl, $usTaxPolicy.hasConstructiveControlOfAccountIndicator);
                  $fatcaProfile.confirmNatureOfBusiness := INT_SILMappingSILtoCMN._mapString($fatcaProfile.confirmNatureOfBusiness, $usTaxPolicy.purposeOfUSAddress);
                  $fatcaProfile.otherUSConnection := INT_SILMappingSILtoCMN._mapString($fatcaProfile.otherUSConnection, $usTaxPolicy.usConnectionOtherComment);
                  If $usTaxPolicy.accountRelevantParty != null && $usTaxPolicy.accountRelevantParty.party != null && ISA($usTaxPolicy.accountRelevantParty.party, SIL_INVOLVEDPARTYindividual) Then
                     $fatcaProfileLegal.isDecentUsPerson := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfileLegal.isDecentUsPerson, CAST(SIL_INVOLVEDPARTYindividual, $usTaxPolicy.accountRelevantParty.party).deceasedIndicator && $silTaxInformation.usPersonIndicator == true);
                  End
               ElseIf ISA($silTD, SIL_INVOLVEDPARTYukrnd) Then
                  SIL_INVOLVEDPARTYukrnd $ukrnd := CAST(SIL_INVOLVEDPARTYukrnd, $silTD);
                  If $ukrnd.accountRelevantParty != null && $ukrnd.accountRelevantParty.party != null && ISA($ukrnd.accountRelevantParty.party, SIL_INVOLVEDPARTYindividual) Then
                     $ukNonDomiciled.countryOfDomicile := INT_SILMappingSILtoCMN._mapString($ukNonDomiciled.countryOfDomicile, CAST(SIL_INVOLVEDPARTYindividual, $ukrnd.accountRelevantParty.party).domicile);
                  End
               End
            End
         End
      Else
         $cmnCRSObligation.isCRSEntityTypeKnow := INT_SILMappingSILtoCMN._mapBoolean($cmnCRSObligation.isCRSEntityTypeKnow, false);
         If LIB_Validator.validateNotEmptyIndexed($silTaxInformation.taxDetails) Then
            ForEach SIL_INVOLVEDPARTYtaxDetail $silTD In $silTaxInformation.taxDetails Do
               $taxTransparency.openingAccountReason := INT_SILMappingSILtoCMN._mapString($taxTransparency.openingAccountReason, $silTD.bookingCentreDissemblanceOpenReason);
               If ISA($silTD, SIL_INVOLVEDPARTYusTaxPolicy) Then
                  SIL_INVOLVEDPARTYusTaxPolicy $usTaxPolicy := CAST(SIL_INVOLVEDPARTYusTaxPolicy, $silTD);
                  $fatcaProfileLegal.chapterThree := INT_SILMappingSILtoCMN._mapString($fatcaProfileLegal.chapterThree, LIST($usTaxPolicy.chapter3Status, 'CMN_ChapterThree', 'id', 'sil_Id'));
                  $fatcaProfileLegal.w8FormClassification := INT_SILMappingSILtoCMN._mapString($fatcaProfileLegal.w8FormClassification, LIST($usTaxPolicy.w8Classification, 'CMN_W8FormClassification', 'id', 'sil_Id'));
                  $fatcaProfileLegal.isUSPrincipalPlace := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfileLegal.isUSPrincipalPlace, $usTaxPolicy.organizationUSPlaceOfBusinessIndicator);
                  $fatcaProfileLegal.principalPlaceCountry.clear();
                  If $usTaxPolicy.finalClassification != null Then
                     $fatcaProfileLegal.fatcaClassification := INT_SILMappingSILtoCMN._mapString($fatcaProfileLegal.fatcaClassification, LIST($usTaxPolicy.finalClassification.classification, 'CMN_FatcaClassificationList', 'id', 'sil_Id'));
                  End
                  $fatcaProfileLegal.isNotUSAgency := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfileLegal.isNotUSAgency, $usTaxPolicy.usPresenceIndicator);
                  $fatcaProfileLegal.notUSAgencyCountry.clear();
                  $fatcaProfileLegal.hasUSTins := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfileLegal.hasUSTins, $usTaxPolicy.hasUSTINIndicator);
                  $fatcaProfileLegal.isFlowThorugh := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfileLegal.isFlowThorugh, $usTaxPolicy.organisationFlowThroughIndicator);
                  $fatcaProfileLegal.isAllBOIndividual := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfileLegal.isAllBOIndividual, $usTaxPolicy.organisationFlowThroughBeneficiaryisIndividualIndicator);
                  $fatcaProfileLegal.isAnyUSPersonInBO := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfileLegal.isAnyUSPersonInBO, $usTaxPolicy.organisationFlowThroughBeneficiaryisUsPersonIndicator);
                  $fatcaProfileLegal.isformationDocuments := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfileLegal.isformationDocuments, $usTaxPolicy.organizationUSCourtJusidictionLiableIndicator);
                  $fatcaProfileLegal.isDisregardedOrTaxExempt := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfileLegal.isDisregardedOrTaxExempt, $usTaxPolicy.organizationUSTaxExemptionIndicator);
                  $fatcaProfileLegal.isIncorporatedUnderUSCountry := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfileLegal.isIncorporatedUnderUSCountry, $usTaxPolicy.organizationUSEstabilshedEntityIndicator);
                  $fatcaProfileLegal.descUSPersonCapacitiesTrust := INT_SILMappingSILtoCMN._mapString($fatcaProfileLegal.descUSPersonCapacitiesTrust, $usTaxPolicy.entityContainingUSPersonDescription);
                  $fatcaProfileLegal.hasUSPersCapacities := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfileLegal.hasUSPersCapacities, INT_SILMatchingTools.matchSILYesNoToCMNBoolean($usTaxPolicy.organizationUSExternalPersonRoleCode));
                  $fatcaProfileLegal.hasUSPersonCapacitiesTrust := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfileLegal.hasUSPersonCapacitiesTrust, INT_SILMatchingTools.matchSILYesNoToCMNBoolean($usTaxPolicy.organizationUSExternalPersonRoleCode));
                  $fatcaProfileLegal.isPlanEmployeesUsPerson := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfileLegal.isPlanEmployeesUsPerson, $usTaxPolicy.organizationPensionPlanUSPersonIndicator);
                  $fatcaProfileLegal.isEntityActivity := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfileLegal.isEntityActivity, $usTaxPolicy.organizationUSTaxLiableIndicator);
                  If $fatcaProfileLegal.isUSPrincipalPlace && LIB_Validator.validateNotEmptyIndexed($usTaxPolicy.organizationUSPlaceOfBusinessCounties) Then
                     ForEach SIL_STATICcountry $silCountry In $usTaxPolicy.organizationUSPlaceOfBusinessCounties Do
                        If NotEmpty($silCountry.code) Then
                           $fatcaProfileLegal.principalPlaceCountry.addElement($silCountry.code);
                        End
                     End
                  End
                  If $fatcaProfileLegal.isNotUSAgency && LIB_Validator.validateNotEmptyIndexed($usTaxPolicy.organizationNonUSEstabilshedEntityCountries) Then
                     ForEach SIL_STATICcountry $silCountry In $usTaxPolicy.organizationNonUSEstabilshedEntityCountries Do
                        If NotEmpty($silCountry.code) Then
                           $fatcaProfileLegal.notUSAgencyCountry.addElement($silCountry.code);
                        End
                     End
                  End
               ElseIf ISA($silTD, SIL_INVOLVEDPARTYrubik) Then
                  //SIL_INVOLVEDPARTYrubik $silRubik := CAST(SIL_INVOLVEDPARTYrubik, $silTD);
                  //$fatcaProfileLegal.isUSPrincipalPlace := INT_SILMappingSILtoCMN._mapBoolean($fatcaProfileLegal.isUSPrincipalPlace, LIST($silRubik.status, 'CMN_RubikPersonStatus', 'id', 'sil_Id'));
               ElseIf ISA($silTD, SIL_INVOLVEDPARTYcrs) Then
                  SIL_INVOLVEDPARTYcrs $silCRS := CAST(SIL_INVOLVEDPARTYcrs, $silTD);
                  $cmnCRSObligation.isCRSEntityTypeKnow := INT_SILMappingSILtoCMN._mapBoolean($cmnCRSObligation.isCRSEntityTypeKnow, true);
                  $cmnCRSObligation.CRSentityType := INT_SILMappingSILtoCMN._mapString($cmnCRSObligation.CRSentityType, LIST($silCRS.crsEntityTyp, 'CMN_CRSEntityTypes', 'id', 'sil_Id'));
                  $cmnCRSObligation.CRSInvestmentEntitySubCat := INT_SILMappingSILtoCMN._mapString($cmnCRSObligation.CRSInvestmentEntitySubCat, LIST($silCRS.crsEntitySubType, 'CMN_CRSEntitySubTypes', 'id', 'sil_Id'));
                  $cmnCRSObligation.hasControllingPerson := INT_SILMappingSILtoCMN._mapBoolean($cmnCRSObligation.hasControllingPerson, $silCRS.organizationKnowControllingPersonIndicator);
                  $cmnCRSObligation.financialInstControllingPerson.clear();
                  If LIB_Validator.validateNotEmptyIndexed($silCRS.controllingPersons) Then
                     ForEach SIL_INVOLVEDPARTYinvolvedPartyRole $silRole In $silCRS.controllingPersons Do
                        If ISA($silRole, SIL_INVOLVEDPARTYcontrollingPersonRole) Then
                           SIL_INVOLVEDPARTYcontrollingPersonRole $controllingRole := CAST(SIL_INVOLVEDPARTYcontrollingPersonRole, $silRole);
                           CMN_ControllingPerson $cmnControllingPerson := NEW(CMN_ControllingPerson);
                           If $controllingRole.party != null && ISA($controllingRole.party, SIL_INVOLVEDPARTYindividual) Then
                              SIL_INVOLVEDPARTYindividual $silIndividual := CAST(SIL_INVOLVEDPARTYindividual, $controllingRole.party);
                              If LIB_Validator.validateNotEmptyIndexed($silIndividual.names) Then
                                 ForEach SIL_INVOLVEDPARTYinvolvedPartyName $involvedPartyName In $silIndividual.names Do
                                    If ISA($involvedPartyName, SIL_INVOLVEDPARTYindividualName) Then
                                       SIL_INVOLVEDPARTYindividualName $silCRSName := CAST(SIL_INVOLVEDPARTYindividualName, $involvedPartyName);
                                       $cmnControllingPerson.firstName := INT_SILMappingSILtoCMN._mapString($cmnControllingPerson.firstName, $silCRSName.firstName);
                                       $cmnControllingPerson.lastName := INT_SILMappingSILtoCMN._mapString($cmnControllingPerson.lastName, $silCRSName.lastName);
                                    End
                                 End
                              End
                           End
                           $cmnControllingPerson.type := INT_SILMappingSILtoCMN._mapString($cmnControllingPerson.type, LIST($controllingRole.controllingPersonType, 'CMN_ControllingPersonType', 'id', 'sil_Id'));
                           $cmnCRSObligation.financialInstControllingPerson.addElement($cmnControllingPerson);
                        End
                     End
                  End
                  If $silCRS.accountRelevantParty != null Then
                     If $silCRS.accountRelevantParty.party != null && ISA($silCRS.accountRelevantParty.party, SIL_INVOLVEDPARTYorganization) Then
                        SIL_INVOLVEDPARTYorganization $silMarketOrganization := CAST(SIL_INVOLVEDPARTYorganization, $silCRS.accountRelevantParty.party);
                        $cmnCRSObligation.activeNFENameSecuritiesMarket := INT_SILMappingSILtoCMN._mapString($cmnCRSObligation.activeNFENameSecuritiesMarket, $silMarketOrganization.stockExchangeCode);
                        If LIB_Validator.validateNotEmptyIndexed($silMarketOrganization.names) Then
                           ForEach SIL_INVOLVEDPARTYinvolvedPartyName $silName In $silMarketOrganization.names Do
                              If ISA($silName, SIL_INVOLVEDPARTYorganizationName) Then
                                 $cmnCRSObligation.activeNFENameTradedCorp := INT_SILMappingSILtoCMN._mapString($cmnCRSObligation.activeNFENameTradedCorp, CAST(SIL_INVOLVEDPARTYorganizationName, $silName).businessName);
                              End
                           End
                        End
                     End
                  End
                  If NotEmpty($silCRS.giinCode) Then
                     Indexed String $silGinCodeFull := SPLIT($silCRS.giinCode, '.');
                     For Integer $i := 1 Condition $i <= SIZE($silGinCodeFull) Step $i := $i + 1 Do
                        If $i == 1 Then
                           $cmnCRSObligation.firstPartGIIN := $silGinCodeFull[$i];
                        ElseIf $i == 2 Then
                           $cmnCRSObligation.secondPartGIIN := $silGinCodeFull[$i];
                        ElseIf $i == 3 Then
                           $cmnCRSObligation.thirdPartGIIN := $silGinCodeFull[$i];
                        ElseIf $i == 4 Then
                           $cmnCRSObligation.fourthPartGIIN := $silGinCodeFull[$i];
                        End
                     End
                  End
               ElseIf ISA($silTD, SIL_INVOLVEDPARTYeusd) Then
                  SIL_INVOLVEDPARTYeusd $silEUSD := CAST(SIL_INVOLVEDPARTYeusd, $silTD);
                  If $cmnParty.type.getTypeId() == CMN_PartyType.typeTrust() Then
                     CAST(CMN_LegalEntityTrustFoundation, $cmnParty).hasESDStatus := INT_SILMappingSILtoCMN._mapBoolean(CAST(CMN_LegalEntityTrustFoundation, $cmnParty).hasESDStatus, $silEUSD.trusteeisPayingAgentIndicator);
                  End
               End
            End
         End
      End
   End
   Return $cmnParty;
End]]></definition>
        </method>
        <method name="createCMNPartyRoles" userId="pezzi" uuid="ffffffff-de25-003f-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createCMNPartyRoles'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createCMNPartyRoles(CMN_Party $cmnParty, CMN_BusinessRelationship $br,Named INT_SILReadPartyResponse $readPartyResponses) : Nothing Begin
   //If $cmnParty.
End]]></definition>
        </method>
        <method name="createCMNPhysicalPerson" userId="pezzi" uuid="00000000-2ee7-23d4-0000-000000000000">
            <definition><![CDATA[StaticFunction createCMNPhysicalPerson(CMN_Party $cmnParty, SIL_INVOLVEDPARTYindividual $silIndividual) : CMN_PhysicalPerson Begin
   CMN_PhysicalPerson $cmnPhysicalPerson;
   If $cmnParty == null or not $cmnParty.type.isPhysicalPerson() Then
      $cmnPhysicalPerson := NEW(CMN_PhysicalPerson, CMN_PartyType.typePhysicalPerson());
   Else
      $cmnPhysicalPerson := CAST(CMN_PhysicalPerson, $cmnParty);
   End
   If $silIndividual == null Then
      Return $cmnPhysicalPerson;
   End
   /************************************* NAME MAPPING *********************************/
   SIL_INVOLVEDPARTYindividualName $silIndividualName := INT_SILUtils.getFirstIndividualName($silIndividual.names);
   If $silIndividualName != null Then
      $cmnPhysicalPerson.salutation := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPerson.salutation, LIST($silIndividualName.title, 'CMN_Salutations__selector', 'id', 'sil_Id'));
      $cmnPhysicalPerson.firstName := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPerson.firstName, $silIndividualName.firstName);
      $cmnPhysicalPerson.suffix := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPerson.suffix, $silIndividualName.suffix);
      $cmnPhysicalPerson.lastName := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPerson.lastName, $silIndividualName.lastName);
      $cmnPhysicalPerson.alias := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPerson.alias, $silIndividualName.alias);
      $cmnPhysicalPerson.middleName := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPerson.middleName, $silIndividualName.middleName);
      $cmnPhysicalPerson.formerMaidenName := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPerson.formerMaidenName, $silIndividualName.maidenName);
      $cmnPhysicalPerson.otherSalutation := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPerson.otherSalutation, $silIndividualName.otherTitle);
   End
   ForEach SIL_INVOLVEDPARTYinvolvedPartyName $silInvolvedPartyName In $silIndividual.names Do
      If ISA($silInvolvedPartyName, SIL_INVOLVEDPARTYindividualName) && not $silInvolvedPartyName.isValid Then
         $cmnPhysicalPerson.previousName := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPerson.previousName, $silIndividualName.lastName);
      End
   End
   If LIB_Validator.validateNotEmptyIndexed($silIndividual.documentationItems) Then
      SIL_INVOLVEDPARTYdocumentationItem $silDocumentationItem;
      ForEach $silDocumentationItem In $silIndividual.documentationItems Do
         If ISA($silDocumentationItem, SIL_INVOLVEDPARTYregistrationDocumentation) Then
            SIL_INVOLVEDPARTYregistrationDocumentation $silRegistrationDocumentation := CAST(SIL_INVOLVEDPARTYregistrationDocumentation, $silDocumentationItem);
            $cmnPhysicalPerson.regulatoryProfile.sfcCodeOfConduct.isConsentLetterRequired := INT_SILMappingSILtoCMN._mapBoolean($cmnPhysicalPerson.regulatoryProfile.sfcCodeOfConduct.isConsentLetterRequired, $silRegistrationDocumentation.consentLetterRequiredIndicator);
            Break;
         End
      End
   End
   /************************************* GENERAL FIELDS MAPPING ***********************/
   $cmnPhysicalPerson.gender := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPerson.gender, LIST($silIndividual.gender, 'SIL_Genders', 'cmn_id'));
   $cmnPhysicalPerson.maritalStatus := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPerson.maritalStatus, $silIndividual.maritalStatus);
   $cmnPhysicalPerson.dateOfBirth := INT_SILMappingSILtoCMN._mapDate($cmnPhysicalPerson.dateOfBirth, $silIndividual.dateOfBirth);
   $cmnPhysicalPerson.townOfBirth := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPerson.townOfBirth, $silIndividual.placeOfBirth);
   $cmnPhysicalPerson.isPartyAlive := INT_SILMappingSILtoCMN._mapBoolean($cmnPhysicalPerson.isPartyAlive, $silIndividual.deceasedIndicator);
   /************************************* COUNTRY MAPPING ******************************/
   If $silIndividual.countryOfBirth != null && $silIndividual.countryOfBirth.code != null Then
      $cmnPhysicalPerson.countryOfBirth := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPerson.countryOfBirth, $silIndividual.countryOfBirth.code);
   End
   /************************************* COUNTRY ADDRESSES ****************************/
   If LIB_Validator.validateNotEmptyIndexed($silIndividual.nationalities) Then
      SIL_STATICcountry $silCountry;
      ForEach $silCountry In $silIndividual.nationalities Do
         If $silCountry != null && $silCountry.code != null Then
            If EQUAL($silCountry.type, 'MAIN') Then
               $cmnPhysicalPerson.nationalities.mainNationality := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPerson.nationalities.mainNationality, $silCountry.code);
            ElseIf EQUAL($silCountry.type, 'SECOND') Then
               $cmnPhysicalPerson.nationalities.secondNationality := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPerson.nationalities.secondNationality, $silCountry.code);
            ElseIf EQUAL($silCountry.type, 'THIRD') Then
               $cmnPhysicalPerson.nationalities.thirdNationality := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPerson.nationalities.thirdNationality, $silCountry.code);
            End
         End
      End
   End
   /****************************** FATCA PROFILE ***************************************/
   $cmnPhysicalPerson.regulatoryProfile.fatcaProfile.hasUSPassport := INT_SILMappingSILtoCMN._mapBoolean($cmnPhysicalPerson.regulatoryProfile.fatcaProfile.hasUSPassport, $silIndividual.holdUSPassportIndicator);
   $cmnPhysicalPerson.regulatoryProfile.fatcaProfile.hasOtherUSVisa := INT_SILMappingSILtoCMN._mapBoolean($cmnPhysicalPerson.regulatoryProfile.fatcaProfile.hasOtherUSVisa, $silIndividual.holdUSVisaIndicator);
   $cmnPhysicalPerson.regulatoryProfile.fatcaProfile.otherUSImmigrationNumber := INT_SILMappingSILtoCMN._mapString($cmnPhysicalPerson.regulatoryProfile.fatcaProfile.otherUSImmigrationNumber, $silIndividual.holdUSVisaDescription);
   $cmnPhysicalPerson.regulatoryProfile.fatcaProfile.hasGreenCard := INT_SILMappingSILtoCMN._mapBoolean($cmnPhysicalPerson.regulatoryProfile.fatcaProfile.hasGreenCard, $silIndividual.holdUSGreenCardIndicator);
   $cmnPhysicalPerson.getKYCProfile().updateRiskAssessment($cmnPhysicalPerson);
   Return $cmnPhysicalPerson;
End]]></definition>
        </method>
        <method name="createCMNSearchedAccountFromSILAccount" userId="pezzi" uuid="00000000-276a-1f7f-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createCMNSearchedAccountFromSILAccount'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createCMNSearchedAccountFromSILAccount(CMN_SearchedBusinessRelationship $cmnSearchedAccount, SIL_ACCOUNTaccount $silAccount) : CMN_SearchedBusinessRelationship Begin
   /****************** CREATE PARTY ************************************/
   If $cmnSearchedAccount == null and $silAccount != null Then
      If ISA($silAccount, 'SIL_ACCOUNTaccount') Then
         $cmnSearchedAccount := NEW(CMN_SearchedBusinessRelationship);
      Else
         FAIL('Unknow Data Type: ' & TOSTRING($silAccount));
      End
      $cmnSearchedAccount.accountId := ERROR($silAccount.accountId, '');
      $cmnSearchedAccount.accountNumber := ERROR($silAccount.number, '');
      $cmnSearchedAccount.name := ERROR($silAccount.longName, '');
      $cmnSearchedAccount.status := ERROR($silAccount.status, '');
      $cmnSearchedAccount.openingDate := ERROR($silAccount.openingDate, null);
      $cmnSearchedAccount.location := ERROR($silAccount.society, '');
      If EMPTY($silAccount.internalAccountOfficer) Then
         $cmnSearchedAccount.relationshipManager := 'unavailable';
      Else
         LIB_User $user := NEW(LIB_User, ($silAccount.internalAccountOfficer));
         If $user.exist() Then
            If $user.isRelationshipManager() Then
               $cmnSearchedAccount.relationshipManager := $user.getFullName();
            Else
               $cmnSearchedAccount.relationshipManager := 'Not RM';
            End
         Else
            $cmnSearchedAccount.relationshipManager := 'Unknown';
         End
      End
   End
   /****************** RETURN RESULT ***********************************/
   Return $cmnSearchedAccount;
End]]></definition>
        </method>
        <method name="createCMNSearchedPartyFromSILInvolvedParty" userId="gurcay" uuid="ffffffff-a938-ca2a-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createCMNSearchedPartyFromSILInvolvedParty'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createCMNSearchedPartyFromSILInvolvedParty(CMN_SearchedParty $cmnSearchedParty, SIL_INVOLVEDPARTYinvolvedParty $silInvolvedParty) : CMN_SearchedParty Begin
   /****************** CREATE PARTY ************************************/
   If $cmnSearchedParty == null and $silInvolvedParty != null Then
      If ISA($silInvolvedParty, 'SIL_INVOLVEDPARTYindividual') or ISA($silInvolvedParty, 'SIL_INVOLVEDPARTYorganization') Then
         $cmnSearchedParty := NEW(CMN_SearchedParty);
      Else
         FAIL('Unknow Data Type: ' & TOSTRING($silInvolvedParty));
      End
      If ISA($silInvolvedParty, 'SIL_INVOLVEDPARTYtrust') Then
         SIL_INVOLVEDPARTYtrust $silOrganization := CAST('SIL_INVOLVEDPARTYtrust', $silInvolvedParty);
         $cmnSearchedParty.countryOfIncorporation := ERROR(CAST('SIL_INVOLVEDPARTYincorporation', $silOrganization.documentationItems[1]).incorporateCountry.code, '');
         $cmnSearchedParty.dateOfIncorporation := ERROR(CAST('SIL_INVOLVEDPARTYincorporation', $silOrganization.documentationItems[1]).incorporateDate, null);
         $cmnSearchedParty.placeOfIncorporation := ERROR(CAST('SIL_INVOLVEDPARTYincorporation', $silOrganization.documentationItems[1]).incorporatePlace, '');
         $cmnSearchedParty.companyName := ERROR($silInvolvedParty.names[1].fullName, '');
      ElseIf ISA($silInvolvedParty, 'SIL_INVOLVEDPARTYorganization') Then
         SIL_INVOLVEDPARTYorganization $silOrganization := CAST('SIL_INVOLVEDPARTYorganization', $silInvolvedParty);
         $cmnSearchedParty.countryOfIncorporation := ERROR(CAST('SIL_INVOLVEDPARTYincorporation', $silOrganization.documentationItems[1]).incorporateCountry.code, '');
         $cmnSearchedParty.dateOfIncorporation := ERROR(CAST('SIL_INVOLVEDPARTYincorporation', $silOrganization.documentationItems[1]).incorporateDate, null);
         $cmnSearchedParty.placeOfIncorporation := ERROR(CAST('SIL_INVOLVEDPARTYincorporation', $silOrganization.documentationItems[1]).incorporatePlace, '');
         $cmnSearchedParty.companyName := ERROR($silInvolvedParty.names[1].fullName, '');
      ElseIf ISA($silInvolvedParty, 'SIL_INVOLVEDPARTYindividual') Then
         SIL_INVOLVEDPARTYindividual $silIndividual := CAST('SIL_INVOLVEDPARTYindividual', $silInvolvedParty);
         $cmnSearchedParty.birthDate := ERROR($silIndividual.dateOfBirth, null);
         $cmnSearchedParty.countryBirth := ERROR($silIndividual.countryOfBirth.code, '');
         $cmnSearchedParty.townBirth := ERROR($silIndividual.placeOfBirth, '');
         $cmnSearchedParty.firstName := ERROR(CAST('SIL_INVOLVEDPARTYindividualName', $silInvolvedParty.names[1]).firstName, '');
         $cmnSearchedParty.lastName := ERROR(CAST('SIL_INVOLVEDPARTYindividualName', $silInvolvedParty.names[1]).lastName, '');
      End
      $cmnSearchedParty.clientStatus := ERROR(CAST('SIL_INVOLVEDPARTYcustomerRole', $silInvolvedParty.roles[1]).clientStatus, '');
      $cmnSearchedParty.partyID := ERROR($silInvolvedParty.id, '');
      $cmnSearchedParty.grantedIndicator := IF($silInvolvedParty.hasProperty('grantedIndicator'), $silInvolvedParty.grantedIndicator, true);
   End
   /****************** RETURN RESULT ***********************************/
   Return $cmnSearchedParty;
End]]></definition>
        </method>
    </methods>
</class>

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       1,884,691,0
<?xml version="1.0" encoding="UTF-8"?>
<object xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="object.xsd">
    <id>CMN_FCCRiskSummary.non.fccram.compliance.regulatory.issues</id>
    <uuid>30afdc57-bfd7-48f4-abda-003579490fa3</uuid>
    <type>Label</type>
    <name/>
    <description/>
    <creator>gurcay</creator>
    <creationTime>1472639484627</creationTime>
    <modifier>gurcay</modifier>
    <modificationTime>1472639501391</modificationTime>
    <active>true</active>
    <versionUuid>d7d24c59-1a5c-4b6c-8b10-5a4280464554</versionUuid>
    <parentVersionUuid/>
    <timestamp>1475260129806</timestamp>
    <systemId>h-global-predev.appway.com</systemId>
    <copyOfUuid>0f1b586d-a239-40cd-9bc4-a97b44c9d7e0</copyOfUuid>
    <committed>true</committed>
    <deleted>false</deleted>
    <userId>magloire</userId>
    <metaData/>
</object>

<?xml version="1.0" encoding="UTF-8"?>
<label version="1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="label.xsd">
    <text language="ch">Compliance, Legal and/or Regulatory issues?</text>
    <text language="de">Compliance, Legal and/or Regulatory issues?</text>
    <text language="en">Compliance, Legal and/or Regulatory issues?</text>
    <text language="fr">Compliance, Legal and/or Regulatory issues?</text>
    <text language="it">Compliance, Legal and/or Regulatory issues?</text>
    <text language="pt">Compliance, Legal and/or Regulatory issues?</text>
    <text language="sp">Compliance, Legal and/or Regulatory issues?</text>
</label>

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           1,866,627,0
<?xml version="1.0" encoding="UTF-8"?>
<object xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="object.xsd">
    <id>CMN_OptionalServiceFactory__vUS</id>
    <uuid>86e5bdad-ac69-4417-a524-44c307c3b2b8</uuid>
    <type>ScriptFunction</type>
    <name/>
    <description/>
    <creator>gurcay</creator>
    <creationTime>1472571572959</creationTime>
    <modifier>gurcay</modifier>
    <modificationTime>1472648643342</modificationTime>
    <active>true</active>
    <versionUuid>51052dbc-bd5d-4252-b6a4-45d64bb9af00</versionUuid>
    <parentVersionUuid/>
    <timestamp>1475260129806</timestamp>
    <systemId>h-global-predev.appway.com</systemId>
    <copyOfUuid>f56ba833-c8e3-4a48-a907-827f78838e30</copyOfUuid>
    <committed>true</committed>
    <deleted>false</deleted>
    <userId>magloire</userId>
    <metaData/>
</object>

<?xml version="1.0" encoding="UTF-8"?>
<scriptfunction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="scriptfunction.xsd">
    <definition><![CDATA[Function CMN_OptionalServiceFactory__vUS(String $optionID) : CMN_OptionalService Begin
   If false Then
      GETBUSINESSOBJECT('Catalog', 'CMN_Options');
   End
   If $optionID == 'safeDepositBox' Then
      Return NEW(CMN_OptionalServiceSafeDepositBox, 'safeDepositBox');
   ElseIf $optionID == 'purposeOfAccount' Then
      Return NEW(CMN_OptionalService, 'purposeOfAccount');
   End
   Return null;
End]]></definition>
</scriptfunction>

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             1,922,215,0
<?xml version="1.0" encoding="UTF-8"?>
<object xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="object.xsd">
    <id>DOCUMENT_TITLE-COB_US29TaxAttachmentX__US</id>
    <uuid>8f2b0e3c-729f-4e18-a315-05f35d4fb21d</uuid>
    <type>Label</type>
    <name/>
    <description/>
    <creator>43368599</creator>
    <creationTime>1473359036524</creationTime>
    <modifier>pbgbtestuser104</modifier>
    <modificationTime>1474052075928</modificationTime>
    <active>true</active>
    <versionUuid>12bb408d-c221-4905-8eb4-3af48aa49680</versionUuid>
    <parentVersionUuid>2fa82de5-2cfd-4563-8ea5-37eefd63029b</parentVersionUuid>
    <timestamp>1475260129806</timestamp>
    <systemId>HSBC COB US DEV</systemId>
    <copyOfUuid>de2e5b0a-4ee5-4f6d-9a11-528b06808c4c</copyOfUuid>
    <committed>true</committed>
    <deleted>false</deleted>
    <userId>magloire</userId>
    <metaData/>
</object>

<?xml version="1.0" encoding="UTF-8"?>
<label version="1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="label.xsd">
    <text language="en">W8 - Attachment X</text>
</label>

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 1,920,535,0
<?xml version="1.0" encoding="UTF-8"?>
<object xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="object.xsd">
    <id>CMN_KycGeneralInformation</id>
    <uuid>050f21da-c725-4466-aa36-e6d6b79cb2d6</uuid>
    <type>DataStructure</type>
    <name/>
    <description/>
    <creator>segafredo</creator>
    <creationTime>1473082604519</creationTime>
    <modifier>segafredo</modifier>
    <modificationTime>1473771014851</modificationTime>
    <active>true</active>
    <versionUuid>ed769919-a8c3-434f-b351-04d286a2702b</versionUuid>
    <parentVersionUuid>b9cf51b1-0d2c-4742-899c-c00428626c18</parentVersionUuid>
    <timestamp>1475260129806</timestamp>
    <systemId>h-global-predev.appway.com</systemId>
    <copyOfUuid>567b85b3-79e2-438d-90f9-ed235f93d2a9</copyOfUuid>
    <committed>true</committed>
    <deleted>false</deleted>
    <userId>magloire</userId>
    <metaData/>
</object>

<?xml version="1.0" encoding="UTF-8"?>
<class dname="" name="CMN_KycGeneralInformation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="dataitemclass.xsd">
    <superclasses>
        <superclass class="INT_SILPersistable"/>
    </superclasses>
    <properties>
        <property collection="none" description="" name="vigilance" reference="false" sequenceNr="0" type="CMN_EnhancedVigilance" userId="segafredo" uuid="990777a8-f5d9-4cbb-bfd1-4cb31f1d691b"/>
    </properties>
    <methods/>
</class>

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   1,891,41237,0
<?xml version="1.0" encoding="UTF-8"?>
<object xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="object.xsd">
    <id>INT_SILUrl</id>
    <uuid>a38a89cc-3e3a-4bec-abd3-c993d103246e</uuid>
    <type>DataStructure</type>
    <name/>
    <description/>
    <creator>mathieu</creator>
    <creationTime>1437131762289</creationTime>
    <modifier>43368599</modifier>
    <modificationTime>1473676734907</modificationTime>
    <active>true</active>
    <versionUuid>26bc8ce3-8044-484d-9529-193ddb18d3d2</versionUuid>
    <parentVersionUuid>19e31b41-aa0c-4fac-a8cd-047e389ede59</parentVersionUuid>
    <timestamp>1475260129806</timestamp>
    <systemId>HSBC COB US DEV</systemId>
    <copyOfUuid>c013145e-e555-4a91-b461-3616490161fe</copyOfUuid>
    <committed>true</committed>
    <deleted>false</deleted>
    <userId>magloire</userId>
    <metaData/>
</object>

<?xml version="1.0" encoding="UTF-8"?>
<class dname="" name="INT_SILUrl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="dataitemclass.xsd">
    <superclasses/>
    <properties/>
    <methods>
        <method name="getAccountAccountAccountIdReferralURL" userId="mathieu" uuid="00000000-6c53-94a0-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountAccountAccountIdReferralURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & '/' & $id & LIB_ConfigHelper.getSILAccountReferralURL();
End]]></definition>
        </method>
        <method name="getAccountAccountAccountReferralIdURL" userId="pezzi" uuid="00000000-2346-0ce0-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountAccountAccountReferralIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL()  & LIB_ConfigHelper.getSILAccountReferralURL()& '/' & $id;
End]]></definition>
        </method>
        <method name="getAccountAccountDeclarationIdURL" userId="pezzi" uuid="ffffffff-926b-7950-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountAccountDeclarationIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('[INT_SILUrl]: Missing Id for Declaration URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & LIB_ConfigHelper.getSILAccountDeclarationURL() & '/' & $id;
End]]></definition>
        </method>
        <method name="getAccountAccountFundingTransferIdURL" userId="43880320-CH01" uuid="ffffffff-91fd-ea82-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountAccountFundingTransferIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & LIB_ConfigHelper.getSILAccountFundingTransferURL() & '/' & $id;
End]]></definition>
        </method>
        <method name="getAccountAccountIdAccountMailInstructionURL" userId="pezzi" uuid="00000000-1d88-89b4-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getAccountAccountIdAccountMailInstructionURL'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction getAccountAccountIdAccountMailInstructionURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & '/' & $id & LIB_ConfigHelper.getSILAccountMailInstructionURL();
End]]></definition>
        </method>
        <method name="getAccountAccountIdAccountRelationURL" userId="mathieu" uuid="00000000-1c85-0b37-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountAccountIdAccountRelationURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & '/' & $id & LIB_ConfigHelper.getSILAccountRelationURL();
End]]></definition>
        </method>
        <method name="getAccountAccountIdCreditPledgeURL" userId="pezzi" uuid="00000000-11dd-3dcc-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getAccountAccountIdCreditPledgeURL'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction getAccountAccountIdCreditPledgeURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & '/' & $id & LIB_ConfigHelper.getSILCreditPledgeURL();
End]]></definition>
        </method>
        <method name="getAccountAccountIdCreditURL" userId="pezzi" uuid="ffffffff-dd3b-b2c5-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getAccountAccountIdCreditURL'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction getAccountAccountIdCreditURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & '/' & $id & LIB_ConfigHelper.getSILCreditURL();
End]]></definition>
        </method>
        <method name="getAccountAccountIdDeclarationURL" userId="pezzi" uuid="ffffffff-ed80-97e6-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountAccountIdDeclarationURL(String $accountId) : String Begin
   IF(EMPTY($accountId), FAIL('[INT_SILUrl]: Missing Account Id for Declaration URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & '/' & $accountId & LIB_ConfigHelper.getSILAccountDeclarationURL();
End]]></definition>
        </method>
        <method name="getAccountAccountIdDetailsURL" userId="pezzi" uuid="ffffffff-ae26-569e-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountAccountIdDetailsURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & '/' & $id & LIB_ConfigHelper.getSILAccountDetailsURL();
End]]></definition>
        </method>
        <method name="getAccountAccountIdEmployeeURL" userId="mathieu" uuid="ffffffff-c646-5730-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountAccountIdEmployeeURL(String $accountId) : String Begin
   IF(EMPTY($accountId), FAIL('[INT_SILUrl]: Missing Account Id for Account Id Employee URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & '/' & $accountId & LIB_ConfigHelper.getSILEmployeeURL();
End]]></definition>
        </method>
        <method name="getAccountAccountIdFundingTransferURL" userId="43880320-CH01" uuid="ffffffff-b82e-f818-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountAccountIdFundingTransferURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & '/' & $id & LIB_ConfigHelper.getSILAccountFundingTransferURL();
End]]></definition>
        </method>
        <method name="getAccountAccountIdFundingURL" userId="pezzi" uuid="00000000-0a82-8803-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountAccountIdFundingURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & '/' & $id & LIB_ConfigHelper.getSILAccountFundingURL();
End]]></definition>
        </method>
        <method name="getAccountAccountIdKycAccountActivityURL" userId="pezzi" uuid="00000000-3a95-b597-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountAccountIdKycAccountActivityURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & '/' & $id & LIB_ConfigHelper.getSILAccountKycURL() & LIB_ConfigHelper.getSILAccountActivityURL();
End]]></definition>
        </method>
        <method name="getAccountAccountIdKycAccountTransferActivityURL" userId="pezzi" uuid="00000000-761f-6dac-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getAccountAccountIdKycAccountTransferActivityURL'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction getAccountAccountIdKycAccountTransferActivityURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & '/' & $id & LIB_ConfigHelper.getSILAccountKycURL() & LIB_ConfigHelper.getSILAccountTransferActivityURL();
End]]></definition>
        </method>
        <method name="getAccountAccountIdPortfolioURL" userId="pezzi" uuid="00000000-5ff3-ad98-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getAccountAccountIdPortfolioURL'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction getAccountAccountIdPortfolioURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & '/' & $id & LIB_ConfigHelper.getSILAccountPortfolioURL();
End]]></definition>
        </method>
        <method name="getAccountAccountIdSubaccount" userId="pezzi" uuid="ffffffff-ea28-82be-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountAccountIdSubaccount(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & '/' & $id & LIB_ConfigHelper.getSILAccountSubAccountSummaryListURL();
End]]></definition>
        </method>
        <method name="getAccountAccountIdSubAccountURL" userId="bellanca" uuid="ffffffff-b719-c1f1-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountAccountIdSubAccountURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & '/' & $id & LIB_ConfigHelper.getSILAccountSubAccountSummaryListURL();
End]]></definition>
        </method>
        <method name="getAccountAccountIdSummaryURL" userId="mathieu" uuid="ffffffff-d90d-f6ba-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountAccountIdSummaryURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & '/' & $id & LIB_ConfigHelper.getSILAccountSummaryURL();
End]]></definition>
        </method>
        <method name="getAccountAccountIdURL" userId="bernard" uuid="ffffffff-c5a8-1bbe-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountAccountIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & '/' & $id;
End]]></definition>
        </method>
        <method name="getAccountAccountURL" userId="pezzi" uuid="ffffffff-dcc6-cd59-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountAccountURL() : String Begin
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL();
End]]></definition>
        </method>
        <method name="getAccountFundingIdURL" userId="pezzi" uuid="ffffffff-8fae-e4ee-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountFundingIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & LIB_ConfigHelper.getSILAccountFundingURL() & '/' & $id;
End]]></definition>
        </method>
        <method name="getAccountInvolvedPartyIdAccountURL" userId="pezzi" uuid="ffffffff-cd10-3ac5-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountInvolvedPartyIdAccountURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id & LIB_ConfigHelper.getSILAccountURL();
End]]></definition>
        </method>
        <method name="getAccountInvolvedPartyIdKycAccountTransferActivityURL" userId="mathieu" uuid="ffffffff-bec3-ac7a-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountInvolvedPartyIdKycAccountTransferActivityURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id & LIB_ConfigHelper.getSILAccountKycURL() & LIB_ConfigHelper.getSILAccountTransferActivityURL();
End]]></definition>
        </method>
        <method name="getAccountKycAccountTransferActivityIdURL" userId="pezzi" uuid="00000000-23b2-488b-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountKycAccountTransferActivityIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountURL() & '/' & $id & LIB_ConfigHelper.getSILAccountKycURL() & LIB_ConfigHelper.getSILAccountTransferActivityURL();
End]]></definition>
        </method>
        <method name="getAccountSubAccountIdURL" userId="mathieu" uuid="ffffffff-ac1e-5390-0000-000000000000">
            <definition><![CDATA[StaticFunction getAccountSubAccountIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountSubAccountSummaryURL() & '/' & $id;
End]]></definition>
        </method>
        <method name="getContactActivityContactActivityVisitCompleteIdURL" userId="mathieu" uuid="00000000-1408-cca6-0000-000000000000">
            <definition><![CDATA[StaticFunction getContactActivityContactActivityVisitCompleteIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathContactActivity() & LIB_ConfigHelper.getSILContactActivityURL() & LIB_ConfigHelper.getSILContactActivityVisitComplementURL() & '/' & $id;
End]]></definition>
        </method>
        <method name="getContactActivityInvolvedPartyIdContactActivityURL" userId="mathieu" uuid="00000000-65e1-5081-0000-000000000000">
            <definition><![CDATA[StaticFunction getContactActivityInvolvedPartyIdContactActivityURL(String $partyId) : String Begin
   IF(EMPTY($partyId), FAIL('[INT_SILUrl]: Missing Mandatory Party Id for URL'));
   Return LIB_ConfigHelper.getSILContextPathContactActivity() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $partyId & LIB_ConfigHelper.getSILContactActivityURL();
End]]></definition>
        </method>
        <method name="getContactActivityInvolvedPartyIdVisitCompleteURL" userId="mathieu" uuid="ffffffff-94d7-2c4c-0000-000000000000">
            <definition><![CDATA[StaticFunction getContactActivityInvolvedPartyIdVisitCompleteURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathContactActivity() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id & LIB_ConfigHelper.getSILContactActivityVisitComplementURL();
End]]></definition>
        </method>
        <method name="getDocumentDocumentIdURL" userId="43368599" uuid="ffffffff-9eb2-2ee8-0000-000000000000">
            <definition><![CDATA[StaticFunction getDocumentDocumentIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathDocument() & LIB_ConfigHelper.getSILDocumentDocumentURL() & '/' & $id & '/content';
End]]></definition>
        </method>
        <method name="getDocumentDocumentURL" userId="43368599" uuid="00000000-0caf-a303-0000-000000000000">
            <definition><![CDATA[StaticFunction getDocumentDocumentURL() : String Begin
   Return LIB_ConfigHelper.getSILContextPathDocument() & LIB_ConfigHelper.getSILDocumentDocumentURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvoledPartyFccRamURL" userId="mathieu" uuid="ffffffff-dc92-0e75-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvoledPartyFccRamURL() : String Begin
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & LIB_ConfigHelper.getSILInvolvedPartyFccRamURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyAffiliateId" userId="mathieu" uuid="ffffffff-c5bf-fb32-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyAffiliateId(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id & LIB_ConfigHelper.getSILInvolvedPartyBusinessOrganizationAffiliateURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyAffiliateIdURL" userId="pezzi" uuid="00000000-6012-28dd-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyAffiliateIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & LIB_ConfigHelper.getSILInvolvedPartyBusinessOrganizationAffiliateURL() & '/' & $id;
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyBusinessOrganizationIdURL" userId="pezzi" uuid="ffffffff-a9db-2f6b-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyBusinessOrganizationIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & LIB_ConfigHelper.getSILInvolvedPartyBusinessOrganizationURL() & '/' & $id;
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyConnectedPartyIdURL" userId="mathieu" uuid="00000000-0045-90e1-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyConnectedPartyIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & LIB_ConfigHelper.getSILInvolvedPartyConnectedPartyListURL() & '/' & $id;
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyDeclarationIdURL" userId="pezzi" uuid="ffffffff-867e-af50-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyDeclarationIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('[INT_SILUrl]: Missing Party Id for Declaration URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & LIB_ConfigHelper.getSILInvolvedPartyDeclarationURL() & '/' & $id;
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyEmployeeIdDetailsURL" userId="pezzi" uuid="00000000-5094-7c6c-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyEmployeeIdDetailsURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & LIB_ConfigHelper.getSILEmployeeURL() & '/' & $id & LIB_ConfigHelper.getSILInvolvedPartyDetailsURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyEstimatedNetWorthIdURL" userId="pezzi" uuid="ffffffff-d191-92dd-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyEstimatedNetWorthIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('[INT_SILUrl]: Missing Party Id for Estimated Net Owrth URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & LIB_ConfigHelper.getSILInvolvedPartyEstimatedNetWorthURL() & '/' & $id;
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyFindingIdURL" userId="pezzi" uuid="00000000-6d15-95a1-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getInvolvedPartyInvolvedPartyFindingIdURL'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction getInvolvedPartyInvolvedPartyFindingIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL()  & LIB_ConfigHelper.getSILInvolvedPartyFindingURL()& '/' & $id;
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdAccountIdServiceURL" userId="mathieu" uuid="ffffffff-aa7a-f711-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyIdAccountIdServiceURL(String $partyId, String $accountId) : String Begin
   IF(EMPTY($partyId) or EMPTY($accountId), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $partyId & LIB_ConfigHelper.getSILAccountURL() & '/' & $accountId & LIB_ConfigHelper.getSILInvolvedPartyAccountServiceURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdAffiliateListURL" userId="mathieu" uuid="ffffffff-91d5-31f5-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyIdAffiliateListURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id & LIB_ConfigHelper.getSILInvolvedPartyBusinessOrganizationAffiliateURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdConnectedPartyListURL" userId="pezzi" uuid="00000000-293e-0a63-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyIdConnectedPartyListURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id & LIB_ConfigHelper.getSILInvolvedPartyConnectedPartyListURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdConnectedPartyURL" userId="pezzi" uuid="ffffffff-dbcc-68e1-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyIdConnectedPartyURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id & LIB_ConfigHelper.getSILInvolvedPartyConnectedPartyListURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdDeclarationURL" userId="pezzi" uuid="ffffffff-e193-cde6-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyIdDeclarationURL(String $partyId) : String Begin
   IF(EMPTY($partyId), FAIL('[INT_SILUrl]: Missing Party Id for Estimated Net Owrth URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $partyId & LIB_ConfigHelper.getSILInvolvedPartyDeclarationURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdDetailsURL" userId="mathieu" uuid="ffffffff-e844-8c9e-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyIdDetailsURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id & LIB_ConfigHelper.getSILInvolvedPartyDetailsURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdEmployeeURL" userId="pezzi" uuid="ffffffff-cfee-e130-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyIdEmployeeURL(String $partyId) : String Begin
   IF(EMPTY($partyId), FAIL('[INT_SILUrl]: Missing Party Id for Employee URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $partyId & LIB_ConfigHelper.getSILEmployeeURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdEstimatedNetWorthURL" userId="pezzi" uuid="ffffffff-c50e-a873-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyIdEstimatedNetWorthURL(String $partyId) : String Begin
  IF(EMPTY($partyId), FAIL('[INT_SILUrl]: Missing Party Id for Estimated Net Owrth URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $partyId & LIB_ConfigHelper.getSILInvolvedPartyEstimatedNetWorthURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdFindingURL" userId="pezzi" uuid="00000000-516b-89f7-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getInvolvedPartyInvolvedPartyIdFindingURL'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction getInvolvedPartyInvolvedPartyIdFindingURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id & LIB_ConfigHelper.getSILInvolvedPartyFindingURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdOwnedBusinessURL" userId="pezzi" uuid="00000000-689c-51bb-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyIdOwnedBusinessURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id & LIB_ConfigHelper.getSILInvolvedPartyOwnedBusinessURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdProfessionalActivityURL" userId="pezzi" uuid="ffffffff-af08-6a08-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyIdProfessionalActivityURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id & LIB_ConfigHelper.getSILInvolvedPartyProfessionalActivityURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdSccPepRelatedPartyListURL" userId="pezzi" uuid="00000000-243d-0bdd-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyIdSccPepRelatedPartyListURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id & LIB_ConfigHelper.getSILInvolvedPartySccPepRelatedURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdSccPepRelatedPartyURL" userId="pezzi" uuid="ffffffff-d82b-375b-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyIdSccPepRelatedPartyURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id & LIB_ConfigHelper.getSILInvolvedPartySccPepRelatedURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdSccURL" userId="pezzi" uuid="ffffffff-c12f-35ad-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getInvolvedPartyInvolvedPartyIdSccURL'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction getInvolvedPartyInvolvedPartyIdSccURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id & LIB_ConfigHelper.getSILInvolvedPartySccURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdScreeningURL" userId="pezzi" uuid="00000000-5613-522a-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getInvolvedPartyInvolvedPartyIdScreeningURL'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction getInvolvedPartyInvolvedPartyIdScreeningURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id & LIB_ConfigHelper.getSILInvolvedPartyScreeningURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdSOWURL" userId="pezzi" uuid="ffffffff-c00f-eb25-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getInvolvedPartyInvolvedPartyIdSOWURL'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction getInvolvedPartyInvolvedPartyIdSOWURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id & LIB_ConfigHelper.getSILInvolvedPartySOWURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdSummaryURL" userId="mathieu" uuid="00000000-132c-2cba-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyIdSummaryURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id & LIB_ConfigHelper.getSILInvolvedPartySummaryURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdTaxDetailsURL" userId="pezzi" uuid="00000000-0b3c-6767-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyIdTaxDetailsURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id & LIB_ConfigHelper.getSILInvolvedPartyTaxDetailsListURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdTaxInformationURL" userId="pezzi" uuid="ffffffff-b15c-a73d-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyIdTaxInformationURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathTax() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id & LIB_ConfigHelper.getSILInvolvedPartyTaxInformationURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyIdURL" userId="mathieu" uuid="ffffffff-dd7a-a5be-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $id;
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyOwnedBusinessIdURL" userId="pezzi" uuid="ffffffff-b99e-14a5-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyOwnedBusinessIdURL(String $partyId) : String Begin
   IF(EMPTY($partyId), FAIL('Missing ID'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & LIB_ConfigHelper.getSILInvolvedPartyOwnedBusinessURL() & '/' & $partyId;
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyPartyIdAccountAccountIdServiceURL" userId="pezzi" uuid="ffffffff-f4b7-4540-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyPartyIdAccountAccountIdServiceURL(String $partyId, String $accountId) : String Begin
   IF(EMPTY($partyId) or EMPTY($accountId), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/' & $partyId & LIB_ConfigHelper.getSILAccountURL() & '/' & $accountId & LIB_ConfigHelper.getSILInvolvedPartyAccountServiceURL();
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyProfessionalActivityIdURL" userId="pezzi" uuid="00000000-35cb-8408-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyProfessionalActivityIdURL(String $partyId) : String Begin
   IF(EMPTY($partyId), FAIL('Missing ID'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & LIB_ConfigHelper.getSILInvolvedPartyProfessionalActivityURL() & '/' & $partyId;
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartySccIdURL" userId="pezzi" uuid="ffffffff-b4f4-5657-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getInvolvedPartyInvolvedPartySccIdURL'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction getInvolvedPartyInvolvedPartySccIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & LIB_ConfigHelper.getSILInvolvedPartySccURL() & '/' & $id;
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartySccPepRelatedPartyIdURL" userId="pezzi" uuid="00000000-28ed-635b-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartySccPepRelatedPartyIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & LIB_ConfigHelper.getSILInvolvedPartySccPepRelatedURL() & '/' & $id;
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyServiceIdURL" userId="pezzi" uuid="00000000-722f-85f5-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyServiceIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & LIB_ConfigHelper.getSILInvolvedPartyAccountServiceURL() & '/' & $id;
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartySOWIdURL" userId="pezzi" uuid="00000000-7e7d-8dcf-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getInvolvedPartyInvolvedPartySOWIdURL'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction getInvolvedPartyInvolvedPartySOWIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & LIB_ConfigHelper.getSILInvolvedPartySOWURL() & '/' & $id;
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyTaxInformationIdURL" userId="pezzi" uuid="ffffffff-b2bf-a83d-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyTaxInformationIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathTax() & LIB_ConfigHelper.getSILInvolvedPartyURL() & LIB_ConfigHelper.getSILInvolvedPartyTaxInformationURL() & '/' & $id;
End]]></definition>
        </method>
        <method name="getInvolvedPartyInvolvedPartyURL" userId="pezzi" uuid="ffffffff-fbb3-d759-0000-000000000000">
            <definition><![CDATA[StaticFunction getInvolvedPartyInvolvedPartyURL() : String Begin
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL();
End]]></definition>
        </method>
        <method name="getKycAccountTransferActivityIdURL" userId="pezzi" uuid="00000000-7b60-134c-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getKycAccountTransferActivityIdURL'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction getKycAccountTransferActivityIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathAccount() & LIB_ConfigHelper.getSILAccountKycURL() & LIB_ConfigHelper.getSILAccountTransferActivityURL() & '/' & $id;
End]]></definition>
        </method>
        <method name="getReferenceDataURL" userId="gurcay" uuid="ffffffff-d4de-4710-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getReferenceDataURL'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction getReferenceDataURL(String $referenceData) : String Begin
   Return LIB_ConfigHelper.getSILBaseUrl() & LIB_ConfigHelper.getSILContextPathReferenceData() & LIB_ConfigHelper.getSILReferenceDataURL() & ';categoryId=' & $referenceData;
End]]></definition>
        </method>
        <method name="getRMListURL" userId="gurcay" uuid="ffffffff-b2b2-62a0-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getRMListURL'.
  @param $userId Description of parameter '$userId'.
  @return       Description of return value.
*/
StaticFunction getRMListURL(String $userId) : String Begin
   Return LIB_ConfigHelper.getSILBaseUrl() & LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/employee/coworkers?type=RM;id=' & $userId;
End]]></definition>
        </method>
        <method name="getSILAccountDeclarationACCEPT" userId="pezzi" uuid="ffffffff-e954-fe15-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getSILInvolvedPartyDeclarationACCEPT'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction getSILAccountDeclarationACCEPT(String $value) : String Begin
   PRINTLN('Running Function getSILInvolvedPartyDeclarationACCEPT');
   Return null;
End]]></definition>
        </method>
        <method name="getSILInvolvedPartyDeclarationACCEPT" userId="pezzi" uuid="00000000-4344-3aa3-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getSILInvolvedPartyDeclarationACCEPT'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction getSILInvolvedPartyDeclarationACCEPT(String $value) : String Begin
   PRINTLN('Running Function getSILInvolvedPartyDeclarationACCEPT');
   Return null;
End]]></definition>
        </method>
        <method name="getTaxAccountIdTaxInformationURL" userId="pezzi" uuid="00000000-0ff1-063b-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getTaxAccountIdTaxInformationURL'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction getTaxAccountIdTaxInformationURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathTax() & LIB_ConfigHelper.getSILAccountURL() & '/' & $id & LIB_ConfigHelper.getSILInvolvedPartyTaxInformationURL();
End]]></definition>
        </method>
        <method name="getTaxAccountTaxInformationIdURL" userId="pezzi" uuid="00000000-1154-073b-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getTaxAccountTaxInformationIdURL'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction getTaxAccountTaxInformationIdURL(String $id) : String Begin
   IF(EMPTY($id), FAIL('ID missing for URL'));
   Return LIB_ConfigHelper.getSILContextPathTax() & LIB_ConfigHelper.getSILAccountURL() & LIB_ConfigHelper.getSILInvolvedPartyTaxInformationURL() & '/' & $id;
End]]></definition>
        </method>
        <method name="getTeamStructureURL" userId="gurcay" uuid="ffffffff-e90d-9d6f-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'getTeamStructureURL'.
  @return       Description of return value.
*/
StaticFunction getTeamStructureURL(String $userId) : String Begin
   //Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/employees';
   Return LIB_ConfigHelper.getSILContextPathInvolvedParty() & LIB_ConfigHelper.getSILInvolvedPartyURL() & '/employee;id=' & $userId;
End]]></definition>
        </method>
    </methods>
</class>

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                1,904,436,0
<?xml version="1.0" encoding="UTF-8"?>
<object xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="object.xsd">
    <id>CMN_FatcaClassification.32</id>
    <uuid>519a7334-f19c-46e4-a18f-02e0759d2cea</uuid>
    <type>Label</type>
    <name/>
    <description/>
    <creator>sabino</creator>
    <creationTime>1434033632717</creationTime>
    <modifier>foo</modifier>
    <modificationTime>1473312450674</modificationTime>
    <active>true</active>
    <versionUuid>e4e5c957-0b17-4136-91ff-fb75739116f8</versionUuid>
    <parentVersionUuid>ce3b9e56-5136-4b37-afb4-07c70bb89afb</parentVersionUuid>
    <timestamp>1475260129806</timestamp>
    <systemId>h-global-predev.appway.com</systemId>
    <copyOfUuid>65397ade-7b6d-48c4-a9cb-9cf58414c41f</copyOfUuid>
    <committed>true</committed>
    <deleted>false</deleted>
    <userId>magloire</userId>
    <metaData/>
</object>

<?xml version="1.0" encoding="UTF-8"?>
<label version="1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="label.xsd">
    <text language="de">Sponsored FFI</text>
    <text language="en">Sponsored FFI</text>
    <text language="fr">Sponsored FFI</text>
    <text language="it">Sponsored FFI</text>
    <text language="pt">Sponsored FFI</text>
    <text language="sp">Sponsored FFI</text>
</label>

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      1,972,616,0
<?xml version="1.0" encoding="UTF-8"?>
<object xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="object.xsd">
    <id>CMN_IncludePartyEnhancedVigilance.vigilance.reason.validation.error</id>
    <uuid>c2da9fed-01c5-42ae-8298-684de084a6e0</uuid>
    <type>Label</type>
    <name>CMN_IncludePartyEnhancedVigilance.vigilance.reason.validation.error</name>
    <description/>
    <creator>segafredo</creator>
    <creationTime>1473803200209</creationTime>
    <modifier>segafredo</modifier>
    <modificationTime>1473803227144</modificationTime>
    <active>true</active>
    <versionUuid>6770648f-c430-4e56-b40c-98c5934c4bd7</versionUuid>
    <parentVersionUuid/>
    <timestamp>1475260129806</timestamp>
    <systemId>h-global-predev.appway.com</systemId>
    <copyOfUuid>ddc7e36c-7914-4f9b-9160-1d3a81565337</copyOfUuid>
    <committed>true</committed>
    <deleted>false</deleted>
    <userId>magloire</userId>
    <metaData/>
</object>

<?xml version="1.0" encoding="UTF-8"?>
<label version="1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="label.xsd">
    <text language="de">Insert a reason for this enhanced vigilance</text>
    <text language="en">Insert a reason for this enhanced vigilance</text>
    <text language="fr">Insert a reason for this enhanced vigilance</text>
    <text language="it">Insert a reason for this enhanced vigilance</text>
    <text language="pt">Insert a reason for this enhanced vigilance</text>
    <text language="sp">Insert a reason for this enhanced vigilance</text>
</label>

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              1,1033,241943,2
<?xml version="1.0" encoding="UTF-8"?>
<object xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="object.xsd">
    <id>CMN_W03SignatureCardFR__CH</id>
    <uuid>aae01beb-781a-4419-9528-6609642cff8e</uuid>
    <type>PdfOutput</type>
    <name/>
    <description/>
    <creator>srikanth</creator>
    <creationTime>1314175728365</creationTime>
    <modifier>bernard</modifier>
    <modificationTime>1474619090768</modificationTime>
    <active>true</active>
    <versionUuid>e3c3d579-2b8f-40cb-968b-426af7087ef8</versionUuid>
    <parentVersionUuid>a6d3391c-236e-4da6-9d22-2bb855491f5f</parentVersionUuid>
    <timestamp>1475260129806</timestamp>
    <systemId>h-global-predev.appway.com</systemId>
    <copyOfUuid>f13b1a52-90c5-44a2-9a55-4999eda06bc9</copyOfUuid>
    <committed>true</committed>
    <deleted>false</deleted>
    <userId>magloire</userId>
    <metaData>
        <property name="Refactoring-ChangeID" value="W03_SignatureCard_FR>CMN_W03SignatureCardFR__CH"/>
    </metaData>
</object>

<?xml version="1.0" encoding="UTF-8"?>
<outputform version="1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="pdfoutput.xsd">
    <parameterDefinitions>
        <parameterDefinition collectionType="none" defaultExpression="" description="" mode="assigned" type="CMN_BusinessRelationship" variable="businessRelationship"/>
        <parameterDefinition collectionType="none" defaultExpression="" description="" mode="assigned" type="CMN_Party" variable="partyAuthSignA"/>
        <parameterDefinition collectionType="none" defaultExpression="" description="" mode="assigned" type="CMN_Party" variable="partyAuthSignB"/>
        <parameterDefinition collectionType="none" defaultExpression="" description="" mode="assigned" type="CMN_Party" variable="partyAuthSignC"/>
        <parameterDefinition collectionType="none" defaultExpression="" description="" mode="assigned" type="CMN_Party" variable="partyAuthSignD"/>
        <parameterDefinition collectionType="none" defaultExpression="NEW(CMN_DocumentHelperBusinessRelationship, $businessRelationship)" description="" mode="local" type="CMN_DocumentHelperBusinessRelationship" variable="businessRelationshipHelper"/>
        <parameterDefinition collectionType="none" defaultExpression="CMN_DocumentHelperParty.getInstance($partyAuthSignA)" description="" mode="local" type="CMN_DocumentHelperParty" variable="partyAuthSignHelperA"/>
        <parameterDefinition collectionType="none" defaultExpression="CMN_DocumentHelperParty.getInstance($partyAuthSignB)" description="" mode="local" type="CMN_DocumentHelperParty" variable="partyAuthSignHelperB"/>
        <parameterDefinition collectionType="none" defaultExpression="CMN_DocumentHelperParty.getInstance($partyAuthSignC)" description="" mode="local" type="CMN_DocumentHelperParty" variable="partyAuthSignHelperC"/>
        <parameterDefinition collectionType="none" defaultExpression="CMN_DocumentHelperParty.getInstance($partyAuthSignD)" description="" mode="local" type="CMN_DocumentHelperParty" variable="partyAuthSignHelperD"/>
        <parameterDefinition collectionType="none" defaultExpression="false" description="" mode="assigned" type="Boolean" variable="isSupplementary"/>
        <parameterDefinition collectionType="none" defaultExpression="" description="" mode="assigned" type="Integer" variable="i"/>
    </parameterDefinitions>
    <originalfile>V:\Form_Generator_Project\90. PDF forms\4-November 2013\W03_SignatureCard_FR.pdf</originalfile>
    <sourcefileversion/>
    <languageid>fr</languageid>
    <outputformpage>
        <rotation>0</rotation>
        <visibility/>
        <replicationstrategy>0</replicationstrategy>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1311348047883_0</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.0</height>
            <leftposition>42.600000000000016</leftposition>
            <topposition>747.1333333333333</topposition>
            <width>259.5</width>
            <zindex>1</zindex>
            <expression>$businessRelationshipHelper.getNumber()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>fontstyle</name>
                <value>'Footer'</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>valign</name>
                <value>'top'</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1431070161124_87</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>copyall</copy>
            <height>28.5</height>
            <leftposition>89.16666666666671</leftposition>
            <topposition>763.2179487179485</topposition>
            <width>147.0</width>
            <zindex>1</zindex>
            <expression>DYNAMICDOCUMENT('CMN_RefNumberBlock')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TABLE</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1431330346509_0</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>14.0</height>
            <leftposition>160.5033070866142</leftposition>
            <topposition>273.0</topposition>
            <width>17.5</width>
            <zindex>1</zindex>
            <expression>/** #FUNCTION NOT USED
IF($businessRelationshipHelper.isRevokePrevSignatureCard(), 'X', '') **/</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1431965012727_0</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>45.66666666666666</height>
            <leftposition>163.79999999999998</leftposition>
            <topposition>188.13333333333338</topposition>
            <width>389.0</width>
            <zindex>1</zindex>
            <expression>$businessRelationshipHelper.getName()</expression>
            <visibility>NOT($businessRelationshipHelper.useSmallBox())</visibility>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>fontstyle</name>
                <value>'default'</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>lead</name>
                <value>26.0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1431965013843_1</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>20.0</height>
            <leftposition>163.79999999999998</leftposition>
            <topposition>214.80000000000007</topposition>
            <width>389.50000000000006</width>
            <zindex>1</zindex>
            <expression>$businessRelationshipHelper.printSmallBox2()</expression>
            <visibility>$businessRelationshipHelper.useSmallBox()</visibility>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>fontstyle</name>
                <value>'UI_DefaultSmall'</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>lead</name>
                <value>5.0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1431965014919_2</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>22.0</height>
            <leftposition>163.79999999999998</leftposition>
            <topposition>188.46666666666673</topposition>
            <width>389.50000000000006</width>
            <zindex>1</zindex>
            <expression>$businessRelationshipHelper.printSmallBox1()</expression>
            <visibility>$businessRelationshipHelper.useSmallBox()</visibility>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>fontstyle</name>
                <value>'UI_DefaultSmall'</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>lead</name>
                <value>5</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1432216317750_0</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>14.0</height>
            <leftposition>160.5033070866142</leftposition>
            <topposition>257.6666666666667</topposition>
            <width>17.5</width>
            <zindex>1</zindex>
            <expression>IF($isSupplementary, 'X')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
    </outputformpage>
    <outputformpage>
        <rotation>0</rotation>
        <visibility/>
        <replicationstrategy>0</replicationstrategy>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1320422483995_44</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <bgcolor>255,255,255</bgcolor>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>163.79999999999998</leftposition>
            <topposition>208.3870967741935</topposition>
            <width>127.09677419354838</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getDateOfBirthRegistration()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>valign</name>
                <value>'middle'</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1320422484072_51</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>163.79999999999998</leftposition>
            <topposition>288.6029776674935</topposition>
            <width>386.49999968503937</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getNationalities()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1320422484101_55</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>163.79999999999998</leftposition>
            <topposition>420.8784946236549</topposition>
            <width>386.49999968503937</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getFunctions()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1320422484109_56</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>41.29032258064516</height>
            <leftposition>163.79999999999998</leftposition>
            <topposition>315.6290322580645</topposition>
            <width>386.49999968503937</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getAddress()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>hyphenation</name>
                <value>false</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>lead</name>
                <value>25.0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1320422781346_69</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>14.666666666666742</height>
            <leftposition>56.82365591397838</leftposition>
            <topposition>484.23333333333323</topposition>
            <width>17.0</width>
            <zindex>1</zindex>
            <expression>IF($partyAuthSignHelperA.getPhone1().isValid(), 'X', ' ')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1320422781374_71</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>16.666666666666668</height>
            <leftposition>82.87270341207349</leftposition>
            <topposition>484.0258064516128</topposition>
            <width>23.333333333333336</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getPhone1().getInternationalPrefix()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1320422781391_73</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>82.37270341207349</leftposition>
            <topposition>583.8451612903225</topposition>
            <width>23.333333333333336</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getMobilePhone1().getInternationalPrefix()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1320422781399_74</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>14.666666666666742</height>
            <leftposition>56.82365591397838</leftposition>
            <topposition>584.1451612903239</topposition>
            <width>17.0</width>
            <zindex>1</zindex>
            <expression>IF($partyAuthSignHelperA.getMobilePhone1().isValid(), 'X', ' ')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1320422781406_75</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>16.666666666666668</height>
            <leftposition>119.41935483870968</leftposition>
            <topposition>484.0258064516128</topposition>
            <width>134.83870866141734</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getPhone1().getInternationalNumberWithoutPrefix()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1320422781421_77</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>119.41935483870968</leftposition>
            <topposition>583.8451612903225</topposition>
            <width>134.83870866141734</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getMobilePhone1().getInternationalNumberWithoutPrefix()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1320422781428_78</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>82.37270341207349</leftposition>
            <topposition>671.3354838709673</topposition>
            <width>23.333333333333336</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getFaxPhone().getInternationalPrefix()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1320422781436_79</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>119.41935483870968</leftposition>
            <topposition>671.3354838709673</topposition>
            <width>134.83870866141734</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getFaxPhone().getInternationalNumberWithoutPrefix()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1334652844409_0</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>14.666666666666629</height>
            <leftposition>56.82365591397838</leftposition>
            <topposition>531.6236559139782</topposition>
            <width>17.0</width>
            <zindex>1</zindex>
            <expression>IF($partyAuthSignHelperA.getPhone3().isValid(), 'X', ' ')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1334652844429_1</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>16.666666666666668</height>
            <leftposition>82.87270341207349</leftposition>
            <topposition>530.7333333333324</topposition>
            <width>23.333333333333336</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getPhone3().getInternationalPrefix()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1334652844447_2</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>119.41935483870968</leftposition>
            <topposition>530.7333333333324</topposition>
            <width>134.83870866141734</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getPhone3().getInternationalNumberWithoutPrefix()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1334652844461_3</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>14.666666666666572</height>
            <leftposition>56.82365591397838</leftposition>
            <topposition>507.9333333333331</topposition>
            <width>17.0</width>
            <zindex>1</zindex>
            <expression>IF($partyAuthSignHelperA.getPhone2().isValid(), 'X', ' ')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1334652844469_4</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>16.666666666666668</height>
            <leftposition>82.87270341207349</leftposition>
            <topposition>507.6236559139781</topposition>
            <width>23.333333333333336</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getPhone2().getInternationalPrefix()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1334652844477_5</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>119.41935483870968</leftposition>
            <topposition>507.62365591397815</topposition>
            <width>134.83870866141734</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getPhone2().getInternationalNumberWithoutPrefix()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1334653036909_8</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>14.666666666666629</height>
            <leftposition>56.82365591397838</leftposition>
            <topposition>607.8666666666671</topposition>
            <width>17.0</width>
            <zindex>1</zindex>
            <expression>IF($partyAuthSignHelperA.getMobilePhone2().isValid(), 'X', ' ')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1334653036919_9</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>82.37270341207349</leftposition>
            <topposition>607.4666666666673</topposition>
            <width>23.333333333333336</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getMobilePhone2().getInternationalPrefix()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1334653036936_11</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>119.41935483870968</leftposition>
            <topposition>607.4666666666673</topposition>
            <width>134.83870866141734</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getMobilePhone2().getInternationalNumberWithoutPrefix()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1334653036942_12</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.419354838709676</height>
            <leftposition>56.795698924731184</leftposition>
            <topposition>631.6129032258065</topposition>
            <width>15.483870967741934</width>
            <zindex>1</zindex>
            <expression>IF($partyAuthSignHelperA.getMobilePhone3().isValid(), 'X', ' ')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1334653036949_13</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>16.666666666666668</height>
            <leftposition>82.37270341207349</leftposition>
            <topposition>630.8666666666683</topposition>
            <width>23.333333333333336</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getMobilePhone3().getInternationalPrefix()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1334653036955_14</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>119.41935483870968</leftposition>
            <topposition>630.8666666666683</topposition>
            <width>134.83870866141734</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getMobilePhone3().getInternationalNumberWithoutPrefix()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1339667896446_84</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>163.79999999999998</leftposition>
            <topposition>235.15925006892743</topposition>
            <width>386.49999968503937</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getPlaceOfBirthRegistration()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>valign</name>
                <value>'top'</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1339668236980_85</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>163.79999999999998</leftposition>
            <topposition>261.87179487179515</topposition>
            <width>386.49999968503937</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getCountryOfBirthRegistration()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>valign</name>
                <value>'top'</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1339673303610_98</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>16.774193548387096</height>
            <leftposition>163.79999999999998</leftposition>
            <topposition>367.43010752688167</topposition>
            <width>128.38709677419354</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getMainAddress().getPoBox()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>valign</name>
                <value>'top'</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1339673343082_99</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>345.80645161290323</leftposition>
            <topposition>393.93333333333334</topposition>
            <width>203.2258064516129</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getMainAddress().getCountry()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>valign</name>
                <value>'top'</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1339673495271_100</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>345.80645161290323</leftposition>
            <topposition>367.43010752688167</topposition>
            <width>203.2258064516129</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getMainAddress().getCity()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>valign</name>
                <value>'top'</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1339673582795_101</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>16.774193548387096</height>
            <leftposition>163.79999999999998</leftposition>
            <topposition>393.8817204301075</topposition>
            <width>128.38709677419354</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getMainAddress().getZip()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>valign</name>
                <value>'top'</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1349707951827_0</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>16.666666666666668</height>
            <leftposition>415.48387096774195</leftposition>
            <topposition>484.0258064516128</topposition>
            <width>134.83870967741936</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getPhone1().getDescription()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1349707999371_1</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>415.48387096774195</leftposition>
            <topposition>507.62365591397815</topposition>
            <width>134.83870967741936</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getPhone2().getDescription()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1349708029627_2</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>415.48387096774195</leftposition>
            <topposition>530.7333333333324</topposition>
            <width>134.83870967741936</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getPhone3().getDescription()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1349765574236_0</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>415.48387096774195</leftposition>
            <topposition>583.8451612903225</topposition>
            <width>134.83870967741936</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getMobilePhone1().getDescription()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1349765637409_1</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>415.48387096774195</leftposition>
            <topposition>607.4666666666673</topposition>
            <width>134.83870967741936</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getMobilePhone2().getDescription()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1349765641995_2</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>415.48387096774195</leftposition>
            <topposition>630.8666666666683</topposition>
            <width>134.83870967741936</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getMobilePhone3().getDescription()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1349765799257_3</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>415.48387096774195</leftposition>
            <topposition>671.3354838709673</topposition>
            <width>134.83870866141734</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getFaxPhone().getDescription()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1383744834137_0</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>16.666666666666668</height>
            <leftposition>263.59999999999997</leftposition>
            <topposition>484.0258064516128</topposition>
            <width>134.83870866141734</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getPhone1().getCountry()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1383745029258_1</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>263.59999999999997</leftposition>
            <topposition>507.62365591397815</topposition>
            <width>134.83870866141734</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getPhone2().getCountry()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1383745029271_2</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>263.59999999999997</leftposition>
            <topposition>530.7333333333324</topposition>
            <width>134.83870866141734</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getPhone3().getCountry()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1383745029287_3</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>263.59999999999997</leftposition>
            <topposition>583.8451612903225</topposition>
            <width>134.83870866141734</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getMobilePhone1().getCountry()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1383745029297_4</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>263.59999999999997</leftposition>
            <topposition>607.4666666666673</topposition>
            <width>134.83870866141734</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getMobilePhone2().getCountry()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1383745029304_5</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>263.59999999999997</leftposition>
            <topposition>630.8666666666683</topposition>
            <width>134.83870866141734</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getMobilePhone3().getCountry()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1383745029312_6</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>263.59999999999997</leftposition>
            <topposition>671.3354838709673</topposition>
            <width>134.83870866141734</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getFaxPhone().getCountry()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1430751257064_0</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>163.79999999999998</leftposition>
            <topposition>181.7857733664184</topposition>
            <width>386.49999968503937</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getFirstName()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>valign</name>
                <value>'top'</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1431013221625_0</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>163.79999999999998</leftposition>
            <topposition>155.0872068410802</topposition>
            <width>386.49999968503937</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getSurnameCompanyName()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>valign</name>
                <value>'top'</value>
            </valuefieldparameter>
        </formfield>
    </outputformpage>
    <outputformpage>
        <rotation>0</rotation>
        <visibility/>
        <replicationstrategy>0</replicationstrategy>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1339666228460_0</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>300.6354838709677</leftposition>
            <topposition>117.8</topposition>
            <width>250.40000000000015</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getJointlyBySignature('authorizedSignature')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1339666228473_1</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>300.6354838709677</leftposition>
            <topposition>140.53333333333134</topposition>
            <width>250.40000000000015</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getJointlyWithNumberSignature('authorizedSignature')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1339666228489_2</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>17.007874015748033</height>
            <leftposition>300.6354838709677</leftposition>
            <topposition>163.96666666666272</topposition>
            <width>250.40000000000015</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.getAsPairAttachedSignature('authorizedSignature')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1339666228498_3</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>12.0</height>
            <leftposition>160.8000000000002</leftposition>
            <topposition>118.29999999999731</topposition>
            <width>22.0</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.isJointlyBySignature('authorizedSignature')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1339666228505_4</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>12.0</height>
            <leftposition>160.76666666666688</leftposition>
            <topposition>103.59999999999854</topposition>
            <width>22.0</width>
            <zindex>1</zindex>
            <expression>$partyAuthSignHelperA.isIndividualSignature('authorizedSignature')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1339666228512_5</formfieldid>
            <