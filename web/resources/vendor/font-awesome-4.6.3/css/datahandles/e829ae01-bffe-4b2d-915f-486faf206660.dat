aration(CMN_BusinessRelationship $businessRelationship) : Indexed SIL_DECLARATIONdeclaration Begin
   Indexed SIL_DECLARATIONdeclaration $silDeclarations := NewIndexed(SIL_DECLARATIONdeclaration);
   If $businessRelationship != null && $businessRelationship.regulatoryProfile.rmDeclarations != null Then
      CMN_RMDeclarations $rmDeclarations := $businessRelationship.regulatoryProfile.rmDeclarations;
      SIL_DECLARATIONsustainabilityPolicyDeclaration $silSustainability := CAST(SIL_DECLARATIONsustainabilityPolicyDeclaration, CreateSkeletonDataClass(SIL_DECLARATIONsustainabilityPolicyDeclaration));
      IF($rmDeclarations.sustainabilityQuestion1 != null, $silSustainability.significantWealthFromHSRSectorIndicator := $rmDeclarations.sustainabilityQuestion1);
      IF($rmDeclarations.sustainabilityQuestion2 != null, $silSustainability.significantWealthFromUnacceptableActivitiesIndicator := $rmDeclarations.sustainabilityQuestion2);
      IF($rmDeclarations.sustainabilityQuestion3 != null, $silSustainability.operateInHSRSectorIndicator := $rmDeclarations.sustainabilityQuestion3);
      IF($rmDeclarations.sustainabilityQuestion4 != null, $silSustainability.operateInUnacceptableActivitiesIndicator := $rmDeclarations.sustainabilityQuestion4);
      $silSustainability.nonComplianceIndicator := TOBOOLEAN($rmDeclarations.sustainabilityQuestion5);
      $silDeclarations.addElement($silSustainability);
      SIL_DECLARATIONantiFraudDeclaration $silAntiFraud := CAST(SIL_DECLARATIONantiFraudDeclaration, CreateSkeletonDataClass(SIL_DECLARATIONantiFraudDeclaration));
      IF($rmDeclarations.antiFraudQuestion1 != null, $silAntiFraud.antiFraudAdverseMediaInterestIndicator := $rmDeclarations.antiFraudQuestion1);
      IF($rmDeclarations.antiFraudQuestion2 != null, $silAntiFraud.antiFraudBusinessModelIndicator := $rmDeclarations.antiFraudQuestion2);
      IF($rmDeclarations.antiFraudQuestion3 != null, $silAntiFraud.antiFraudTransparencyIndicator := $rmDeclarations.antiFraudQuestion3);
      $silDeclarations.addElement($silAntiFraud);
      SIL_DECLARATIONtaxTransparencyDeclaration $silTaxTransparency := CAST(SIL_DECLARATIONtaxTransparencyDeclaration, CreateSkeletonDataClass(SIL_DECLARATIONtaxTransparencyDeclaration));
      IF($rmDeclarations.taxTransparencyQuestion1 != null, $silTaxTransparency.suspectUndeclaredFundIndicator := $rmDeclarations.taxTransparencyQuestion1);
      IF($rmDeclarations.taxTransparencyQuestion2 != null, $silTaxTransparency.refuseDiscloseTaxResidenceIndicator := $rmDeclarations.taxTransparencyQuestion2);
      IF($rmDeclarations.taxTransparencyQuestion3 != null, $silTaxTransparency.refuseProvideTaxInformationIndicator := $rmDeclarations.taxTransparencyQuestion3);
      IF($rmDeclarations.taxTransparencyQuestion4 != null, $silTaxTransparency.requestRecommendationOfTaxableIncomeIndicator := $rmDeclarations.taxTransparencyQuestion4);
      IF($rmDeclarations.taxTransparencyQuestion5 != null, $silTaxTransparency.refuseContactedIndicator := $rmDeclarations.taxTransparencyQuestion5);
      IF($rmDeclarations.taxTransparencyQuestion6 != null, $silTaxTransparency.suspectGuiltyOfTaxEvasionIndicator := $rmDeclarations.taxTransparencyQuestion6);
      IF($rmDeclarations.taxTransparencyQuestion7 != null, $silTaxTransparency.highTaxRiskCountryNonTaxCompliantIndicator := $rmDeclarations.taxTransparencyQuestion7);
      $silDeclarations.addElement($silTaxTransparency);
   End
   Return $silDeclarations;
End]]></definition>
        </method>
        <method name="createSILDOCOScreening" userId="pezzi" uuid="00000000-3b1b-c385-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILDOCOScreening'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILDOCOScreening(CMN_Party $cmnParty, Indexed SIL_INVOLVEDPARTYSCREENINGscreening $silScreeningScreenings) : Indexed SIL_INVOLVEDPARTYSCREENINGscreening Begin
   If $cmnParty == null Then
      Return $silScreeningScreenings;
   End
   IF(not LIB_Validator.validateNotEmptyIndexed($silScreeningScreenings), $silScreeningScreenings := NewIndexed(SIL_INVOLVEDPARTYSCREENINGscreening));
   If $cmnParty.type.isPhysicalPerson() Then
      CMN_PhysicalPerson $cmnPhysicalPerson := CAST(CMN_PhysicalPerson, $cmnParty);
      /****************** Overall net worth and Income *********************************/
      CMN_OverallNetWorthAndIncome $cmnOverallNetWorthAndIncome := $cmnPhysicalPerson.kycProfile.overallNetWorthAndIncome;
      If LIB_Validator.validateNotEmptyIndexed($cmnOverallNetWorthAndIncome.evidences) Then
         CMN_hyperlink $cmnhyperlink;
         SIL_INVOLVEDPARTYSCREENINGdocoScreening $silINVOLVEDPARTYSCREENINGdocoScreening;
         ForEach $cmnhyperlink In $cmnOverallNetWorthAndIncome.evidences Do
            $silINVOLVEDPARTYSCREENINGdocoScreening := CAST(SIL_INVOLVEDPARTYSCREENINGdocoScreening, CreateSkeletonDataClass(SIL_INVOLVEDPARTYSCREENINGdocoScreening));
            $silINVOLVEDPARTYSCREENINGdocoScreening.findings := NewIndexed(SIL_INVOLVEDPARTYSCREENINGfinding);
            SIL_INVOLVEDPARTYSCREENINGdocoFinding $silINVOLVEDPARTYSCREENINGfinding := CAST(SIL_INVOLVEDPARTYSCREENINGdocoFinding, CreateSkeletonDataClass(SIL_INVOLVEDPARTYSCREENINGdocoFinding));
            IF($cmnhyperlink.description != null, $silINVOLVEDPARTYSCREENINGfinding.description := $cmnhyperlink.description);
            IF($cmnhyperlink.hyperlink != null, $silINVOLVEDPARTYSCREENINGfinding.sourceLink := $cmnhyperlink.hyperlink);
            $silINVOLVEDPARTYSCREENINGdocoScreening.findings.addElement($silINVOLVEDPARTYSCREENINGfinding);
            $silINVOLVEDPARTYSCREENINGdocoScreening.type := 'NETWORTH';
            $silScreeningScreenings.addElement($silINVOLVEDPARTYSCREENINGdocoScreening);
         End
      End
      CMN_KycSow $cmnKycSow := $cmnPhysicalPerson.getKYCProfile().sourceOfWealth;
      /******************************** KYC SOW ****************************************************/
      CMN_KycSowContribution $cmnKycSowContribution;
      CMN_hyperlink $cmnhyperlink;
      SIL_INVOLVEDPARTYSCREENINGdocoScreening $silINVOLVEDPARTYSCREENINGdocoScreening;
      SIL_INVOLVEDPARTYSCREENINGdocoFinding $silINVOLVEDPARTYSCREENINGfinding;
      /****************** SOW Employement ***************/
      If LIB_Validator.validateNotEmptyIndexed($cmnKycSow.sowEmployment) Then
         ForEach $cmnKycSowContribution In $cmnKycSow.sowEmployment Do
            If LIB_Validator.validateNotEmptyIndexed($cmnKycSowContribution.evidences) Then
               ForEach $cmnhyperlink In $cmnKycSowContribution.evidences Do
                  $silINVOLVEDPARTYSCREENINGdocoScreening := CAST(SIL_INVOLVEDPARTYSCREENINGdocoScreening, CreateSkeletonDataClass(SIL_INVOLVEDPARTYSCREENINGdocoScreening));
                  $silINVOLVEDPARTYSCREENINGdocoScreening.findings := NewIndexed(SIL_INVOLVEDPARTYSCREENINGfinding);
                  $silINVOLVEDPARTYSCREENINGfinding := CAST(SIL_INVOLVEDPARTYSCREENINGdocoFinding, CreateSkeletonDataClass(SIL_INVOLVEDPARTYSCREENINGdocoFinding));
                  IF($cmnhyperlink.description != null, $silINVOLVEDPARTYSCREENINGfinding.description := $cmnhyperlink.description);
                  IF($cmnhyperlink.hyperlink != null, $silINVOLVEDPARTYSCREENINGfinding.sourceLink := $cmnhyperlink.hyperlink);
                  $silINVOLVEDPARTYSCREENINGdocoScreening.findings.addElement($silINVOLVEDPARTYSCREENINGfinding);
                  $silINVOLVEDPARTYSCREENINGdocoScreening.type := 'EMPLOYEMENT';
                  $silScreeningScreenings.addElement($silINVOLVEDPARTYSCREENINGdocoScreening);
               End
            End
         End
      End
      /****************** SOW Business Owner *********************/
      If LIB_Validator.validateNotEmptyIndexed($cmnKycSow.sowBusinessOwner) Then
         ForEach $cmnKycSowContribution In $cmnKycSow.sowBusinessOwner Do
            If LIB_Validator.validateNotEmptyIndexed($cmnKycSowContribution.evidences) Then
               ForEach $cmnhyperlink In $cmnKycSowContribution.evidences Do
                  $silINVOLVEDPARTYSCREENINGdocoScreening := CAST(SIL_INVOLVEDPARTYSCREENINGdocoScreening, CreateSkeletonDataClass(SIL_INVOLVEDPARTYSCREENINGdocoScreening));
                  $silINVOLVEDPARTYSCREENINGdocoScreening.findings := NewIndexed(SIL_INVOLVEDPARTYSCREENINGfinding);
                  $silINVOLVEDPARTYSCREENINGfinding := CAST(SIL_INVOLVEDPARTYSCREENINGdocoFinding, CreateSkeletonDataClass(SIL_INVOLVEDPARTYSCREENINGdocoFinding));
                  IF($cmnhyperlink.description != null, $silINVOLVEDPARTYSCREENINGfinding.description := $cmnhyperlink.description);
                  IF($cmnhyperlink.hyperlink != null, $silINVOLVEDPARTYSCREENINGfinding.sourceLink := $cmnhyperlink.hyperlink);
                  $silINVOLVEDPARTYSCREENINGdocoScreening.findings.addElement($silINVOLVEDPARTYSCREENINGfinding);
                  $silINVOLVEDPARTYSCREENINGdocoScreening.type := 'BUSINESS_OWNERSHIP';
                  $silScreeningScreenings.addElement($silINVOLVEDPARTYSCREENINGdocoScreening);
               End
            End
         End
      End
      /****************** SOW Inheritance *********************/
      If LIB_Validator.validateNotEmptyIndexed($cmnKycSow.sowInheritanceDonation) Then
         ForEach $cmnKycSowContribution In $cmnKycSow.sowInheritanceDonation Do
            If LIB_Validator.validateNotEmptyIndexed($cmnKycSowContribution.evidences) Then
               ForEach $cmnhyperlink In $cmnKycSowContribution.evidences Do
                  $silINVOLVEDPARTYSCREENINGdocoScreening := CAST(SIL_INVOLVEDPARTYSCREENINGdocoScreening, CreateSkeletonDataClass(SIL_INVOLVEDPARTYSCREENINGdocoScreening));
                  $silINVOLVEDPARTYSCREENINGdocoScreening.findings := NewIndexed(SIL_INVOLVEDPARTYSCREENINGfinding);
                  $silINVOLVEDPARTYSCREENINGfinding := CAST(SIL_INVOLVEDPARTYSCREENINGdocoFinding, CreateSkeletonDataClass(SIL_INVOLVEDPARTYSCREENINGdocoFinding));
                  IF($cmnhyperlink.description != null, $silINVOLVEDPARTYSCREENINGfinding.description := $cmnhyperlink.description);
                  IF($cmnhyperlink.hyperlink != null, $silINVOLVEDPARTYSCREENINGfinding.sourceLink := $cmnhyperlink.hyperlink);
                  $silINVOLVEDPARTYSCREENINGdocoScreening.findings.addElement($silINVOLVEDPARTYSCREENINGfinding);
                  $silINVOLVEDPARTYSCREENINGdocoScreening.type := 'INHERITANCE';
                  $silScreeningScreenings.addElement($silINVOLVEDPARTYSCREENINGdocoScreening);
               End
            End
         End
      End
      /****************** SOW Family *********************/
      If LIB_Validator.validateNotEmptyIndexed($cmnKycSow.sowFamilyRelationsRoyalty) Then
         ForEach $cmnKycSowContribution In $cmnKycSow.sowFamilyRelationsRoyalty Do
            If LIB_Validator.validateNotEmptyIndexed($cmnKycSowContribution.evidences) Then
               ForEach $cmnhyperlink In $cmnKycSowContribution.evidences Do
                  $silINVOLVEDPARTYSCREENINGdocoScreening := CAST(SIL_INVOLVEDPARTYSCREENINGdocoScreening, CreateSkeletonDataClass(SIL_INVOLVEDPARTYSCREENINGdocoScreening));
                  $silINVOLVEDPARTYSCREENINGdocoScreening.findings := NewIndexed(SIL_INVOLVEDPARTYSCREENINGfinding);
                  $silINVOLVEDPARTYSCREENINGfinding := CAST(SIL_INVOLVEDPARTYSCREENINGdocoFinding, CreateSkeletonDataClass(SIL_INVOLVEDPARTYSCREENINGdocoFinding));
                  IF($cmnhyperlink.description != null, $silINVOLVEDPARTYSCREENINGfinding.description := $cmnhyperlink.description);
                  IF($cmnhyperlink.hyperlink != null, $silINVOLVEDPARTYSCREENINGfinding.sourceLink := $cmnhyperlink.hyperlink);
                  $silINVOLVEDPARTYSCREENINGdocoScreening.findings.addElement($silINVOLVEDPARTYSCREENINGfinding);
                  $silINVOLVEDPARTYSCREENINGdocoScreening.type := 'FAMILY_SITUATION';
                  $silScreeningScreenings.addElement($silINVOLVEDPARTYSCREENINGdocoScreening);
               End
            End
         End
      End
      /****************** SOW Family *********************/
      If LIB_Validator.validateNotEmptyIndexed($cmnKycSow.sowOthers) Then
         ForEach $cmnKycSowContribution In $cmnKycSow.sowOthers Do
            If LIB_Validator.validateNotEmptyIndexed($cmnKycSowContribution.evidences) Then
               ForEach $cmnhyperlink In $cmnKycSowContribution.evidences Do
                  $silINVOLVEDPARTYSCREENINGdocoScreening := CAST(SIL_INVOLVEDPARTYSCREENINGdocoScreening, CreateSkeletonDataClass(SIL_INVOLVEDPARTYSCREENINGdocoScreening));
                  $silINVOLVEDPARTYSCREENINGdocoScreening.findings := NewIndexed(SIL_INVOLVEDPARTYSCREENINGfinding);
                  $silINVOLVEDPARTYSCREENINGfinding := CAST(SIL_INVOLVEDPARTYSCREENINGdocoFinding, CreateSkeletonDataClass(SIL_INVOLVEDPARTYSCREENINGdocoFinding));
                  IF($cmnhyperlink.description != null, $silINVOLVEDPARTYSCREENINGfinding.description := $cmnhyperlink.description);
                  IF($cmnhyperlink.hyperlink != null, $silINVOLVEDPARTYSCREENINGfinding.sourceLink := $cmnhyperlink.hyperlink);
                  $silINVOLVEDPARTYSCREENINGdocoScreening.findings.addElement($silINVOLVEDPARTYSCREENINGfinding);
                  $silINVOLVEDPARTYSCREENINGdocoScreening.type := 'OTHER';
                  $silScreeningScreenings.addElement($silINVOLVEDPARTYSCREENINGdocoScreening);
               End
            End
         End
      End
   End
End]]></definition>
        </method>
        <method name="createSILDocument" userId="pezzi" uuid="ffffffff-f454-8975-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILDocument'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILDocument(String $hyperlink, String $description := null, String $documentType := null) : SIL_CMSdocument Begin
   SIL_CMSdocument $silDocument := CAST(SIL_CMSdocument, CreateSkeletonDataClass(SIL_CMSdocument));
   IF($documentType != null, $silDocument.type := $documentType);
   IF($hyperlink != null, $silDocument.link := $hyperlink);
   IF($description != null, $silDocument.comment := $description);
   Return $silDocument;
End]]></definition>
        </method>
        <method name="createSILDocumentFromBusinessRelationshipParty" userId="pezzi" uuid="00000000-585a-21af-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILDocumentFromBusinessRelationshipParty'.
  @param $documentManagerHelper CMN_DocumentManagerHelper.
  @param $businessRelationship CMN_BusinessRelationship.
  @param $party CMN_Party.
  @return       SIL_CMSdocument.
*/
StaticFunction createSILDocumentFromBusinessRelationshipParty(CMN_BusinessRelationship $businessRelationship, CMN_Party $party, CMN_DocumentTrackerManagerItemAdditional $documentTrackerItem) : SIL_CMSdocument Begin
   SIL_CMSdocument $silDocument;
   If $documentTrackerItem != null Then
      $silDocument := CAST(SIL_CMSdocument, CreateSkeletonDataClass(SIL_CMSdocument));
      //CLASS
      IF($documentTrackerItem.sectionId != null, $silDocument.class := $documentTrackerItem.sectionId);
      //
      //ReceivedDate
      IF($documentTrackerItem.receivedDate != null, $silDocument.receivedDate := $documentTrackerItem.receivedDate);
      //
      //Type
      IF($documentTrackerItem.documentType != null, $silDocument.type := LIST($documentTrackerItem.documentType, 'CMN_DocumentTypeUpload__selector', 'sil_Id'));
      //
      //Name
      IF($documentTrackerItem.documentFile != null && $documentTrackerItem.documentFile.clusterFile != null, $silDocument.name := REPLACE(FILENAME($documentTrackerItem.documentFile.clusterFile), '^\\d+?_', ''));
      //
      //Title
      IF($documentTrackerItem.description != null, $silDocument.title := $documentTrackerItem.description);
      //
      //ExpiredOn
      //IF();
      //
      //Account
      SIL_ACCOUNTaccount $silAccount;
      If $businessRelationship.getSILID() != null Then
         //account Id
         $silAccount := CAST(SIL_ACCOUNTaccount, CreateSkeletonDataClass(SIL_ACCOUNTaccount));
         IF($party == null, $silAccount.accountId := $businessRelationship.getSILID());
         //bookingCenter
         SIL_INVOLVEDPARTYdepartment $silDepartment;
         If $businessRelationship.getBookingCenter() != null Then
            $silDepartment := CAST(SIL_INVOLVEDPARTYdepartment, CreateSkeletonDataClass(SIL_INVOLVEDPARTYdepartment));
            $silDepartment.bookingCenter := LIST($businessRelationship.getBookingCenter(), 'CMN_BookingCenter__selector', 'locationCode', 'description');
         End
         IF($silDepartment != null, $silAccount.bookingCenter := $silDepartment);
      End
      IF($silAccount != null, $silDocument.accounts.addElement($silAccount));
      //
      //ROLES
      SIL_INVOLVEDPARTYcustomerRole $customerRole;
      If $party != null Then
         $customerRole := CAST(SIL_INVOLVEDPARTYcustomerRole, CreateSkeletonDataClass(SIL_INVOLVEDPARTYcustomerRole));
         SIL_INVOLVEDPARTYindividual $individual;
         If $party.getSILID() != null Then
            $individual := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual));
            $individual.id := $party.getSILID();
            SIL_INVOLVEDPARTYindividualName $individualName;
            If $party.getFullName() != null Then
               $individualName := CAST(SIL_INVOLVEDPARTYindividualName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividualName));
               $individualName.fullName := $party.getFullName();
            End
            IF($individualName != null, $individual.names.addElement($individualName));
         End
         IF($individual != null, $customerRole.party := $individual);
      End
      IF($customerRole != null, $silDocument.roles.addElement($customerRole));
   End
   Return $silDocument;
End]]></definition>
        </method>
        <method name="createSILEmailAddress" userId="pezzi" uuid="00000000-537a-dc12-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILEmailAddress'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILEmailAddress(CMN_Email $cmnEmail) : SIL_INVOLVEDPARTYemailAddress Begin
   SIL_INVOLVEDPARTYemailAddress $silEmail := CAST(SIL_INVOLVEDPARTYemailAddress, CreateSkeletonDataClass(SIL_INVOLVEDPARTYemailAddress));
   If $cmnEmail == null Then
      LIB_Logger.integrationWarn('[INT_SILMapping]: CMN_Email object empty, creating empty SIL_EmailAddress');
      Return $silEmail;
   End
   //Old logic prior to US changes was sending a fixed value - Story # 172602
   //$silEmail.type := '04'
   IF(not EMPTY($cmnEmail.getSILID()), $silEmail.addressId := $cmnEmail.getSILID());
   IF(not EMPTY($cmnEmail.address), $silEmail.email := $cmnEmail.address);
   If not EMPTY($silEmail.email) && MATCH($silEmail.email, '@') Then
      $silEmail.domainName := SPLIT($cmnEmail.address, '@')[2];
   End
   // @STODO no corresponding fields in Process
   $silEmail.validFrom := NOW();
   $silEmail.isAttachmentAllowed := true;
   IF($cmnEmail.isMain != null, $silEmail.isPrimary := $cmnEmail.isMain);
   INT_SILMappingCMNtoSILVariationFactory__selector().createSILEmailAddress($cmnEmail, $silEmail);
   Return $silEmail;
End]]></definition>
        </method>
        <method name="createSILEstimatedNetWorth" userId="pezzi" uuid="00000000-1ec8-f233-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILEstimatedNetWorth'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILEstimatedNetWorth(CMN_Party $cmnParty) : SIL_KYCestimatedNetWorth Begin
   If $cmnParty == null || not ISA($cmnParty, CMN_LegalEntity) Then
      Return null;
   End
   SIL_KYCestimatedNetWorth $silEstimatedNetWorth := CAST(SIL_KYCestimatedNetWorth, CreateSkeletonDataClass(SIL_KYCestimatedNetWorth));
   /********************************** GENERAL FIELDS ********************************/
   CMN_LegalEntity $legalEntity := CAST(CMN_LegalEntity, $cmnParty);
   CMN_LegalEntityKycProfile $cmnLegalEntityKycProfile := $legalEntity.getKYCProfile();
   /********************************Estimated Worth ***********************************/
   If NotEmpty($cmnLegalEntityKycProfile.financialInformation.getSILID()) Then
      $silEstimatedNetWorth.id := $cmnLegalEntityKycProfile.financialInformation.getSILID();
   End
   If $cmnLegalEntityKycProfile.financialInformation.financialAssets != null Then
      $silEstimatedNetWorth.financialAssetsAmount := $cmnLegalEntityKycProfile.financialInformation.financialAssets;
   End
   If $cmnLegalEntityKycProfile.financialInformation.fixedAssets != null Then
      $silEstimatedNetWorth.fixedAssetsAmount := $cmnLegalEntityKycProfile.financialInformation.fixedAssets;
   End
   If $cmnLegalEntityKycProfile.financialInformation.otherAssets != null Then
      $silEstimatedNetWorth.otherAssetsAmount := $cmnLegalEntityKycProfile.financialInformation.otherAssets;
   End
   If $cmnLegalEntityKycProfile.financialInformation.debts != null Then
      $silEstimatedNetWorth.debtsAssetsAmount := $cmnLegalEntityKycProfile.financialInformation.debts;
   End
   If $cmnLegalEntityKycProfile.financialInformation.financialAssetsRate != null Then
      $silEstimatedNetWorth.financialAssetsPercentage := $cmnLegalEntityKycProfile.financialInformation.financialAssetsRate;
   End
   If $cmnLegalEntityKycProfile.financialInformation.fixedAssetsRate != null Then
      $silEstimatedNetWorth.fixedAssetsPercentage := $cmnLegalEntityKycProfile.financialInformation.fixedAssetsRate;
   End
   If $cmnLegalEntityKycProfile.financialInformation.otherAssetsRate != null Then
      $silEstimatedNetWorth.otherAssetsPercentage := $cmnLegalEntityKycProfile.financialInformation.otherAssetsRate;
   End
   If $cmnLegalEntityKycProfile.financialInformation.debts != null Then
      $silEstimatedNetWorth.debtsAssetsPercentage := $cmnLegalEntityKycProfile.financialInformation.debtsRate;
   End
   If $cmnLegalEntityKycProfile.financialInformation.estimatedAnnualRevenues != null Then
      $silEstimatedNetWorth.estimatedAnnualIncome := TOSTRING($cmnLegalEntityKycProfile.financialInformation.estimatedAnnualRevenues);
   End
   If $cmnLegalEntityKycProfile.financialInformation.estimatedAnnualNetIncome != null Then
      $silEstimatedNetWorth.netWealthAmount := $cmnLegalEntityKycProfile.financialInformation.estimatedAnnualNetIncome.toString();
   End
   If $cmnLegalEntityKycProfile.financialInformation.customerKeyFinancialData != null Then
      $silEstimatedNetWorth.customerRelevantKeyFinancialDataType := LIST($cmnLegalEntityKycProfile.financialInformation.customerKeyFinancialData, 'CMN_kycCustomerKeyFinancialData', 'sil_Id');
   End
   If $cmnLegalEntityKycProfile.financialInformation.customerKeyFinancialDataAmount != null Then
      $silEstimatedNetWorth.annualTurnoverTotalAmount := $cmnLegalEntityKycProfile.financialInformation.customerKeyFinancialDataAmount;
   End
   If $cmnLegalEntityKycProfile.financialInformation.customerKeyFinancialDataInfo != null Then
      $silEstimatedNetWorth.incomeComment := $cmnLegalEntityKycProfile.financialInformation.customerKeyFinancialDataInfo;
   End
   If $cmnLegalEntityKycProfile.financialInformation.customerKeyFinancialOther != null Then
      $silEstimatedNetWorth.customerRelevantKeyFinancialDescription := $cmnLegalEntityKycProfile.financialInformation.customerKeyFinancialOther;
   End
   
   Return $silEstimatedNetWorth;
End]]></definition>
        </method>
        <method name="createSILFindings" userId="pezzi" uuid="ffffffff-9885-8e64-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILFindings'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILFindings(CMN_Party $cmnParty) : Indexed SIL_INVOLVEDPARTYSCREENINGfinding Begin
   Indexed SIL_INVOLVEDPARTYSCREENINGfinding $silFindings := NewIndexed(SIL_INVOLVEDPARTYSCREENINGfinding);
   If $cmnParty.kycProfile.screening.isSubjectToNegativeNews Then
      If LIB_Validator.validateNotEmptyIndexed($cmnParty.kycProfile.screening.connectedPartyNegativeNews) Then
         CMN_ConnectedPartyNegativeNews $cmnConnectedPartyNegativeNews;
         SIL_INVOLVEDPARTYSCREENINGnegativeMediaFinding $silINVOLVEDPARTYSCREENINGnegativeMediaScreening;
         ForEach $cmnConnectedPartyNegativeNews In $cmnParty.kycProfile.screening.connectedPartyNegativeNews Do
            $silINVOLVEDPARTYSCREENINGnegativeMediaScreening := CAST(SIL_INVOLVEDPARTYSCREENINGnegativeMediaFinding, CreateSkeletonDataClass(SIL_INVOLVEDPARTYSCREENINGnegativeMediaFinding));
            IF(NotEmpty($cmnConnectedPartyNegativeNews.getSILID()), $silINVOLVEDPARTYSCREENINGnegativeMediaScreening.id := $cmnConnectedPartyNegativeNews.getSILID());
            //$silINVOLVEDPARTYSCREENINGnegativeMediaScreening.isSubjectToNegativeMedia := true;
            IF($cmnConnectedPartyNegativeNews.eventType != null, $silINVOLVEDPARTYSCREENINGnegativeMediaScreening.type := LIST($cmnConnectedPartyNegativeNews.eventType, 'CMN_ComplianceEventType', 'sil_Id'));
            IF($cmnConnectedPartyNegativeNews.year != null, $silINVOLVEDPARTYSCREENINGnegativeMediaScreening.year := TOSTRING($cmnConnectedPartyNegativeNews.year));
            IF(NotEmpty($cmnConnectedPartyNegativeNews.reason), $silINVOLVEDPARTYSCREENINGnegativeMediaScreening.subType := LIST($cmnConnectedPartyNegativeNews.reason, 'CMN_ComplianceReasons', 'sil_Id'));
            IF($cmnConnectedPartyNegativeNews.comment != null, $silINVOLVEDPARTYSCREENINGnegativeMediaScreening.description := $cmnConnectedPartyNegativeNews.comment);
            $silFindings.addElement($silINVOLVEDPARTYSCREENINGnegativeMediaScreening);
         End
      End
   End
   Return $silFindings;
End]]></definition>
        </method>
        <method name="createSILIdentityAndAddressDocument" userId="pezzi" uuid="00000000-7253-e190-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILIdentityAndAddressDocument'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILIdentityAndAddressDocument(CMN_IdentificationDocument $cmnIdentificationDocument) : SIL_INVOLVEDPARTYidentityAndAddressDocument Begin
   SIL_INVOLVEDPARTYidentityAndAddressDocument $silDocumentationItem := CAST(SIL_INVOLVEDPARTYidentityAndAddressDocument, CreateSkeletonDataClass(SIL_INVOLVEDPARTYidentityAndAddressDocument));
   IF($cmnIdentificationDocument.getSILID() != null, $silDocumentationItem.documentId := $cmnIdentificationDocument.getSILID());
   IF($cmnIdentificationDocument.idType != null, $silDocumentationItem.documentType := LIST($cmnIdentificationDocument.idType, 'CMN_IdentificationTypes__selector', 'sil_Id'));
   If $cmnIdentificationDocument.otherIdentificationType != null && ($cmnIdentificationDocument.idType == 'other' || $cmnIdentificationDocument.idType == 'otherLegal') Then
      $silDocumentationItem.documentationName := $cmnIdentificationDocument.otherIdentificationType;
   End
   IF($cmnIdentificationDocument.idNumber != null, $silDocumentationItem.documentNumber := $cmnIdentificationDocument.idNumber);
   IF($cmnIdentificationDocument.idIssuanceDate != null, $silDocumentationItem.issueDate := $cmnIdentificationDocument.idIssuanceDate);
   IF($cmnIdentificationDocument.idExpirationDate != null, $silDocumentationItem.expiryDate := $cmnIdentificationDocument.idExpirationDate);
   IF($cmnIdentificationDocument.idIssuancePlace != null, $silDocumentationItem.placeOfIssue := $cmnIdentificationDocument.idIssuancePlace);
   IF($cmnIdentificationDocument.idIssuanceState != null, $silDocumentationItem.stateOfIssue := $cmnIdentificationDocument.idIssuanceState);
   IF(NotEmpty($cmnIdentificationDocument.idIssuanceCountry), $silDocumentationItem.countryOfIssue := INT_SILMappingCMNtoSIL_v2.createSILCountry($cmnIdentificationDocument.idIssuanceCountry));
   IF($cmnIdentificationDocument.idIssuedBy != null, $silDocumentationItem.issuingAuthorityName := $cmnIdentificationDocument.idIssuedBy);
   IF($cmnIdentificationDocument.isMain != null, $silDocumentationItem.isPrimary := $cmnIdentificationDocument.isMain);
   Return $silDocumentationItem;
End]]></definition>
        </method>
        <method name="createSILIndividual" userId="pezzi" uuid="00000000-5f28-ac73-0000-000000000000">
            <definition><![CDATA[/**
  Creates a SIL_INVOLVEDPARTYindividual Object taking a CMN_PhysicalPerson and a CMN_BusinessRelationship Object as input.
  @param $cmnPhysicalPerson is the CMN_PhysicalPerson Object
  @param $cmnBusinessRelationship is the CMN_BusinessRelationship Object 
  @return       The mapped SIL_INVOLVEDPARTYindividual Object
*/
StaticFunction createSILIndividual(CMN_PhysicalPerson $cmnPhysicalPerson, SIL_INVOLVEDPARTYindividual $silIndividual := null) : SIL_INVOLVEDPARTYindividual Begin
   /**************************************** CREATE TOP STRUCTURES *******************************/
   If $silIndividual == null Then
      $silIndividual := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual));
   End
   //$silIndividual.roles := NewIndexed(SIL_INVOLVEDPARTYinvolvedPartyRole);
   CMN_PhysicalPersonKycProfile $cmnPhysicalPersonKycProfile;
   CMN_KycSow $cmnPhysicalPersonKycSow;
   If $cmnPhysicalPerson.kycProfile != null Then
      $cmnPhysicalPersonKycProfile := CAST(CMN_PhysicalPersonKycProfile, $cmnPhysicalPerson.kycProfile);
      If $cmnPhysicalPersonKycProfile.sourceOfWealth != null Then
         $cmnPhysicalPersonKycSow := $cmnPhysicalPersonKycProfile.sourceOfWealth;
      End
      
   Else
      LIB_Logger.integrationDebug('[INT_SILMapping]: Physical person KYC missing');
   End
   Return $silIndividual;
End]]></definition>
        </method>
        <method name="createSILIndividualIDV" userId="pezzi" uuid="ffffffff-be3d-3548-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILIndividualIDV'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILIndividualIDV(CMN_PhysicalPerson $cmnPhysicalPerson, CMN_BusinessRelationship $br, SIL_INVOLVEDPARTYindividual $silIndividual) : SIL_INVOLVEDPARTYindividual Begin
   If $cmnPhysicalPerson == null || $silIndividual == null Then
      Return $silIndividual;
   End
   /**************************************** CREATE INDEXES ****************************************/
   $silIndividual.names := NewIndexed(SIL_INVOLVEDPARTYindividualName);
   $silIndividual.addresses := NewIndexed(SIL_INVOLVEDPARTYaddress);
   $silIndividual.tmpProperty1 := 'property1';
   /**************************************** MAPPING NAMES ****************************************/
   SIL_INVOLVEDPARTYindividualName $silIndividualName := CAST(SIL_INVOLVEDPARTYindividualName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividualName));
   IF($cmnPhysicalPerson.firstName != null, $silIndividualName.firstName := $cmnPhysicalPerson.firstName);
   IF($cmnPhysicalPerson.lastName != null, $silIndividualName.lastName := $cmnPhysicalPerson.lastName);
   IF($cmnPhysicalPerson.getFullName() != null, $silIndividualName.fullName := $cmnPhysicalPerson.getFullName());
   IF($cmnPhysicalPerson.formerMaidenName != null, $silIndividualName.maidenName := $cmnPhysicalPerson.formerMaidenName);
   IF($cmnPhysicalPerson.middleName != null, $silIndividualName.middleName := $cmnPhysicalPerson.middleName);
   IF($cmnPhysicalPerson.alias != null, $silIndividualName.alias := $cmnPhysicalPerson.alias);
   IF($cmnPhysicalPerson.salutation != null, $silIndividualName.title := LIST($cmnPhysicalPerson.salutation, 'CMN_Salutations__selector', 'sil_Id'));
   IF(NotEmpty($cmnPhysicalPerson.otherSalutation), $silIndividualName.otherTitle := $cmnPhysicalPerson.otherSalutation);
   $silIndividual.names.addElement($silIndividualName);
   /**************************************** MAPPING PREVIOUS NAMES ****************************************/
   SIL_INVOLVEDPARTYindividualName $silIndividualPreviousName := CAST(SIL_INVOLVEDPARTYindividualName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividualName));
   $silIndividualPreviousName.isValid := false;
   IF($cmnPhysicalPerson.previousName != null, $silIndividualPreviousName.lastName := $cmnPhysicalPerson.previousName);
   $silIndividual.names.addElement($silIndividualPreviousName);
   /********************************GENERAL VALUES**************************************************/
   IF($cmnPhysicalPerson.hasRelationshipHSBCGroup != null, $silIndividual.existingCustomerIndicator := $cmnPhysicalPerson.hasRelationshipHSBCGroup);
   IF($cmnPhysicalPerson.gender != null, $silIndividual.gender := LIST($cmnPhysicalPerson.gender, 'SIL_Genders', 'id', 'cmn_id'));
   IF($cmnPhysicalPerson.dateOfBirth != null, $silIndividual.dateOfBirth := $cmnPhysicalPerson.dateOfBirth);
   IF($cmnPhysicalPerson.townOfBirth != null, $silIndividual.placeOfBirth := $cmnPhysicalPerson.townOfBirth);
   IF(NotEmpty($cmnPhysicalPerson.countryOfBirth), $silIndividual.countryOfBirth := INT_SILMappingCMNtoSIL_v2.createSILCountry($cmnPhysicalPerson.countryOfBirth));
   IF($cmnPhysicalPerson.isPartyAlive != null, $silIndividual.deceasedIndicator := ! $cmnPhysicalPerson.isPartyAlive);
   IF($cmnPhysicalPerson.regulatoryProfile.fatcaProfile.hasUSPassport != null, $silIndividual.holdUSPassportIndicator := $cmnPhysicalPerson.regulatoryProfile.fatcaProfile.hasUSPassport);
   IF($cmnPhysicalPerson.regulatoryProfile.fatcaProfile.hasOtherUSVisa != null, $silIndividual.holdUSVisaIndicator := $cmnPhysicalPerson.regulatoryProfile.fatcaProfile.hasOtherUSVisa);
   IF($cmnPhysicalPerson.regulatoryProfile.fatcaProfile.otherUSImmigrationNumber != null, $silIndividual.holdUSVisaDescription := $cmnPhysicalPerson.regulatoryProfile.fatcaProfile.otherUSImmigrationNumber);
   IF($cmnPhysicalPerson.regulatoryProfile.fatcaProfile.hasGreenCard != null, $silIndividual.holdUSGreenCardIndicator := $cmnPhysicalPerson.regulatoryProfile.fatcaProfile.hasGreenCard);
   IF($br.kytProfile.generalInformation.isPotentialVulnerableClient != null, $silIndividual.potentiallyVulnerableCustomerIndicator := $br.kytProfile.generalInformation.isPotentialVulnerableClient);
   //Must be changed to nationalities
   If NotEmpty($cmnPhysicalPerson.nationalities.mainNationality) Then
      SIL_STATICcountry $nationality := INT_SILMappingCMNtoSIL_v2.createSILCountry($cmnPhysicalPerson.nationalities.mainNationality);
      $nationality.type := 'MAIN';
      $silIndividual.nationalities.addElement($nationality);
   End
   If NotEmpty($cmnPhysicalPerson.nationalities.secondNationality) Then
      SIL_STATICcountry $nationality := INT_SILMappingCMNtoSIL_v2.createSILCountry($cmnPhysicalPerson.nationalities.secondNationality);
      $nationality.type := 'SECOND';
      $silIndividual.nationalities.addElement($nationality);
   End
   If NotEmpty($cmnPhysicalPerson.nationalities.thirdNationality) Then
      SIL_STATICcountry $nationality := INT_SILMappingCMNtoSIL_v2.createSILCountry($cmnPhysicalPerson.nationalities.thirdNationality);
      $nationality.type := 'THIRD';
      $silIndividual.nationalities.addElement($nationality);
   End
   $silIndividual.documentationItems := NewIndexed(SIL_INVOLVEDPARTYdocumentationItem);
   /************************************** Documentation Items **********************/
   If LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPerson.identifications) Then
      CMN_IdentificationDocument $cmnIdentificationDocument;
      SIL_INVOLVEDPARTYidentityAndAddressDocument $silDocumentationItem;
      ForEach $cmnIdentificationDocument In $cmnPhysicalPerson.identifications Do
         $silDocumentationItem := INT_SILMappingCMNtoSIL_v2.createSILIdentityAndAddressDocument($cmnIdentificationDocument);
         IF($silDocumentationItem != null, $silIndividual.documentationItems.addElement($silDocumentationItem));
      End
   End
   /********** SFC ***************/
   If ERROR($cmnPhysicalPerson.regulatoryProfile.sfcCodeOfConduct.isConsentLetterRequired != null, false) Then
      SIL_INVOLVEDPARTYregistrationDocumentation $silRegistrationDocumentation := CAST(SIL_INVOLVEDPARTYregistrationDocumentation, CreateSkeletonDataClass(SIL_INVOLVEDPARTYregistrationDocumentation));
      $silRegistrationDocumentation.consentLetterRequiredIndicator := $cmnPhysicalPerson.regulatoryProfile.sfcCodeOfConduct.isConsentLetterRequired;
      IF($silRegistrationDocumentation != null, $silIndividual.documentationItems.addElement($silRegistrationDocumentation));
   End
   /************************************** Residential ADDRESSES **********************/
   If LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPerson.contact.genericAddresses) Then
      CMN_MailAddress $mailAddress;
      SIL_INVOLVEDPARTYpostalAddress $silPostalAddress;
      ForEach $mailAddress In $cmnPhysicalPerson.contact.genericAddresses Do
         If $mailAddress != null Then
            $silPostalAddress := INT_SILMappingCMNtoSIL_v2.createSILPostalAddress($mailAddress);
            $silPostalAddress.type := LIST('generic', 'CMN_AddressTypes__selector', 'code');
            $silIndividual.addresses.addElement($silPostalAddress);
         End
      End
   End
   /************************************** Previous ADDRESSES **********************/
   If LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPerson.contact.previousAddresses) Then
      $silIndividual.individualResidencies := NewIndexed(SIL_INVOLVEDPARTYindividualResidency);
      CMN_MailAddress $previousAddress;
      SIL_INVOLVEDPARTYpostalAddress $silPostalAddress;
      ForEach $previousAddress In $cmnPhysicalPerson.contact.previousAddresses Do
         If $previousAddress != null Then
            $silPostalAddress := INT_SILMappingCMNtoSIL_v2.createSILPostalAddress($previousAddress);
            $silPostalAddress.type := LIST('previous', 'CMN_AddressTypes__selector', 'code');
            $silIndividual.addresses.addElement($silPostalAddress);
         End
      End
   End
   /***************** Mailing ADDRESSES *********************/
   If LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPerson.contact.mailingAddresses) Then
      CMN_MailAddress $cmnMailAddress;
      SIL_INVOLVEDPARTYpostalAddress $silPostalAddress;
      ForEach $cmnMailAddress In $cmnPhysicalPerson.contact.mailingAddresses Do
         If $cmnMailAddress != null Then
            $silPostalAddress := INT_SILMappingCMNtoSIL_v2.createSILPostalAddress($cmnMailAddress);
            $silPostalAddress.type := LIST('mailing', 'CMN_AddressTypes__selector', 'code');
            $silIndividual.addresses.addElement($silPostalAddress);
         End
      End
   End
   /************************************** Telephon ADDRESSES **********************/
   If LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPerson.contact.genericAddresses) Then
      CMN_Phone $cmnPhone;
      ForEach $cmnPhone In $cmnPhysicalPerson.contact.phone Do
         If $cmnPhone != null Then
            SIL_INVOLVEDPARTYtelephoneNumber $telephoneNumber := INT_SILMappingCMNtoSIL_v2.createSILPhoneAddress($cmnPhone);
            $silIndividual.addresses.addElement($telephoneNumber);
         End
      End
   End
   /************************************** Email ADDRESSES **********************/
   If LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPerson.contact.email) Then
      CMN_Email $mailAddress;
      ForEach $mailAddress In $cmnPhysicalPerson.contact.email Do
         If $mailAddress != null Then
            SIL_INVOLVEDPARTYemailAddress $emailAddress := INT_SILMappingCMNtoSIL_v2.createSILEmailAddress($mailAddress);
            $silIndividual.addresses.addElement($emailAddress);
         End
      End
   End
   INT_SILMappingCMNtoSILVariationFactory__selector().createSILIndividualIDV($cmnPhysicalPerson, $silIndividual);
   Return $silIndividual;
End]]></definition>
        </method>
        <method name="createSILIndividualResidency" userId="bellanca" uuid="00000000-38e3-1fe7-0000-000000000000">
            <definition><![CDATA[/**
	Builds an indidividual residency based on the parameters given, if no value is given 0 is assumed
    @params country is a string representing the country
   	@params nbThisYear is an integer value represening the the nb of days spend at that location this year
   	@params nbPastYear is an integer value represening the the nb of days spend at that location last year
   	@params nbYearBefore is an integer value represening the the nb of days spend at that location the year before that
*/
StaticFunction createSILIndividualResidency(CMN_MailAddress $mailAddress) : SIL_INVOLVEDPARTYindividualResidency Begin
   SIL_INVOLVEDPARTYindividualResidency $indRes := CAST(SIL_INVOLVEDPARTYindividualResidency, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividualResidency));
   IF(NotEmpty($mailAddress.getSILID()), $indRes.id := $mailAddress.getSILID());
   IF(NotEmpty($mailAddress.country), $indRes.countryOfIssue := INT_SILMappingCMNtoSIL_v2.createSILCountry($mailAddress.country));
   If $mailAddress.validTo != null && $mailAddress.validFrom != null Then
      Date $today := TODAY();
      Integer $currentYear := LIB_DateHelper.getYear(TODAY());
      Double $yearsDiffToToday := LIB_DateHelper.getYear($today) - LIB_DateHelper.getYear($mailAddress.validTo);
      Double $yearsDiffFromToday := LIB_DateHelper.getYear($today) - LIB_DateHelper.getYear($mailAddress.validFrom);
      Double $yearsOfAddress := LIB_DateHelper.getYear($mailAddress.validTo) - LIB_DateHelper.getYear($mailAddress.validFrom);
      $indRes.nbDaysSpentThisYear := 0;
      $indRes.nbDaysSpentThiLastYear := 0;
      $indRes.nbDaysSpentTheYearBefore := 0;
      If $yearsOfAddress >= 0.0 Then
         If $yearsDiffToToday < 0.0 Then
            $indRes.nbDaysSpentThisYear := TOINTEGER(TIMEDIFF(LIB_DateHelper.firstDayOfYear($currentYear), $today, 'd'));
            If $yearsDiffFromToday < 0.0 Then
               $indRes.nbDaysSpentThisYear := 0;
            ElseIf $yearsDiffFromToday == 0.0 Then
               Double $diff := TOINTEGER(TIMEDIFF($mailAddress.validFrom, $today, 'd'));
               If $diff > 0.0 Then
                  $indRes.nbDaysSpentThisYear := TOINTEGER(TIMEDIFF($mailAddress.validFrom, $today, 'd'));
               Else
                  $indRes.nbDaysSpentThisYear := 0;
               End
            ElseIf TOINTEGER($yearsDiffFromToday) == 1 Then
               $indRes.nbDaysSpentThiLastYear := TOINTEGER(TIMEDIFF($mailAddress.validFrom, LIB_DateHelper.lastDayOfYear($currentYear - 1), 'd'));
            ElseIf TOINTEGER($yearsDiffFromToday) == 2 Then
               $indRes.nbDaysSpentThiLastYear := TOINTEGER(TIMEDIFF(LIB_DateHelper.firstDayOfYear($currentYear - 1), LIB_DateHelper.lastDayOfYear($currentYear - 1), 'd'));
               $indRes.nbDaysSpentTheYearBefore := TOINTEGER(TIMEDIFF($mailAddress.validFrom, LIB_DateHelper.lastDayOfYear($currentYear - 2), 'd'));
            ElseIf TOINTEGER($yearsDiffFromToday) >= 2 Then
               $indRes.nbDaysSpentThiLastYear := TOINTEGER(TIMEDIFF(LIB_DateHelper.firstDayOfYear($currentYear - 1), LIB_DateHelper.lastDayOfYear($currentYear - 1), 'd'));
               $indRes.nbDaysSpentTheYearBefore := TOINTEGER(TIMEDIFF(LIB_DateHelper.firstDayOfYear($currentYear - 2), LIB_DateHelper.lastDayOfYear($currentYear - 2), 'd'));
            End
         ElseIf $yearsDiffToToday == 0.0 Then
            Date $lastDate;
            If TIMEDIFF($mailAddress.validTo, $today, 'd') > 0.0 Then
               $lastDate := $mailAddress.validTo;
            Else
               $lastDate := $today;
            End
            If TOINTEGER($yearsDiffFromToday) == 0 Then
               $indRes.nbDaysSpentThisYear := TOINTEGER(TIMEDIFF($mailAddress.validFrom, $mailAddress.validTo, 'd'));
            ElseIf TOINTEGER($yearsDiffFromToday) == 1 Then
               $indRes.nbDaysSpentThisYear := TOINTEGER(TIMEDIFF(LIB_DateHelper.firstDayOfYear($currentYear), $today, 'd'));
               $indRes.nbDaysSpentThiLastYear := TOINTEGER(TIMEDIFF($mailAddress.validFrom, LIB_DateHelper.lastDayOfYear($currentYear - 1), 'd'));
            ElseIf TOINTEGER($yearsDiffFromToday) == 2 Then
               $indRes.nbDaysSpentThisYear := TOINTEGER(TIMEDIFF(LIB_DateHelper.firstDayOfYear($currentYear), $today, 'd'));
               $indRes.nbDaysSpentThiLastYear := TOINTEGER(TIMEDIFF(LIB_DateHelper.firstDayOfYear($currentYear - 1), LIB_DateHelper.lastDayOfYear($currentYear - 1), 'd'));
               $indRes.nbDaysSpentTheYearBefore := TOINTEGER(TIMEDIFF($mailAddress.validFrom, LIB_DateHelper.lastDayOfYear($currentYear - 2), 'd'));
            Else
               $indRes.nbDaysSpentThisYear := TOINTEGER(TIMEDIFF(LIB_DateHelper.firstDayOfYear($currentYear), $lastDate, 'd'));
               $indRes.nbDaysSpentThiLastYear := TOINTEGER(TIMEDIFF(LIB_DateHelper.firstDayOfYear($currentYear - 1), LIB_DateHelper.lastDayOfYear($currentYear - 1), 'd'));
               $indRes.nbDaysSpentTheYearBefore := TOINTEGER(TIMEDIFF(LIB_DateHelper.firstDayOfYear($currentYear - 2), LIB_DateHelper.lastDayOfYear($currentYear - 2), 'd'));
            End
         ElseIf TOINTEGER($yearsDiffToToday) == 1 Then
            If TOINTEGER($yearsDiffFromToday) == 1 Then
               $indRes.nbDaysSpentThiLastYear := TOINTEGER(TIMEDIFF($mailAddress.validFrom, $mailAddress.validTo, 'd'));
            ElseIf TOINTEGER($yearsDiffFromToday) == 2 Then
               $indRes.nbDaysSpentThiLastYear := TOINTEGER(TIMEDIFF(LIB_DateHelper.firstDayOfYear($currentYear - 1), $mailAddress.validTo, 'd'));
               $indRes.nbDaysSpentTheYearBefore := TOINTEGER(TIMEDIFF($mailAddress.validFrom, LIB_DateHelper.lastDayOfYear($currentYear - 2), 'd'));
            ElseIf TOINTEGER($yearsDiffFromToday) > 2 Then
               $indRes.nbDaysSpentThiLastYear := TOINTEGER(TIMEDIFF(LIB_DateHelper.firstDayOfYear($currentYear - 1), $mailAddress.validTo, 'd'));
               $indRes.nbDaysSpentTheYearBefore := TOINTEGER(TIMEDIFF(LIB_DateHelper.firstDayOfYear($currentYear - 2), LIB_DateHelper.lastDayOfYear($currentYear - 2), 'd'));
            End
         ElseIf TOINTEGER($yearsDiffToToday) == 2 Then
            If TOINTEGER($yearsDiffFromToday) == 2 Then
               $indRes.nbDaysSpentTheYearBefore := TOINTEGER(TIMEDIFF($mailAddress.validFrom, $mailAddress.validTo, 'd'));
            Else
               $indRes.nbDaysSpentTheYearBefore := TOINTEGER(TIMEDIFF($mailAddress.validTo, LIB_DateHelper.lastDayOfYear($currentYear - 2), 'd'));
            End
         Else
            LIB_Logger.integrationError('[createSILIndividualResidency] Previous Residency dates are not valid');
         End
      End
   End
   Return $indRes;
End]]></definition>
        </method>
        <method name="createSILInvolvedPartyIDV" userId="pezzi" uuid="00000000-48c4-00b6-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILInvolvedPartyIDV'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILInvolvedPartyIDV(CMN_Party $cmnParty, CMN_BusinessRelationship $br, SIL_INVOLVEDPARTYinvolvedParty $silInvolvedParty) : SIL_INVOLVEDPARTYinvolvedParty Begin
   If ISA($cmnParty, CMN_PhysicalPerson) and ISA($silInvolvedParty, SIL_INVOLVEDPARTYindividual) Then
      $silInvolvedParty := INT_SILMappingCMNtoSIL_v2.createSILIndividualIDV(CAST(CMN_PhysicalPerson, $cmnParty), $br, CAST(SIL_INVOLVEDPARTYindividual, $silInvolvedParty));
   ElseIf ISA($cmnParty, CMN_LegalEntity) and ISA($silInvolvedParty, SIL_INVOLVEDPARTYorganization) Then
      $silInvolvedParty := INT_SILMappingCMNtoSIL_v2.createSILOrganizationIDV(CAST(CMN_LegalEntity, $cmnParty), $br, CAST(SIL_INVOLVEDPARTYorganization, $silInvolvedParty));
   Else
      LIB_Logger.integrationError('UNKNOWN Party TYPE CONVERT: ' & TOSTRING($cmnParty));
   End
   Return $silInvolvedParty;
End]]></definition>
        </method>
        <method name="createSILMailingInstructions" userId="pezzi" uuid="ffffffff-93f4-2f76-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILMailingInstructions'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILMailingInstructions(CMN_BusinessRelationship $cmnBusinessRelationship) : Indexed SIL_ACCOUNTmailInstruction Begin
   /******** Mailing Instructions ************/
   Indexed SIL_ACCOUNTmailInstruction $silACCOUNTmailInstructions := NewIndexed(SIL_ACCOUNTmailInstruction);
   ForEach Record $cmnMailingInstructionType In RECORDS('CMN_MailingInstructionsTypes__selector') Do
      CMN_MailingInstruction $cmnMailingInstruction := $cmnBusinessRelationship.mailingInstructions[TOSTRING($cmnMailingInstructionType.getValue('id'))];
      If $cmnMailingInstruction == null Then
         Continue;
      End
      SIL_ACCOUNTmailInstruction $silACCOUNTmailInstruction := CAST(SIL_ACCOUNTmailInstruction, CreateSkeletonDataClass(SIL_ACCOUNTmailInstruction));
      $silACCOUNTmailInstruction.type := 'Original Mail';
      IF(NotEmpty($cmnMailingInstruction.language), $silACCOUNTmailInstruction.languageId := LIST($cmnMailingInstruction.language, 'CMN_MailingInstructionLanguage__selector', 'sil_id'));
      IF(NotEmpty($cmnMailingInstruction.frequency), $silACCOUNTmailInstruction.accountFrequency := LIST($cmnMailingInstruction.frequency, 'CMN_MailingInstructionFrequency__selector', 'sil_id'));
      IF(NotEmpty($cmnMailingInstruction.assetsFrequency), $silACCOUNTmailInstruction.assetFrequency := LIST($cmnMailingInstruction.assetsFrequency, 'CMN_MailingInstructionFrequency__selector', 'sil_id'));
      //IF($cmnMailingInstruction.mailHeader != null, $silACCOUNTmailInstruction.mailingHeader := $cmnMailingInstruction.mailHeader);
      If NotEmpty($cmnMailingInstruction.mode) Then
         $silACCOUNTmailInstruction.dispatchCode := LIST($cmnMailingInstruction.mode, 'CMN_MailingInstructionModes__selector', 'sil_id');
         SIL_INVOLVEDPARTYpostalAddress $silAddress := INT_SILMappingCMNtoSIL_v2.createSILPostalAddress($cmnMailingInstruction.originalRecipient);
         If $silAddress != null Then
            $silACCOUNTmailInstruction.address := $silAddress;
            IF($cmnMailingInstruction.originalRecipient.mailHeader != null, $silACCOUNTmailInstruction.mailingHeader := $cmnMailingInstruction.originalRecipient.mailHeader);
         End
         If NotEmpty($cmnMailingInstruction.emailForEStatementNotification) Then
            SIL_INVOLVEDPARTYemailAddress $email := CAST(SIL_INVOLVEDPARTYemailAddress, CreateSkeletonDataClass(SIL_INVOLVEDPARTYemailAddress));
            $email.email := $cmnMailingInstruction.emailForEStatementNotification;
            $silACCOUNTmailInstruction.address := $email;
         End
      End
      $silACCOUNTmailInstructions.addElement($silACCOUNTmailInstruction);
      If $cmnMailingInstruction.hasCopyMail and LIB_Validator.validateNotEmptyIndexed($cmnMailingInstruction.copyRecipients) Then
         ForEach CMN_MailingParty $cmnMailingParty In $cmnMailingInstruction.copyRecipients Do
            SIL_ACCOUNTmailInstruction $copySilACCOUNTmailInstruction := CLONE($silACCOUNTmailInstruction);
            //$copySilACCOUNTmailInstruction.dispatchCode := LIST('mailAndInternet', 'CMN_MailingInstructionModes__selector', 'sil_id');
            $copySilACCOUNTmailInstruction.type := 'Copy Mail';
            $copySilACCOUNTmailInstruction.address := INT_SILMappingCMNtoSIL_v2.createSILPostalAddress($cmnMailingParty);
            IF($cmnMailingParty.mailHeader != null, $silACCOUNTmailInstruction.mailingHeader := $cmnMailingParty.mailHeader);
            $silACCOUNTmailInstructions.addElement($copySilACCOUNTmailInstruction);
         End
      End
   End
   Return $silACCOUNTmailInstructions;
End]]></definition>
        </method>
        <method name="createSILOrganization" userId="pezzi" uuid="ffffffff-d994-e88d-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILOrganization'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILOrganization(CMN_LegalEntity $cmnLegalEntity, SIL_INVOLVEDPARTYorganization $silOrganization := null) : SIL_INVOLVEDPARTYorganization Begin
   If $silOrganization == null Then
      If $cmnLegalEntity.type.isTrustOrFoundation() Then
         $silOrganization := CAST(SIL_INVOLVEDPARTYtrust, CreateSkeletonDataClass(SIL_INVOLVEDPARTYtrust));
      Else
         $silOrganization := CAST(SIL_INVOLVEDPARTYorganization, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganization));
      End
   End
   /******************************** RETURN RESULT ********************************************/
   Return $silOrganization;
End]]></definition>
        </method>
        <method name="createSILOrganizationIDV" userId="pezzi" uuid="00000000-37a3-4aee-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILOrganizationIDV'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILOrganizationIDV(CMN_LegalEntity $cmnLegalEntity, CMN_BusinessRelationship $br, SIL_INVOLVEDPARTYorganization $silOrganization) : SIL_INVOLVEDPARTYorganization Begin
   If $cmnLegalEntity == null || $silOrganization == null Then
      Return $silOrganization;
   End
   /**************************************** CREATE INDEXES ****************************************/
   $silOrganization.names := NewIndexed(SIL_INVOLVEDPARTYindividualName);
   $silOrganization.addresses := NewIndexed(SIL_INVOLVEDPARTYaddress);
   $silOrganization.roles := NewIndexed(SIL_INVOLVEDPARTYinvolvedPartyRole);
   $silOrganization.businessNatureDetails := NewIndexed(SIL_INVOLVEDPARTYbusinessNatureDetails);
   $silOrganization.documentationItems := NewIndexed(SIL_INVOLVEDPARTYdocumentationItem);
   SIL_INVOLVEDPARTYincorporation $incorporation := CAST(SIL_INVOLVEDPARTYincorporation, CreateSkeletonDataClass(SIL_INVOLVEDPARTYincorporation));
   $silOrganization.documentationItems.addElement($incorporation);
   /******************************** Identification ****************************************************/
   //Organization <-> business nature details
   /******************************** GENERAL FIELDS *******************************************/
   IF($cmnLegalEntity.hasRelationshipHSBCGroup != null, $silOrganization.existingCustomerIndicator := $cmnLegalEntity.hasRelationshipHSBCGroup);
   //IF($cmnLegalEntity.registrationNumber != null, $silOrganization.companyNumber := $cmnLegalEntity.registrationNumber);
   If $cmnLegalEntity.type.isCommercialOperatingBusiness() Then
      $silOrganization.businessTypes.addElement('1');
      $silOrganization.entityType := 'COMMERCIAL_BUSINESS';
   ElseIf $cmnLegalEntity.type.isPrivateInvestmentCompany() Then
      $silOrganization.businessTypes.addElement('2');
      $silOrganization.entityType := 'PRIVATE_INVESTMENT_COMPANY';
   ElseIf ISA($silOrganization, SIL_INVOLVEDPARTYtrust) && $cmnLegalEntity.type.isTrustOrFoundation() Then
      $silOrganization.entityType := 'PRIVATE_HOLDING_TRUST';
      CMN_LegalEntityTrustFoundation $cmnTrust := CAST(CMN_LegalEntityTrustFoundation, $cmnLegalEntity);
      IF($cmnTrust.revocability != null, CAST(SIL_INVOLVEDPARTYtrust, $silOrganization).revocableIndicator := TOBOOLEAN(LIST($cmnTrust.revocability, 'CMN_TrustFoundationRevocability', 'sil_Id')));
      IF($cmnTrust.irrevocabilityType != null, CAST(SIL_INVOLVEDPARTYtrust, $silOrganization).irrevocableType := LIST($cmnTrust.irrevocabilityType, 'CMN_TrustFoundationIrrevocabilityType', 'sil_Id'));
      IF($cmnTrust.futureDateTrustDissolution != null, CAST(SIL_INVOLVEDPARTYtrust, $silOrganization).dissolutionDate := $cmnTrust.futureDateTrustDissolution);
      IF($cmnTrust.classOfBeneficiary != null, CAST(SIL_INVOLVEDPARTYtrust, $silOrganization).classOfBeneficiaries := $cmnTrust.classOfBeneficiary);
      If $cmnTrust.applicableLawCountry != null Then
         SIL_INVOLVEDPARTYcountryAddress $silCountryAddress := INT_SILMappingCMNtoSIL_v2.createSILCountryAddress($cmnTrust.applicableLawCountry, INT_SILEnumerations.getCountryTypeJuridiction());
         $silOrganization.addresses.addElement($silCountryAddress);
      End
   End
   IF($cmnLegalEntity.dateOfBoardOfDirectors != null, $silOrganization.boardOfDirectorsDate := $cmnLegalEntity.dateOfBoardOfDirectors);
   IF($cmnLegalEntity.structureDetails.financialInstitution.isPartyListedStockExchange != null, $silOrganization.listedStockExchangeIndicator := $cmnLegalEntity.structureDetails.financialInstitution.isPartyListedStockExchange);
   IF($cmnLegalEntity.structureDetails.financialInstitution.nameStockExchange != null, $silOrganization.stockExchangeCode := $cmnLegalEntity.structureDetails.financialInstitution.nameStockExchange);
   IF($cmnLegalEntity.structureDetails.financialInstitution.hasApprovedEquityExchange != null, $silOrganization.hasApprovedEquityListedOnHSBCIndicator := $cmnLegalEntity.structureDetails.financialInstitution.hasApprovedEquityExchange);
   IF($cmnLegalEntity.kycProfile.screening.hasComplexUnusualStructure != null, $silOrganization.isComplexStructure := $cmnLegalEntity.kycProfile.screening.hasComplexUnusualStructure);
   INT_SILMatchingTools_v2.matchCMNMainBusinessToSILOrganization($cmnLegalEntity.getKYCProfile().sourceOfWealth.mainBusiness, $silOrganization);
   //IF($cmnLegalEntity.irrevocabilityType != null, $silOrganization.:=$cmnLegalEntity.irrevocabilityType);
   //IF($cmnLegalEntity.applicableLawCountry != null, $silOrganization.:=$cmnLegalEntity.applicableLawCountry);
   //IF($cmnLegalEntity.registrationNumber != null, $silOrganization. := $cmnLegalEntity.registrationNumber);
   IF(NotEmpty($cmnLegalEntity.incorporationIssuingAuthority), $silOrganization.issuingAuthorityRegistrationName := $cmnLegalEntity.incorporationIssuingAuthority);
   //IF($cmnLegalEntity.futureDateTrustDissolution != null, $silOrganization. := $cmnLegalEntity.futureDateTrustDissolution);
   //IF($cmnLegalEntity.hsbcEntities != null, $silOrganization. := $cmnLegalEntity.hsbcEntities);
   //IF($cmnLegalEntity.dateOfBoardOfDirectors != null, $silOrganization. := $cmnLegalEntity.dateOfBoardOfDirectors);
   IF($br.clientSubtype != null, $silOrganization.subType := LIST($br.clientSubtype, 'CMN_ClientSubtype', 'sil_Id'));
   /******************************* Incorporation************************/
   IF($cmnLegalEntity.dateOfRegistration != null, $incorporation.incorporateDate := $cmnLegalEntity.dateOfRegistration);
   IF($cmnLegalEntity.registrationNumber != null, $incorporation.documentNumber := $cmnLegalEntity.registrationNumber);
   IF($cmnLegalEntity.incorporationIssuingAuthority != null, $incorporation.issuingAuthorityName := $cmnLegalEntity.incorporationIssuingAuthority);
   /*************** NAMES *********************/
   If $cmnLegalEntity.type.isTrustOrFoundation() Then
      SIL_INVOLVEDPARTYtrustName $silTrustName := CAST(SIL_INVOLVEDPARTYtrustName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYtrustName));
      IF($cmnLegalEntity.companyName != null, $silTrustName.name := $cmnLegalEntity.companyName);
      IF($cmnLegalEntity.getFullName() != null, $silTrustName.fullName := $cmnLegalEntity.getFullName());
      $silOrganization.names.addElement($silTrustName);
   Else
      SIL_INVOLVEDPARTYorganizationName $silOrganizationName := CAST(SIL_INVOLVEDPARTYorganizationName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganizationName));
      IF($cmnLegalEntity.companyName != null, $silOrganizationName.businessName := $cmnLegalEntity.companyName);
      IF($cmnLegalEntity.getFullName() != null, $silOrganizationName.fullName := $cmnLegalEntity.getFullName());
      IF($cmnLegalEntity.tradingName != null, $silOrganizationName.tradingName := $cmnLegalEntity.tradingName);
      $silOrganization.names.addElement($silOrganizationName);
   End
   /*************** Registrated ADDRESSES **********************/
   If LIB_Validator.validateNotEmptyIndexed($cmnLegalEntity.contact.genericAddresses) Then
      CMN_MailAddress $cmnMailAddress;
      SIL_INVOLVEDPARTYpostalAddress $silPostalAddress;
      ForEach $cmnMailAddress In $cmnLegalEntity.contact.genericAddresses Do
         If $cmnMailAddress != null Then
            $silPostalAddress := INT_SILMappingCMNtoSIL_v2.createSILPostalAddress($cmnMailAddress);
            $silPostalAddress.type := LIST('generic', 'CMN_AddressTypes__selector', 'code');
            $silOrganization.addresses.addElement($silPostalAddress);
            If NotEmpty($cmnMailAddress.city) && EMPTY($incorporation.incorporatePlace) Then
               $incorporation.incorporatePlace := $cmnMailAddress.city;
            End
            If NotEmpty($cmnMailAddress.country) && OR($incorporation.incorporateCountry == null, EMPTY($incorporation.incorporateCountry.code)) Then
               $incorporation.incorporateCountry := INT_SILMappingCMNtoSIL_v2.createSILCountry($cmnMailAddress.country);
               SIL_INVOLVEDPARTYcountryAddress $silCountryAddress := INT_SILMappingCMNtoSIL_v2.createSILCountryAddress($cmnMailAddress.country, INT_SILEnumerations.getCountryTypeIncorporation());
               $silOrganization.addresses.addElement($silCountryAddress);
            End
         End
      End
   End
   /****************** BUSINESS ADDRESSES **********************/
   If LIB_Validator.validateNotEmptyIndexed($cmnLegalEntity.contact.businessAddress) Then
      CMN_MailAddress $cmnMailAddress;
      SIL_INVOLVEDPARTYpostalAddress $silPostalAddress;
      ForEach $cmnMailAddress In $cmnLegalEntity.contact.businessAddress Do
         If $cmnMailAddress != null Then
            $silPostalAddress := INT_SILMappingCMNtoSIL_v2.createSILPostalAddress($cmnMailAddress);
            If $cmnLegalEntity.type.isTrustOrFoundation() Then
               $silPostalAddress.type := LIST('administrative', 'CMN_AddressTypes__selector', 'code');
            Else
               $silPostalAddress.type := LIST('business', 'CMN_AddressTypes__selector', 'code');
            End
            $silOrganization.addresses.addElement($silPostalAddress);
         End
      End
   End
   /***************** Mailing ADDRESSES *********************/
   If LIB_Validator.validateNotEmptyIndexed($cmnLegalEntity.contact.mailingAddresses) Then
      CMN_MailAddress $cmnMailAddress;
      SIL_INVOLVEDPARTYpostalAddress $silPostalAddress;
      ForEach $cmnMailAddress In $cmnLegalEntity.contact.mailingAddresses Do
         If $cmnMailAddress != null Then
            $silPostalAddress := INT_SILMappingCMNtoSIL_v2.createSILPostalAddress($cmnMailAddress);
            $silPostalAddress.type := LIST('mailing', 'CMN_AddressTypes__selector', 'code');
            $silOrganization.addresses.addElement($silPostalAddress);
         End
      End
   End
   /***************** Website ADDRESSES *********************/
   If NotEmpty($cmnLegalEntity.internetWebsiteURL) Then
      SIL_INVOLVEDPARTYwebsiteAddress $silWebSiteAddress := CAST(SIL_INVOLVEDPARTYwebsiteAddress, CreateSkeletonDataClass(SIL_INVOLVEDPARTYwebsiteAddress));
      $silWebSiteAddress.link := $cmnLegalEntity.internetWebsiteURL;
      $silOrganization.addresses.addElement($silWebSiteAddress);
   End
   INT_SILMappingCMNtoSILVariationFactory__selector().createSILOrganizationIDV($cmnLegalEntity, $silOrganization);
   Return $silOrganization;
End]]></definition>
        </method>
        <method name="createSILOverallNetWorth" userId="pezzi" uuid="ffffffff-d8a1-eec4-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILOverallNetWorth'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILOverallNetWorth(CMN_Party $cmnParty) : SIL_KYCestimatedNetWorth Begin
   If $cmnParty == null Then
      Return null;
   End
   CMN_OverallNetWorthAndIncome $cmnOverallNetWorthAndIncome := $cmnParty.kycProfile.overallNetWorthAndIncome;
   If $cmnOverallNetWorthAndIncome == null Then
      Return null;
   End
   SIL_KYCestimatedNetWorth $silKYCestimatedNetWorth := CAST(SIL_KYCestimatedNetWorth, CreateSkeletonDataClass(SIL_KYCestimatedNetWorth));
   IF(NotEmpty($cmnOverallNetWorthAndIncome.getSILID()), $silKYCestimatedNetWorth.id := $cmnOverallNetWorthAndIncome.getSILID());
   IF($cmnOverallNetWorthAndIncome.estimatedOverallNetWorth != null, $silKYCestimatedNetWorth.netWealthAmount := TOSTRING($cmnOverallNetWorthAndIncome.estimatedOverallNetWorth * 1000));
   $silKYCestimatedNetWorth.netWealthAmountCurrency := CAST(SIL_STATICcurrency, CreateSkeletonDataClass(SIL_STATICcurrency));
   //Defect 4454
   $silKYCestimatedNetWorth.netWealthAmountCurrency.code := 'USD';
   /* If NotEmpty($cmnOverallNetWorthAndIncome.currency) Then
      $silKYCestimatedNetWorth.netWealthAmountCurrency := CAST(SIL_STATICcurrency, CreateSkeletonDataClass(SIL_STATICcurrency));
      //$silKYCestimatedNetWorth.netWealthAmountCurrency.code := $cmnOverallNetWorthAndIncome.currency;
      //Defect 4454
      $silKYCestimatedNetWorth.netWorthEstimatedAmountCurrency.code := 'USD';
   End*/
   $silKYCestimatedNetWorth.estimatedNetWorthDetails := NewIndexed(SIL_KYCestimatedNetWorthDetails);
   If LIB_Validator.validateNotEmptyIndexed($cmnOverallNetWorthAndIncome.netWorthItems) Then
      For Integer $i := 1 Condition $i <= $cmnOverallNetWorthAndIncome.netWorthItems.size() Step $i := $i + 1 Do
         If $cmnOverallNetWorthAndIncome.netWorthItems[$i] != null Then
            SIL_KYCestimatedNetWorthDetails $silKYCestimatedNetWorthDetails := CAST(SIL_KYCestimatedNetWorthDetails, CreateSkeletonDataClass(SIL_KYCestimatedNetWorthDetails));
            IF($cmnOverallNetWorthAndIncome.netWorthItems[$i].amount != null, $silKYCestimatedNetWorthDetails.amount := $cmnOverallNetWorthAndIncome.netWorthItems[$i].amount);
            String $silType := LIST($cmnOverallNetWorthAndIncome.netWorthItems[$i].name, 'CMN_NetWorthSource', 'sil_Id', 'description');
            If NotEmpty($silType) Then
               $silKYCestimatedNetWorthDetails.type := $silType;
            Else
               $silKYCestimatedNetWorthDetails.type := 'Other';
               IF($cmnOverallNetWorthAndIncome.netWorthItems[$i].name != null, $silKYCestimatedNetWorthDetails.name := $cmnOverallNetWorthAndIncome.netWorthItems[$i].name);
            End
            $silKYCestimatedNetWorth.estimatedNetWorthDetails.addElement($silKYCestimatedNetWorthDetails);
         End
      End
      //************************************** Estimated Annual income  **********************
      If LIB_Validator.validateNotEmptyIndexed($cmnOverallNetWorthAndIncome.estimatedAnnualIncomes) Then
         CMN_EstimatedAnnualIncome $cmnEstimatedAnnualIncome;
         ForEach $cmnEstimatedAnnualIncome In $cmnOverallNetWorthAndIncome.estimatedAnnualIncomes Do
            SIL_KYCestimatedNetWorthDetails $silKYCestimatedNetWorthDetails := CAST(SIL_KYCestimatedNetWorthDetails, CreateSkeletonDataClass(SIL_KYCestimatedNetWorthDetails));
            IF(NotEmpty($cmnEstimatedAnnualIncome.type), $silKYCestimatedNetWorthDetails.type := LIST($cmnEstimatedAnnualIncome.type, 'CMN_EstimatedAnnualIncome__selector', 'sil_Id'));
            IF($cmnEstimatedAnnualIncome.type == 'EAI5' or $cmnEstimatedAnnualIncome.type == 'oth', $silKYCestimatedNetWorthDetails.name := $cmnEstimatedAnnualIncome.otherType);
            IF($cmnEstimatedAnnualIncome.amount != null, $silKYCestimatedNetWorthDetails.amount := $cmnEstimatedAnnualIncome.amount * 1000);
            IF($cmnEstimatedAnnualIncome.comment != null, $silKYCestimatedNetWorthDetails.comment := $cmnEstimatedAnnualIncome.comment);
            $silKYCestimatedNetWorth.estimatedNetWorthDetails.addElement($silKYCestimatedNetWorthDetails);
         End
      End
   End
   Return $silKYCestimatedNetWorth;
End]]></definition>
        </method>
        <method name="createSILOwnedBusiness" userId="pezzi" uuid="ffffffff-da8c-116b-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILOwnedBusiness'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILOwnedBusiness(CMN_Party $cmnParty) : Indexed SIL_SOWbusinessWealthDetails Begin
   Indexed SIL_SOWbusinessWealthDetails $silBusinessWealthDetails := NewIndexed(SIL_SOWbusinessWealthDetails);
   If $cmnParty == null || not ISA($cmnParty, CMN_PhysicalPerson) Then
      Return $silBusinessWealthDetails;
   End
   /********************************** CREATE SIL PROFESSIONAL ACTIVITY ********************************/
   CMN_KycSow $cmnPhysicalPersonKycSow;
   CMN_PhysicalPersonKycProfile $cmnPhysicalPersonKycProfile;
   If $cmnParty.kycProfile != null Then
      $cmnPhysicalPersonKycProfile := CAST(CMN_PhysicalPersonKycProfile, $cmnParty.kycProfile);
      If $cmnPhysicalPersonKycProfile.sourceOfWealth != null Then
         $cmnPhysicalPersonKycSow := $cmnPhysicalPersonKycProfile.sourceOfWealth;
         /************************************** SoW Employement **********************/
         If $cmnPhysicalPersonKycSow != null && LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPersonKycSow.sowBusinessOwner) Then
            For Integer $i := 1 Condition $i <= $cmnPhysicalPersonKycSow.sowBusinessOwner.size() Step $i := $i + 1 Do
               CMN_KycSowBusinessOwner $sowBusinessOwner := $cmnPhysicalPersonKycSow.sowBusinessOwner[$i];
               If $sowBusinessOwner == null Then
                  Continue;
               End
               SIL_SOWbusinessWealthDetails $silBusinessWealthDetail := CAST(SIL_SOWbusinessWealthDetails, CreateSkeletonDataClass(SIL_SOWbusinessWealthDetails));
               IF(NotEmpty($sowBusinessOwner.getSILID()), $silBusinessWealthDetail.id := $sowBusinessOwner.getSILID());
               $silBusinessWealthDetails.addElement($silBusinessWealthDetail);
               If LIB_Validator.validateNotEmptyIndexed($sowBusinessOwner.countriesBusinessExposure) Then
                  CMN_KycBusinessExposure $cmnKycBusinessExposure;
                  ForEach $cmnKycBusinessExposure In $sowBusinessOwner.countriesBusinessExposure Do
                     If $cmnKycBusinessExposure != null && NotEmpty($cmnKycBusinessExposure.businessExposure) Then
                        SIL_SOWsowCountry $silSOWCountry := INT_SILMappingCMNtoSIL_v2.createSILSowCountry($cmnKycBusinessExposure.businessExposure, null, null);
                        $silBusinessWealthDetail.countriesContribution.addElement($silSOWCountry);
                     End
                  End
               End
               SIL_INVOLVEDPARTYindividual $silIndividual := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual));
               SIL_INVOLVEDPARTYbusinessOwner $silBusinessOwner := CAST(SIL_INVOLVEDPARTYbusinessOwner, CreateSkeletonDataClass(SIL_INVOLVEDPARTYbusinessOwner));
               $silIndividual.roles.addElement($silBusinessOwner);
               $silBusinessWealthDetail.party := $silIndividual;
               IF($sowBusinessOwner.customerOwnershipInterestRate != null, $silBusinessOwner.percentageOwnership := $sowBusinessOwner.customerOwnershipInterestRate);
               IF($sowBusinessOwner.isEmployeeOfBusiness != null, $silBusinessOwner.employeeIndicator := $sowBusinessOwner.isEmployeeOfBusiness);
               /*IF($sowBusinessOwner.positionSince != null and $sowBusinessOwner.positionSince > 0, $silBusinessOwner.validFrom := DATEPARSE(TOSTRING($sowBusinessOwner.positionSince), 'y', LIB_ConfigHelper.getDefaultLocale('en'), 'UTC'));
               If $sowBusinessOwner.isCurrentEmployment Then
                  $silBusinessOwner.validTo := null;
               ElseIf $sowBusinessOwner.positionUntil != null and $sowBusinessOwner.positionUntil > 0 Then
                  $silBusinessOwner.validTo := DATEPARSE($sowBusinessOwner.positionUntil.toString(), 'yyyy', LIB_ConfigHelper.getDefaultLocale('en'), 'UTC');
               End*/
               If NotEmpty($sowBusinessOwner.professionalTitle) Then
                  $silBusinessOwner.ownershipRole := INT_SILMatchingTools_v2.matchCMNIdToSILEmploymentRolesId($sowBusinessOwner.professionalTitle);
               End
               If $silBusinessOwner.inContext == null Then
                  $silBusinessOwner.inContext := CAST(SIL_INVOLVEDPARTYorganization, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganization));
               End
               SIL_INVOLVEDPARTYorganization $silOrganization := CAST(SIL_INVOLVEDPARTYorganization, $silBusinessOwner.inContext);
               $silOrganization.names := NewIndexed(SIL_INVOLVEDPARTYorganizationName);
               If $sowBusinessOwner.companyName != null Then
                  SIL_INVOLVEDPARTYorganizationName $silOrganizationName := CAST(SIL_INVOLVEDPARTYorganizationName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganizationName));
                  $silOrganizationName.businessName := $sowBusinessOwner.companyName;
                  $silOrganization.names[1] := $silOrganizationName;
               End
               $silOrganization.addresses := NewIndexed(SIL_INVOLVEDPARTYaddress);
               SIL_INVOLVEDPARTYpostalAddress $silPostalAddress := CAST(SIL_INVOLVEDPARTYpostalAddress, CreateSkeletonDataClass(SIL_INVOLVEDPARTYpostalAddress));
               If $sowBusinessOwner.companyStreet != null Then
                  $silPostalAddress.street := $sowBusinessOwner.companyStreet;
               End
               If $sowBusinessOwner.companyCity != null Then
                  $silPostalAddress.city := $sowBusinessOwner.companyCity;
               End
               If NotEmpty($sowBusinessOwner.companyCountry) Then
                  $silPostalAddress.country := INT_SILMappingCMNtoSIL_v2.createSILCountry($sowBusinessOwner.companyCountry);
               End
               $silOrganization.addresses[1] := $silPostalAddress;
               $silOrganization.documentationItems := NewIndexed(SIL_INVOLVEDPARTYdocumentationItem);
               SIL_INVOLVEDPARTYincorporation $incorporation := CAST(SIL_INVOLVEDPARTYincorporation, CreateSkeletonDataClass(SIL_INVOLVEDPARTYincorporation));
               $silOrganization.documentationItems.addElement($incorporation);
               IF($sowBusinessOwner.businessStartDate != null, $incorporation.incorporateDate := $sowBusinessOwner.businessStartDate);
               If $sowBusinessOwner.isCurrentEmployment Then
                  $incorporation.incorporateClosedDate := null;
               ElseIf $sowBusinessOwner.businessEndDate != null Then
                  $incorporation.incorporateClosedDate := $sowBusinessOwner.businessEndDate;
               End
               IF($sowBusinessOwner.companyDescription != null, $silOrganization.businessDescription := $sowBusinessOwner.companyDescription);
               IF($sowBusinessOwner.employeeNumber != null, $silOrganization.numberOfEmployees := $sowBusinessOwner.employeeNumber);
               IF($sowBusinessOwner.branchesNumber != null, $silOrganization.numberOfBranches := $sowBusinessOwner.branchesNumber);
               IF($sowBusinessOwner.localOfficesNumber != null, $silOrganization.numberOfOffices := $sowBusinessOwner.localOfficesNumber);
               IF($sowBusinessOwner.totalAnnualGrossRevenues != null, $silOrganization.annualTurnOverInUSD := $sowBusinessOwner.totalAnnualGrossRevenues);
               IF($sowBusinessOwner.annualAverageProfit != null, $silOrganization.annualProfitInUSD := $sowBusinessOwner.annualAverageProfit);
               INT_SILMatchingTools_v2.matchCMNMainBusinessToSILOrganization($sowBusinessOwner.mainBusiness, $silOrganization);
               IF($silOrganization.businessNatureDetails == null, $silOrganization.businessNatureDetails := NewIndexed(SIL_INVOLVEDPARTYbusinessNatureDetails));
               IF($silOrganization.businessNatureDetails.size() == 0, $silOrganization.businessNatureDetails[1] := CAST(SIL_INVOLVEDPARTYbusinessNatureDetails, CreateSkeletonDataClass(SIL_INVOLVEDPARTYbusinessNatureDetails)));
               SIL_INVOLVEDPARTYbusinessNatureDetails $silBusinessNatureDetails := $silOrganization.businessNatureDetails[1];
               If $sowBusinessOwner.isGovernmentContract != null Then
                  $silBusinessNatureDetails.isInvolvedInGovernmentContract := $sowBusinessOwner.isGovernmentContract;
                  If LIB_Validator.validateNotEmptyIndexed($sowBusinessOwner.governmentContractCountry) Then
                     $silBusinessNatureDetails.businessCustomers := NewIndexed(SIL_INVOLVEDPARTYbusinessCustomer);
                     ForEach String $country In $sowBusinessOwner.governmentContractCountry Do
                        If NotEmpty($country) Then
                           SIL_INVOLVEDPARTYbusinessCustomer $silBusinessCustomer := CAST(SIL_INVOLVEDPARTYbusinessCustomer, CreateSkeletonDataClass(SIL_INVOLVEDPARTYbusinessCustomer));
                           $silBusinessCustomer.country := INT_SILMappingCMNtoSIL_v2.createSILCountry($country);
                           $silBusinessCustomer.isGovernmental := true;
                           $silBusinessNatureDetails.businessCustomers.addElement($silBusinessCustomer);
                        End
                     End
                  End
               End
               //1610 IF($sowBusinessOwner.isOwnershipGreater25()!=null,$silOrganization.:=$sowBUsinessOwner.isOwnershipGreater25());
               IF($sowBusinessOwner.isPubliclyTradedCompany != null, $silOrganization.listedStockExchangeIndicator := $sowBusinessOwner.isPubliclyTradedCompany);
               SIL_INVOLVEDPARTYorganization $silSubOrganization := CAST(SIL_INVOLVEDPARTYorganization, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganization));
               SIL_INVOLVEDPARTYinvolvedPartyRelationship $silRelation := CAST(SIL_INVOLVEDPARTYinvolvedPartyRelationship, CreateSkeletonDataClass(SIL_INVOLVEDPARTYinvolvedPartyRelationship));
               $silRelation.relationshipType := 'TradingPartner';
               $silBusinessOwner.involvedPartyRelationships.addElement($silRelation);
               $silRelation.party := $silSubOrganization;
               If NotEmpty($sowBusinessOwner.tradingLocation) Then
                  $silSubOrganization.addresses.addElement(INT_SILMappingCMNtoSIL_v2.createSILCountryAddress($sowBusinessOwner.tradingLocation, INT_SILEnumerations.getCountryTypeOperation()));
               End
               If $sowBusinessOwner.tradingPartners != null Then
                  SIL_INVOLVEDPARTYorganizationName $organizationName := CAST(SIL_INVOLVEDPARTYorganizationName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganizationName));
                  $organizationName.fullName := $sowBusinessOwner.tradingPartners;
                  $silSubOrganization.names.addElement($organizationName);
               End
               // IF($sowBusinessOwner.isAllNegativeNewsSearches != null, $silOrganization. := $sowBusinessOwner.isAllNegativeNewsSearches);
               If LIB_Validator.validateNotEmptyIndexed($sowBusinessOwner.evidences) Then
                  CMN_hyperlink $cmnEvidences;
                  ForEach $cmnEvidences In $sowBusinessOwner.evidences Do
                     //1978
                     //1692
                  End
               End
            End
         End
      End
   End
   Return $silBusinessWealthDetails;
End]]></definition>
        </method>
        <method name="createSILPhoneAddress" userId="pezzi" uuid="00000000-29d7-9a00-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILPhoneAddress'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILPhoneAddress(CMN_Phone $cmnPhone) : SIL_INVOLVEDPARTYtelephoneNumber Begin
   SIL_INVOLVEDPARTYtelephoneNumber $silPhone := CAST(SIL_INVOLVEDPARTYtelephoneNumber, CreateSkeletonDataClass(SIL_INVOLVEDPARTYtelephoneNumber));
   If $cmnPhone == null Then
      LIB_Logger.integrationWarn('[INT_SILMapping]: CMN_Phone for SIL_INVOLVEDPARTYtelephoneNumber is null, generating empty SIL Object');
      Return $silPhone;
   End
   IF(not EMPTY($cmnPhone.getSILID()), $silPhone.addressId := $cmnPhone.getSILID());
   IF(not EMPTY($cmnPhone.type), $silPhone.type := LIST($cmnPhone.type, 'CMN_PhoneTypes__selector', 'sil_Id', 'id'));
   IF(not EMPTY($cmnPhone.status), $silPhone.status := $cmnPhone.status);
   If not EMPTY($cmnPhone.country) Then
      $silPhone.country := CAST(SIL_STATICcountry, CreateSkeletonDataClass(SIL_STATICcountry));
      $silPhone.country.code := LIST($cmnPhone.country, 'CMN_Countries__selector', 'sil_Id');
   End
   IF(not EMPTY($cmnPhone.extensionNumber), $silPhone.extension := $cmnPhone.extensionNumber);
   IF(not EMPTY($cmnPhone.prefix), $silPhone.prefix := $cmnPhone.prefix);
   IF(not EMPTY($cmnPhone.number), $silPhone.number := $cmnPhone.number);
   IF(not EMPTY($cmnPhone.internationalNumber), $silPhone.internationalNumber := $cmnPhone.internationalNumber);
   IF(not EMPTY($cmnPhone.extensionNumber), $silPhone.extension := $cmnPhone.extensionNumber);
   IF(not EMPTY($cmnPhone.description), $silPhone.comment := $cmnPhone.description);
   IF($cmnPhone.preferredCallBack != null, $silPhone.preferredCallBackIndicator := $cmnPhone.preferredCallBack);
   IF($cmnPhone.isMain != null, $silPhone.isPrimary := $cmnPhone.isMain);
   Return $silPhone;
End]]></definition>
        </method>
        <method name="createSILPledge" userId="pezzi" uuid="00000000-259e-2493-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILPledge'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILPledge(CMN_BusinessRelationship $businessRelationship) : Indexed SIL_ACCOUNTpledgeAgreement Begin
   Indexed SIL_ACCOUNTpledgeAgreement $pledges := NewIndexed(SIL_ACCOUNTpledgeAgreement);
   If $businessRelationship != null && $businessRelationship.optionalServices != null Then
      CMN_AvailableOptionCategory $availableOptionCategory;
      String $optionID := '';
      $optionID := 'generalPledgeThird';
      /*If $availableOption.id == 'generalDeedPledge' Then
      ElseIf $availableOption.id == 'generalPledgeThird' Then
      ElseIf $availableOption.id == 'generalAgreementTradeOperation' Then
      ElseIf $availableOption.id == 'guaranteeLetter' Thenf
      End*/
      SIL_ACCOUNTpledgeAgreement $silPledge := CAST(SIL_ACCOUNTpledgeAgreement, CreateSkeletonDataClass(SIL_ACCOUNTpledgeAgreement));
      SIL_INVOLVEDPARTYcustomerRole $silRole := CAST(SIL_INVOLVEDPARTYcustomerRole, CreateSkeletonDataClass(SIL_INVOLVEDPARTYcustomerRole));
      $silPledge.borrowers.addElement($silRole);
      $pledges.addElement($silPledge);
      If $businessRelationship.optionalServices.isOptionSelected($optionID) Then
         CMN_OptionalServiceThirdPartyPledge $optionalService := CAST(CMN_OptionalServiceThirdPartyPledge, $businessRelationship.optionalServices.getOptionalService($optionID));
         If NotEmpty($optionalService.firstNames) Then
            SIL_INVOLVEDPARTYindividual $silindividual := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual));
            SIL_INVOLVEDPARTYindividualName $silIndName := CAST(SIL_INVOLVEDPARTYindividualName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividualName));
            $silIndName.firstName := $optionalService.firstNames;
            $silIndName.lastName := $optionalService.surname;
            $silindividual.names.addElement($silIndName);
            $silindividual.id := $optionalService.clientId;
            $silRole.party := $silindividual;
         ElseIf NotEmpty($optionalService.surname) Then
            SIL_INVOLVEDPARTYorganization $silOrg := CAST(SIL_INVOLVEDPARTYorganization, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganization));
            SIL_INVOLVEDPARTYorganizationName $silOrgName := CAST(SIL_INVOLVEDPARTYorganizationName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganizationName));
            $silOrgName.businessName := $optionalService.surname;
            $silOrg.names.addElement($silOrgName);
            $silOrg.id := $optionalService.clientId;
            $silRole.party := $silOrg;
         End
         $silPledge.amount := $optionalService.maxAmount;
         IF(NotEmpty($optionalService.currency), $silPledge.currency := INT_SILMappingCMNtoSIL_v2.createSILCurrency($optionalService.currency));
         $silPledge.reason := $optionalService.reasonOfPledge;
      End
   End
   Return $pledges;
End]]></definition>
        </method>
        <method name="createSILPortfolios" userId="pezzi" uuid="00000000-7aae-ae05-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILPortfolios'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILPortfolios(CMN_BusinessRelationship $cmnBusinessRelationship) : Indexed SIL_ACCOUNTportfolio Begin
   Indexed SIL_ACCOUNTportfolio $silPortfolios := NewIndexed(SIL_ACCOUNTportfolio);
   If LIB_Validator.validateNotEmptyIndexed($cmnBusinessRelationship.portfolios) Then
      CMN_Portfolio $portfolio;
      ForEach $portfolio In $cmnBusinessRelationship.portfolios Do
         SIL_ACCOUNTportfolio $silPortfolio := CAST(SIL_ACCOUNTportfolio, CreateSkeletonDataClass(SIL_ACCOUNTportfolio));
         $silPortfolio.investmentStrategy := CAST(SIL_ACCOUNTportfolioInvestmentStrategyDetails, CreateSkeletonDataClass(SIL_ACCOUNTportfolioInvestmentStrategyDetails));
         IF(NotEmpty($portfolio.mandateCategory), $silPortfolio.mandateType := LIST($portfolio.mandateCategory, 'CMN_MandateCategory__selector', 'sil_Id'));
         IF(NotEmpty($portfolio.mandateManagedBy), $silPortfolio.managedBy := LIST($portfolio.mandateManagedBy, 'CMN_MandateManagedBy__selector', 'sil_Id'));
         IF(NotEmpty($portfolio.mandateType), $silPortfolio.mandateSubType := LIST($portfolio.mandateType, 'CMN_Mandates__selector', 'sil_Id'));
         IF(NotEmpty($portfolio.profile), $silPortfolio.mandateProfileType := LIST($portfolio.profile, 'CMN_MandateType__selector', 'sil_Id'));
         String $cmnDocMandate := '';
         If $portfolio.mandateType == '1' Then
         ElseIf $portfolio.mandateType == '4' Then
            If $portfolio.profile == '1' Then
               $cmnDocMandate := LIST($portfolio.docMandate, 'CMN_W35coreInvestments__selector', 'sil_Id');
            ElseIf $portfolio.profile == '2' Then
               $cmnDocMandate := LIST($portfolio.docMandate, 'CMN_W35specialistInvestments__selector', 'sil_Id');
            End
         End
         IF(NotEmpty($cmnDocMandate), $silPortfolio.mandateProfileSubType := $cmnDocMandate);
         IF(NotEmpty($portfolio.currency), $silPortfolio.defaultCurrency := INT_SILMappingCMNtoSIL_v2.createSILCurrency($portfolio.currency));
         INT_SILMappingCMNtoSILVariationFactory__selector().createSILPortfolios($portfolio, $silPortfolio);
         //IF(NotEmpty($portfolio.hedged_unhedged_flag), $silPortfolio. := $portfolio.hedged_unhedged_flag);
         //IF($portfolio.mandatory != null, $silPortfolio. := $portfolio.docMandate);
         //IF(NotEmpty($portfolio.strategyType), $silPortfolio. := $portfolio.strategyType);
         $silPortfolios.addElement($silPortfolio);
      End
   End
   If $cmnBusinessRelationship.portfolioLoanAndDepositFlag != null Then
      SIL_ACCOUNTportfolio $silPortfolio := CAST(SIL_ACCOUNTportfolio, CreateSkeletonDataClass(SIL_ACCOUNTportfolio));
      $silPortfolio.loanDepositOnlyIndicator := $cmnBusinessRelationship.portfolioLoanAndDepositFlag;
      $silPortfolios.addElement($silPortfolio);
   End
   Return $silPortfolios;
End]]></definition>
        </method>
        <method name="createSILPostalAddress" userId="pezzi" uuid="00000000-39c9-bc8f-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILPostalAddress'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILPostalAddress(CMN_MailAddress $cmnAddress) : SIL_INVOLVEDPARTYpostalAddress Begin
   SIL_INVOLVEDPARTYpostalAddress $silAddress := CAST(SIL_INVOLVEDPARTYpostalAddress, CreateSkeletonDataClass(SIL_INVOLVEDPARTYpostalAddress));
   If $cmnAddress == null Then
      LIB_Logger.integrationWarn('[INT_SILMapping]: CMN_MailAddress is null, generating empty SIL_PostalAddress');
      Return $silAddress;
   End
   IF($cmnAddress.getSILID() != null, $silAddress.addressId := $cmnAddress.getSILID());
   IF($cmnAddress.isMain != null, $silAddress.isPrimary := $cmnAddress.isMain);
   IF($cmnAddress.co != null, $silAddress.co := $cmnAddress.co);
   IF($cmnAddress.street != null, $silAddress.street := $cmnAddress.street);
   IF($cmnAddress.streetNumber != null, $silAddress.streetNumber := $cmnAddress.streetNumber);
   IF($cmnAddress.complementCity != null, $silAddress.state := $cmnAddress.complementCity);
   IF($cmnAddress.poBox != null, $silAddress.poBox := $cmnAddress.poBox);
   IF($cmnAddress.zip != null, $silAddress.zipcode := $cmnAddress.zip);
   IF($cmnAddress.city != null, $silAddress.city := $cmnAddress.city);
   IF($cmnAddress.building != null, $silAddress.building := $cmnAddress.building);
   IF($cmnAddress.district != null, $silAddress.district := $cmnAddress.district);
   IF(NotEmpty($cmnAddress.country), $silAddress.country := INT_SILMappingCMNtoSIL_v2.createSILCountry($cmnAddress.country));
   IF($cmnAddress.validFrom != null, $silAddress.validFrom := $cmnAddress.validFrom);
   IF($cmnAddress.validTo != null, $silAddress.validTo := $cmnAddress.validTo);
   Return $silAddress;
End]]></definition>
        </method>
        <method name="createSILProfessionalActivity" userId="pezzi" uuid="00000000-0d71-dfb0-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILProfessionalActivity'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILProfessionalActivity(CMN_Party $cmnParty) : Indexed SIL_SOWincomeWealthDetails Begin
   Indexed SIL_SOWincomeWealthDetails $silIncomeWealthDetails := NewIndexed(SIL_SOWincomeWealthDetails);
   If $cmnParty == null || not ISA($cmnParty, CMN_PhysicalPerson) Then
      Return $silIncomeWealthDetails;
   End
   /********************************** CREATE SIL PROFESSIONAL ACTIVITY ********************************/
   CMN_KycSow $cmnPhysicalPersonKycSow;
   CMN_PhysicalPersonKycProfile $cmnPhysicalPersonKycProfile;
   If $cmnParty.kycProfile != null Then
      $cmnPhysicalPersonKycProfile := CAST(CMN_PhysicalPerson, $cmnParty).getKYCProfile();
      If $cmnPhysicalPersonKycProfile.sourceOfWealth != null Then
         $cmnPhysicalPersonKycSow := $cmnPhysicalPersonKycProfile.sourceOfWealth;
         /************************************** SoW Employement **********************/
         If $cmnPhysicalPersonKycSow != null && LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPersonKycSow.sowEmployment) Then
            For Integer $i := 1 Condition $i <= $cmnPhysicalPersonKycSow.sowEmployment.size() Step $i := $i + 1 Do
               CMN_KycSowEmployment $sowEmployment := $cmnPhysicalPersonKycSow.sowEmployment[$i];
               If $sowEmployment == null Then
                  Continue;
               End
               //
               SIL_SOWincomeWealthDetails $silIncomeWealthDetail := CAST(SIL_SOWincomeWealthDetails, CreateSkeletonDataClass(SIL_SOWincomeWealthDetails));
               IF(NotEmpty($sowEmployment.getSILID()), $silIncomeWealthDetail.id := $sowEmployment.getSILID());
               IF($sowEmployment.approximateAverage != null, $silIncomeWealthDetail.netWorthEstimatedAmount := $sowEmployment.approximateAverage);
               //Defect 4454
               $silIncomeWealthDetail.netWorthEstimatedAmountCurrency := CAST(SIL_STATICcurrency, CreateSkeletonDataClass(SIL_STATICcurrency));
               $silIncomeWealthDetail.netWorthEstimatedAmountCurrency.code := 'USD';
               If LIB_Validator.validateNotEmptyIndexed($sowEmployment.countriesBusinessExposure) Then
                  CMN_KycBusinessExposure $cmnKycBusinessExposure;
                  ForEach $cmnKycBusinessExposure In $sowEmployment.countriesBusinessExposure Do
                     If $cmnKycBusinessExposure != null && NotEmpty($cmnKycBusinessExposure.businessExposure) Then
                        SIL_SOWsowCountry $silSOWCountry := INT_SILMappingCMNtoSIL_v2.createSILSowCountry($cmnKycBusinessExposure.businessExposure, null, null);
                        $silIncomeWealthDetail.countriesContribution.addElement($silSOWCountry);
                     End
                  End
               End
               SIL_INVOLVEDPARTYindividual $silIndividual := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual));
               $silIncomeWealthDetail.party := $silIndividual;
               SIL_INVOLVEDPARTYemployeeRole $customerEmployment := CAST(SIL_INVOLVEDPARTYemployeeRole, CreateSkeletonDataClass(SIL_INVOLVEDPARTYemployeeRole));
               $silIndividual.roles.addElement($customerEmployment);
               $silIncomeWealthDetails.addElement($silIncomeWealthDetail);
               IF(NotEmpty($sowEmployment.employmentStatus), $customerEmployment.employmentStatus := LIST($sowEmployment.employmentStatus, 'SIL_EmploymentStatus', 'id', 'cmn_id'));
               If NotEmpty($sowEmployment.professionalTitle) Then
                  $customerEmployment.employmentRole := INT_SILMatchingTools_v2.matchCMNIdToSILEmploymentRolesId($sowEmployment.professionalTitle);
               End
               IF(NotEmpty($sowEmployment.position), $customerEmployment.positionTitle := LIST($sowEmployment.position, 'COB_KycEmploymentPositionTitle', 'sil_Id'));
               IF($sowEmployment.positionSince != null, $customerEmployment.validFrom := $sowEmployment.positionSince);
               If $sowEmployment.isCurrentEmployment Then
                  $customerEmployment.validTo := null;
               ElseIf $sowEmployment.positionUntil != null Then
                  $customerEmployment.validTo := $sowEmployment.positionUntil;
               End
               If $sowEmployment.positionSince != null Then
                  Date $since := $sowEmployment.positionSince;
                  Date $until := NOW();
                  If $sowEmployment.positionUntil != null Then
                     $until := $sowEmployment.positionUntil;
                  ElseIf not $sowEmployment.isCurrentEmployment Then
                     $customerEmployment.inPositionNbYears := 0;
                  End
                  Double $diff := TIMEDIFF($since, $until, 'y');
                  $customerEmployment.inPositionNbYears := TOINTEGER($diff);
               Else
                  $customerEmployment.inPositionNbYears := 0;
               End
               SIL_INVOLVEDPARTYorganization $silOrganization := CAST(SIL_INVOLVEDPARTYorganization, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganization));
               $silOrganization.names := NewIndexed(SIL_INVOLVEDPARTYinvolvedPartyName);
               SIL_INVOLVEDPARTYorganizationName $silOrganizationName := CAST(SIL_INVOLVEDPARTYorganizationName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganizationName));
               IF($sowEmployment.employerName != null, $silOrganizationName.businessName := $sowEmployment.employerName);
               $silOrganization.names.addElement($silOrganizationName);
               $silOrganization.addresses := NewIndexed(SIL_INVOLVEDPARTYaddress);
               SIL_INVOLVEDPARTYpostalAddress $silPostalAddress := CAST(SIL_INVOLVEDPARTYpostalAddress, CreateSkeletonDataClass(SIL_INVOLVEDPARTYpostalAddress));
               $silOrganization.addresses.addElement($silPostalAddress);
               If $sowEmployment.employerStreet != null Then
                  $silPostalAddress.street := $sowEmployment.employerStreet;
               End
               If $sowEmployment.employerCity != null Then
                  $silPostalAddress.city := $sowEmployment.employerCity;
               End
               If NotEmpty($sowEmployment.employerCountry) Then
                  $silPostalAddress.country := INT_SILMappingCMNtoSIL_v2.createSILCountry($sowEmployment.employerCountry);
               End
               IF($sowEmployment.employerBusinessDescription != null, $silOrganization.businessDescription := $sowEmployment.employerBusinessDescription);
               IF($sowEmployment.employeeNumber != null, $silOrganization.numberOfEmployees := $sowEmployment.employeeNumber);
               INT_SILMatchingTools_v2.matchCMNMainBusinessToSILOrganization($sowEmployment.mainBusiness, $silOrganization);
               IF($silOrganization.businessNatureDetails == null, $silOrganization.businessNatureDetails := NewIndexed(SIL_INVOLVEDPARTYbusinessNatureDetails));
               IF($silOrganization.businessNatureDetails.size() == 0, $silOrganization.businessNatureDetails[1] := CAST(SIL_INVOLVEDPARTYbusinessNatureDetails, CreateSkeletonDataClass(SIL_INVOLVEDPARTYbusinessNatureDetails)));
               SIL_INVOLVEDPARTYbusinessNatureDetails $silBusinessNatureDetails := $silOrganization.businessNatureDetails[1];
               If $sowEmployment.isGovContractLicense != null Then
                  $silBusinessNatureDetails.isInvolvedInGovernmentContract := $sowEmployment.isGovContractLicense;
               End
               If LIB_Validator.validateNotEmptyIndexed($sowEmployment.revenuesCountries) Then
                  $silBusinessNatureDetails.businessCustomers := NewIndexed(SIL_INVOLVEDPARTYbusinessCustomer);
                  SIL_INVOLVEDPARTYbusinessCustomer $silBusinessCustomer;
                  ForEach String $country In $sowEmployment.revenuesCountries Do
                     If NotEmpty($country) Then
                        $silBusinessCustomer := CAST(SIL_INVOLVEDPARTYbusinessCustomer, CreateSkeletonDataClass(SIL_INVOLVEDPARTYbusinessCustomer));
                        $silBusinessCustomer.isGovernmental := true;
                        $silBusinessCustomer.country := INT_SILMappingCMNtoSIL_v2.createSILCountry($country);
                        $silBusinessNatureDetails.businessCustomers.addElement($silBusinessCustomer);
                     End
                  End
               End
               $customerEmployment.inContext := $silOrganization;
            End
         End
      End
   End
   Return $silIncomeWealthDetails;
End]]></definition>
        </method>
        <method name="createSILRelationships" userId="pezzi" uuid="ffffffff-f2d9-c121-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'connected Party Screen'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILRelationships(CMN_Party $cmnParty, Indexed SIL_INVOLVEDPARTYinvolvedPartyRelationship $silPartyStructure := null) : Indexed SIL_INVOLVEDPARTYinvolvedPartyRelationship Begin
   If $silPartyStructure == null Then
      $silPartyStructure := NewIndexed(SIL_INVOLVEDPARTYinvolvedPartyRelationship);
   End
   If $cmnParty == null Then
      Return $silPartyStructure;
   End
   /******************************************* CONNECTED PARTIES SCREEN ********************************************/
   If LIB_Validator.validateNotEmptyIndexed($cmnParty.kycProfile.connectedParties.connectedParty) Then
      CMN_ConnectedParty $cmnConnectedParty;
      ForEach $cmnConnectedParty In $cmnParty.kycProfile.connectedParties.connectedParty Do
         SIL_INVOLVEDPARTYinvolvedPartyRelationship $silINVOLVEDPARTYinvolvedPartyRelationship := CAST(SIL_INVOLVEDPARTYinvolvedPartyRelationship, CreateSkeletonDataClass(SIL_INVOLVEDPARTYinvolvedPartyRelationship));
         IF(NotEmpty($cmnConnectedParty.getSILID()), $silINVOLVEDPARTYinvolvedPartyRelationship.id := $cmnConnectedParty.getSILID());
         If $cmnConnectedParty != null Then
            If NotEmpty($cmnConnectedParty.firstName) or NotEmpty($cmnConnectedParty.lastName) or $cmnConnectedParty.isIndividual() Then
               $silINVOLVEDPARTYinvolvedPartyRelationship.party := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual));
               $silINVOLVEDPARTYinvolvedPartyRelationship.party.names := NewIndexed(SIL_INVOLVEDPARTYindividualName);
               SIL_INVOLVEDPARTYindividualName $silIndividualName := CAST(SIL_INVOLVEDPARTYindividualName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividualName));
               If $cmnConnectedParty.lastName != null Then
                  $silIndividualName.lastName := $cmnConnectedParty.lastName;
               End
               If $cmnConnectedParty.firstName != null Then
                  $silIndividualName.firstName := $cmnConnectedParty.firstName;
               End
               If $cmnConnectedParty.getFullName() != null Then
                  $silIndividualName.fullName := $cmnConnectedParty.getFullName();
               End
               $silINVOLVEDPARTYinvolvedPartyRelationship.party.names.addElement($silIndividualName);
            ElseIf NotEmpty($cmnConnectedParty.businessName) or $cmnConnectedParty.isOrganization() Then
               $silINVOLVEDPARTYinvolvedPartyRelationship.party := CAST(SIL_INVOLVEDPARTYorganization, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganization));
               $silINVOLVEDPARTYinvolvedPartyRelationship.party.names := NewIndexed(SIL_INVOLVEDPARTYorganizationName);
               SIL_INVOLVEDPARTYorganizationName $silOrganizationName := CAST(SIL_INVOLVEDPARTYorganizationName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganizationName));
               If $cmnConnectedParty.businessName != null Then
                  $silOrganizationName.businessName := $cmnConnectedParty.businessName;
               End
               If $cmnConnectedParty.getFullName() != null Then
                  $silOrganizationName.fullName := $cmnConnectedParty.getFullName();
               End
               $silINVOLVEDPARTYinvolvedPartyRelationship.party.names.addElement($silOrganizationName);
            End
            If $silINVOLVEDPARTYinvolvedPartyRelationship.party != null && $cmnConnectedParty.idCRM != null Then
               $silINVOLVEDPARTYinvolvedPartyRelationship.party.id := $cmnConnectedParty.idCRM;
            Else
               Continue;
            End
            /*String $relationshipSubType := LIST($cmnConnectedParty.typeRelationship, 'SIL_KYCPartyRelationType', 'relationshipSubType', 'cmn_Id');
            If NotEmpty($relationshipSubType) Then
               $silINVOLVEDPARTYinvolvedPartyRelationship.relationshipSubType := $relationshipSubType;
            End
            String $relationshipRole := LIST($cmnConnectedParty.typeRelationship, 'SIL_KYCPartyRelationType', 'relationshipRole', 'cmn_Id');
            If NotEmpty($relationshipRole) Then
               $silINVOLVEDPARTYinvolvedPartyRelationship.relationshipRole := $relationshipRole;
            End*/
            String $relationshipType := LIST($cmnConnectedParty.typeRelationship, 'CMN_KYCPartyRelationType', 'sil_Id', 'id');
            If NotEmpty($relationshipType) Then
               $silINVOLVEDPARTYinvolvedPartyRelationship.relationshipType := $relationshipType;
            End
            $silPartyStructure.addElement($silINVOLVEDPARTYinvolvedPartyRelationship);
         End
      End
   End
   Return $silPartyStructure;
End]]></definition>
        </method>
        <method name="createSILScreeningScreening" userId="pezzi" uuid="ffffffff-da3a-447a-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILScreeningScreening'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILScreeningScreening(CMN_Party $cmnParty, Indexed SIL_INVOLVEDPARTYSCREENINGscreening $silScreeningScreenings := null) : Indexed SIL_INVOLVEDPARTYSCREENINGscreening Begin
   IF(not LIB_Validator.validateNotEmptyIndexed($silScreeningScreenings), $silScreeningScreenings := NewIndexed(SIL_INVOLVEDPARTYSCREENINGscreening));
   If $cmnParty != null Then
      /*SIL_INVOLVEDPARTYSCREENINGdatabaseScreening $silGeneralScreening := CAST(SIL_INVOLVEDPARTYSCREENINGdatabaseScreening, CreateSkeletonDataClass(SIL_INVOLVEDPARTYSCREENINGdatabaseScreening));
      //
      //IF($cmnParty.kycProfile.screening.commentGovernmentInfluence != null, $silGeneralScreening. := $cmnParty.kycProfile.screening.commentGovernmentInfluence);
      //
      $silScreeningScreenings.addElement($silGeneralScreening);
      If $cmnParty.kycProfile.screening.isSubjectToNegativeNews Then
         If LIB_Validator.validateNotEmptyIndexed($cmnParty.kycProfile.screening.connectedPartyNegativeNews) Then
            CMN_ConnectedPartyNegativeNews $cmnConnectedPartyNegativeNews;
            SIL_INVOLVEDPARTYSCREENINGnegativeMediaFinding $silINVOLVEDPARTYSCREENINGnegativeMediaScreening;
            ForEach $cmnConnectedPartyNegativeNews In $cmnParty.kycProfile.screening.connectedPartyNegativeNews Do
               $silINVOLVEDPARTYSCREENINGnegativeMediaScreening := CAST(SIL_INVOLVEDPARTYSCREENINGnegativeMediaFinding, CreateSkeletonDataClass(SIL_INVOLVEDPARTYSCREENINGnegativeMediaFinding));
               $silINVOLVEDPARTYSCREENINGnegativeMediaScreening.name :='GenericScreening';
               IF(NotEmpty($cmnConnectedPartyNegativeNews.getSILID()), $silINVOLVEDPARTYSCREENINGnegativeMediaScreening.id := $cmnConnectedPartyNegativeNews.getSILID());
               //$silINVOLVEDPARTYSCREENINGnegativeMediaScreening.isSubjectToNegativeMedia := true;
               IF($cmnConnectedPartyNegativeNews.eventType != null, $silINVOLVEDPARTYSCREENINGnegativeMediaScreening.type := LIST($cmnConnectedPartyNegativeNews.eventType, 'CMN_ComplianceEventType', 'sil_Id'));
               IF($cmnConnectedPartyNegativeNews.year != null, $silINVOLVEDPARTYSCREENINGnegativeMediaScreening.year := TOSTRING($cmnConnectedPartyNegativeNews.year));
               IF(NotEmpty($cmnConnectedPartyNegativeNews.reason), $silINVOLVEDPARTYSCREENINGnegativeMediaScreening.subType := LIST($cmnConnectedPartyNegativeNews.reason, 'CMN_ComplianceReasons', 'sil_Id'));
               IF($cmnConnectedPartyNegativeNews.comment != null, $silINVOLVEDPARTYSCREENINGnegativeMediaScreening.description := $cmnConnectedPartyNegativeNews.comment);
               $silGeneralScreening.findings.addElement($silINVOLVEDPARTYSCREENINGnegativeMediaScreening);
            End
         End
      End*/
      SIL_INVOLVEDPARTYSCREENINGdatabaseScreening $silScreeningScreening;
      /***** General Information *****/
      $silScreeningScreening := CAST(SIL_INVOLVEDPARTYSCREENINGdatabaseScreening, CreateSkeletonDataClass(SIL_INVOLVEDPARTYSCREENINGdatabaseScreening));
      $silScreeningScreenings.addElement($silScreeningScreening);
      $silScreeningScreening.name := 'GenericScreening';
      IF($cmnParty.kycProfile.screening.hasParentConfirmed != null, $silScreeningScreening.compliantWithHSBCPolicyIndicator := $cmnParty.kycProfile.screening.hasParentConfirmed);
      //IF($cmnParty.kycProfile.screening.hasConfirmed != null, $silScreeningScreening.compliantWithHSBCPolicyIndicator := $cmnParty.kycProfile.screening.hasConfirmed);
      IF($cmnParty.kycProfile.screening.isSubjectToNegativeNews != null, $silScreeningScreening.isSubjectToNegativeMedia := $cmnParty.kycProfile.screening.isSubjectToNegativeNews);
      If $cmnParty.type.isTrustOrFoundation() Then
         $silScreeningScreening.party := CAST(SIL_INVOLVEDPARTYtrust, CreateSkeletonDataClass(SIL_INVOLVEDPARTYtrust));
      ElseIf $cmnParty.type.isLegalEntity() Then
         $silScreeningScreening.party := CAST(SIL_INVOLVEDPARTYorganization, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganization));
      ElseIf $cmnParty.type.isPhysicalPerson() Then
         $silScreeningScreening.party := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual));
      End
      IF($cmnParty.kycProfile.screening.regOIndicator != null, $silScreeningScreening.party.subjectToRegulationOIndicator := $cmnParty.kycProfile.screening.regOIndicator);
      If $cmnParty.kycProfile.screening.regOIndicator Then
         IF($cmnParty.kycProfile.screening.regOComment != null, $silScreeningScreening.party.regulationOComment := $cmnParty.kycProfile.screening.regOComment);
      End
      IF($cmnParty.kycProfile.screening.hasInfluence != null, $silScreeningScreening.party.influenceGovernmentIndicator := $cmnParty.kycProfile.screening.hasInfluence);
      IF($cmnParty.kycProfile.screening.commentGovernmentInfluence != null, $silScreeningScreening.party.influenceGovernmentDescription := $cmnParty.kycProfile.screening.commentGovernmentInfluence);
      If LIB_Validator.validateNotEmptyIndexed($cmnParty.kycProfile.screening.sanctionedCountries) Then
         ForEach String $cmnCountryCode In $cmnParty.kycProfile.screening.sanctionedCountries Do
            SIL_INVOLVEDPARTYcountryAddress $silCountryAddress := CAST(SIL_INVOLVEDPARTYcountryAddress, CreateSkeletonDataClass(SIL_INVOLVEDPARTYcountryAddress));
            $silCountryAddress.type := INT_SILEnumerations.getCountryTypeExposure();
            $silCountryAddress.country := CAST(SIL_STATICcountry, CreateSkeletonDataClass(SIL_STATICcountry));
            $silCountryAddress.country.code := LIST($cmnCountryCode, 'SIL_SanctionedCountries', 'sil_Id');
            $silCountryAddress.country.sanctionedIndicator := true;
            IF(NotEmpty($cmnParty.kycProfile.screening.sanctionedCountriesComment), $silCountryAddress.comment := $cmnParty.kycProfile.screening.sanctionedCountriesComment);
            $silScreeningScreening.party.addresses.addElement($silCountryAddress);
         End
      ElseIf $cmnParty.kycProfile.screening.hasNoneSanctionedCountry Then
         SIL_INVOLVEDPARTYcountryAddress $silCountryAddress := CAST(SIL_INVOLVEDPARTYcountryAddress, CreateSkeletonDataClass(SIL_INVOLVEDPARTYcountryAddress));
         $silCountryAddress.type := INT_SILEnumerations.getCountryTypeExposure();
         $silCountryAddress.country := CAST(SIL_STATICcountry, CreateSkeletonDataClass(SIL_STATICcountry));
         $silCountryAddress.country.code := LIST('none', 'SIL_SanctionedCountries', 'sil_Id');
         $silCountryAddress.country.sanctionedIndicator := true;
         $silScreeningScreening.party.addresses.addElement($silCountryAddress);
      End
      If $cmnParty.negativeNews != null Then
         /************************************* Negative News Screening ********************************************/
         CMN_NegativeNews $cmnNegativeNews := $cmnParty.negativeNews;
         Indexed CMN_NegativeNewsRecord $negativeNews := $cmnNegativeNews.getNegativeNewsRecordSet().negativeNewsRecords;
         /*CMN_NegativeNewsRecordSet $historyRecordSet;
         ForEach $historyRecordSet In $cmnNegativeNews.getNegativeNewsRecordSet().negativeNewsHistory Do
            $negativeNews.addAll($historyRecordSet.getNegativeNewsRecords());
         End*/
         If LIB_Validator.validateNotEmptyIndexed($negativeNews) Then
            CMN_NegativeNewsRecord $cmnNegativeNewsRecord;
            //
            ForEach $cmnNegativeNewsRecord In $negativeNews Do
               If $cmnNegativeNewsRecord != null and NotEmpty(LIST($cmnNegativeNewsRecord.id, 'COB_NegativeNews', 'sil_id', 'id')) and EMPTY($cmnNegativeNewsRecord.getSILID()) Then
                  $silScreeningScreening := CAST(SIL_INVOLVEDPARTYSCREENINGdatabaseScreening, CreateSkeletonDataClass(SIL_INVOLVEDPARTYSCREENINGdatabaseScreening));
                  $silScreeningScreening.name := LIST($cmnNegativeNewsRecord.id, 'COB_NegativeNews', 'sil_id', 'id');
                  IF(NotEmpty($cmnNegativeNewsRecord.selectedQuestion), $silScreeningScreening.status := LIST($cmnNegativeNewsRecord.selectedQuestion, 'CMN_NegativeNewsChoices__selector', 'sil_id', 'id'));
                  If $cmnNegativeNewsRecord.id == 'other' Then
                     IF(NotEmpty($cmnNegativeNewsRecord.title), $silScreeningScreening.description := $cmnNegativeNewsRecord.title);
                  ElseIf $cmnNegativeNewsRecord.id == 'worldcheck' Then
                     IF(NotEmpty($cmnNegativeNewsRecord.worldcheckID), $silScreeningScreening.referenceId := $cmnNegativeNewsRecord.worldcheckID);
                  End
                  If $cmnNegativeNewsRecord.performer != null Then
                     SIL_INVOLVEDPARTYemployeeRole $silScreener := CAST(SIL_INVOLVEDPARTYemployeeRole, CreateSkeletonDataClass(SIL_INVOLVEDPARTYemployeeRole));
                     SIL_INVOLVEDPARTYindividual $individual := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual));
                     SIL_INVOLVEDPARTYindividualName $name := CAST(SIL_INVOLVEDPARTYindividualName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividualName));
                     IF(NotEmpty($cmnNegativeNewsRecord.performer.firstName), $name.firstName := $cmnNegativeNewsRecord.performer.firstName);
                     IF(NotEmpty($cmnNegativeNewsRecord.performer.lastName), $name.lastName := $cmnNegativeNewsRecord.performer.lastName);
                     IF(NotEmpty($cmnNegativeNewsRecord.performer.getFullName()), $name.fullName := $cmnNegativeNewsRecord.performer.getFullName());
                     $individual.names := NewIndexed(SIL_INVOLVEDPARTYinvolvedPartyName);
                     $individual.names.addElement($name);
                     $silScreener.party := $individual;
                     $silScreeningScreening.screener := $silScreener;
                     IF($cmnParty.kycProfile.screening != null, $silScreeningScreening.screener.party.hasComplianceIssueIndicator := $cmnParty.kycProfile.screening.hasLegalOrRegulatoryIssues);
                  End
                  IF($cmnNegativeNewsRecord.date != null, $silScreeningScreening.date := $cmnNegativeNewsRecord.date);
                  IF(NotEmpty($cmnNegativeNewsRecord.comment), $silScreeningScreening.comment := $cmnNegativeNewsRecord.comment);
                  IF(NotEmpty($cmnNegativeNewsRecord.hyperlink), $silScreeningScreening.evidenceLink := $cmnNegativeNewsRecord.hyperlink);
                  $silScreeningScreenings.addElement($silScreeningScreening);
               End
            End
         End
      End
      /************************************* Screening references ********************************************/
      /* If LIB_Validator.validateNotEmptyIndexed($cmnParty.kycProfile.screening.worldCheckKeyword) Then
         CMN_WorldCheckKeyword $cmnWorldCheckKeyword;
         IF($silGeneralScreening == null, $silGeneralScreening := CAST(SIL_INVOLVEDPARTYSCREENINGdatabaseScreening, CreateSkeletonDataClass(SIL_INVOLVEDPARTYSCREENINGdatabaseScreening)));
         IF(not LIB_Validator.validateNotEmptyIndexed($silGeneralScreening.findings), $silGeneralScreening.findings := NewIndexed(SIL_INVOLVEDPARTYSCREENINGfinding));
         ForEach $cmnWorldCheckKeyword In $cmnParty.kycProfile.screening.worldCheckKeyword Do
            SIL_INVOLVEDPARTYSCREENINGnegativeMediaFinding $silINVOLVEDPARTYSCREENINGfinding := CAST(SIL_INVOLVEDPARTYSCREENINGnegativeMediaFinding, CreateSkeletonDataClass(SIL_INVOLVEDPARTYSCREENINGnegativeMediaFinding));
            IF($cmnWorldCheckKeyword.description != null, $silINVOLVEDPARTYSCREENINGfinding.description := $cmnWorldCheckKeyword.description);
            IF($cmnWorldCheckKeyword.keyword != null, $silINVOLVEDPARTYSCREENINGfinding.type := $cmnWorldCheckKeyword.keyword);
         End
      End*/
   End
   Return $silScreeningScreenings;
End]]></definition>
        </method>
        <method name="createSILSearchIndividual" userId="pezzi" uuid="ffffffff-a7f3-b0bb-0000-000000000000">
            <definition><![CDATA[/**
	Return an instance of SIL_SearchIndividual. If nothing is specified, the first 10 results are provided.
*/
StaticFunction createSILSearchIndividual(String $firstName := '*', String $lastName := '*', String $identifier := null, Date $birthDate := null, String $placeOfBirth := null, String $countryOfBirth := null, Integer $maxCount := LIB_ConfigHelper.getMaxCountQueries()) : SIL_TOOLSsearchInvolvedParty Begin
   SIL_TOOLSsearchInvolvedParty $silSearchIndividual := CAST(SIL_TOOLSsearchInvolvedParty, CreateSkeletonDataClass(SIL_TOOLSsearchInvolvedParty));
   //SIL_TOOLSsearchParameter $parameter;
   $silSearchIndividual.firstName := $firstName;
   $silSearchIndividual.lastName := $lastName;
   IF($birthDate != null, $silSearchIndividual.birthDate := $birthDate);
   //$silSearchIndividual.searchType := 'I';
   //$silSearchIndividual.maxCount := $maxCount;
   //$silSearchIndividual.parameters := NewIndexed(SIL_parameter);
   // Mandatory is first and last name
   //$silSearchIndividual.parameters.addElement(INT_SILMappingCMNtoSIL_v2.createSILSearchParamter('LAST_NAME', $lastName));
   //$silSearchIndividual.parameters.addElement(INT_SILMappingCMNtoSIL_v2.createSILSearchParamter('FIRST_NAME', $firstName));
   //IF($birthDate != null, $silSearchIndividual.parameters.addElement(INT_SILMappingCMNtoSIL_v2.createSILSearchParamter('BIRTH_DATE', TOSTRING($birthDate))));
   //IF($placeOfBirth != null, $silSearchIndividual.parameters.addElement(INT_SILMappingCMNtoSIL_v2.createSILSearchParamter('PLACE_OF_BIRTH', $placeOfBirth)));
   //IF($identifier != null, $silSearchIndividual.parameters.addElement(INT_SILMappingCMNtoSIL_v2.createSILSearchParamter('IDENTIFIER', $identifier)));
   Return $silSearchIndividual;
End
/* From Technical Design: 
The SIL Resource takes a SearchInvolvedParty as parameter. This object contains key-value pairs. The following data are provided to the SIL (for Individual):
- Party first name
- Party last name
- Party birth date (optional)
- Place of birth (optional)
- Country of birth (optional)
Request Content example:
{
	"@class" : "com.hsbc.pb.common.model.v2_0.tools.search.SearchInvolvedParty",
	"parameters" : [
		{
			"@class" : "com.hsbc.pb.common.model.v2_0.tools.search.SearchParameter",
			"key" : "FIRST_NAME",
			"value" : "Mickey"
		}, {
			"@class" : "com.hsbc.pb.common.model.v2_0.tools.search.SearchParameter",
			"key" : "LAST_NAME",
			"value" : "Mouse"
		}		
	],
	"maxCount" : 25,
	"searchType" : "I"
}
*/]]></definition>
        </method>
        <method name="createSILSearchParamter" userId="pezzi" uuid="ffffffff-c599-ef16-0000-000000000000">
            <definition><![CDATA[/**
	Create an stripped down instance of a SIL_SearchParameter.
    @param $key is the key of the search parameter 
    @param $value is the value to the corresponding key
    @return SIL_
*/
StaticFunction createSILSearchParamter(String $key, String $value := '*') : SIL_TOOLSsearchParameter Begin
   SIL_TOOLSsearchParameter $silSearchParameter := CAST(SIL_TOOLSsearchParameter, CreateSkeletonDataClass(SIL_TOOLSsearchParameter));
   If EMPTY($key) Then
      LIB_Logger.integrationWarn('[INT_SILMapping]: Missing key for search parameter');
      Return $silSearchParameter;
   End
   $silSearchParameter.key := $key;
   $silSearchParameter.value := $value;
   Return $silSearchParameter;
End]]></definition>
        </method>
        <method name="createSILSOW" userId="cucumazzo" uuid="00000000-591a-b101-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILSOW'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILSOW(CMN_Party $cmnParty) : Indexed SIL_SOWindividualSourceOfWealth Begin
   Indexed SIL_SOWindividualSourceOfWealth $silSourceOfWealth := NewIndexed(SIL_SOWindividualSourceOfWealth);
   If $cmnParty == null and $cmnParty.type.isLegalEntity() Then
      Return null;
   End
   CMN_PhysicalPerson $cmnPhysical := CAST(CMN_PhysicalPerson, $cmnParty);
   CMN_KycSow $cmnPhysicalPersonKycSow := $cmnPhysical.getKYCProfile().sourceOfWealth;
   /************************************** Source Of Wealths **********************/
   SIL_SOWtotalWealth $silGenericSourceOfWealth := CAST(SIL_SOWtotalWealth, CreateSkeletonDataClass(SIL_SOWtotalWealth));
   IF($cmnPhysicalPersonKycSow.description != null, $silGenericSourceOfWealth.description := $cmnPhysicalPersonKycSow.description);
   /************************************** Employee ROLE SOW **********************/
   $silGenericSourceOfWealth.party := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual));
   SIL_INVOLVEDPARTYemployeeRole $employeeRole := CAST(SIL_INVOLVEDPARTYemployeeRole, CreateSkeletonDataClass(SIL_INVOLVEDPARTYemployeeRole));
   $silGenericSourceOfWealth.party.roles.addElement($employeeRole);
   If LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPersonKycSow.customerOccupationStatus) && NotEmpty($cmnPhysicalPersonKycSow.customerOccupationStatus[1]) Then
      $employeeRole.employmentStatus := LIST($cmnPhysicalPersonKycSow.customerOccupationStatus[1], 'SIL_EmploymentStatus', 'id', 'cmn_id');
   End
   IF($cmnPhysicalPersonKycSow.educationalBackground != null, $silGenericSourceOfWealth.party.educationalBackground := $cmnPhysicalPersonKycSow.educationalBackground);
   If LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPersonKycSow.sowCountries) Then
      CMN_KycSowCountries $cmnKycSowCountries;
      SIL_INVOLVEDPARTYcountryAddress $silCountryAddress;
      ForEach $cmnKycSowCountries In $cmnPhysicalPersonKycSow.sowCountries Do
         $silCountryAddress := INT_SILMappingCMNtoSIL_v2.createSILCountryAddress($cmnKycSowCountries.country, INT_SILEnumerations.getCountryTypeSourceOfWealth());
         $silCountryAddress.comment := $cmnKycSowCountries.comment;
         //$silCountryAddress.percentage := $cmnKycSowCountries.rate;
         $silGenericSourceOfWealth.party.addresses.addElement($silCountryAddress);
      End
   End
   $silSourceOfWealth.addElement($silGenericSourceOfWealth);
   /************************************** SoW Employement **********************/
   If LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPersonKycSow.sowEmployment) Then
      Indexed SIL_SOWincomeWealthDetails $silIncomeWealthDetailss := INT_SILMappingCMNtoSIL_v2.createSILProfessionalActivity($cmnParty);
      $silSourceOfWealth.addAll($silIncomeWealthDetailss);
   End
   /************************************** SoW Owned Business **********************/
   If LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPersonKycSow.sowBusinessOwner) Then
      Indexed SIL_SOWbusinessWealthDetails $silBusinessWealthDetails := INT_SILMappingCMNtoSIL_v2.createSILOwnedBusiness($cmnParty);
      $silSourceOfWealth.addAll($silBusinessWealthDetails);
   End
   /************************************** SoW Donation **********************/
   If LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPersonKycSow.sowInheritanceDonation) Then
      CMN_KycSowInheritanceDonation $cmnkycSowInheritanceDonation;
      ForEach $cmnkycSowInheritanceDonation In $cmnPhysicalPersonKycSow.sowInheritanceDonation Do
         If $cmnkycSowInheritanceDonation == null Then
            Continue;
         End
         SIL_SOWinheritanceWealthDetails $silInheritanceWealthDetails := CAST(SIL_SOWinheritanceWealthDetails, CreateSkeletonDataClass(SIL_SOWinheritanceWealthDetails));
         $silInheritanceWealthDetails.contributors := NewIndexed(SIL_SOWsowContributor);
         SIL_SOWsowContributor $silSOWContributor := CAST(SIL_SOWsowContributor, CreateSkeletonDataClass(SIL_SOWsowContributor));
         $silSOWContributor.contributor := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual));
         $silSOWContributor.contributor.names := NewIndexed(SIL_INVOLVEDPARTYinvolvedPartyName);
         SIL_INVOLVEDPARTYindividualName $silContributorIndividualName := CAST(SIL_INVOLVEDPARTYindividualName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividualName));
         If $cmnkycSowInheritanceDonation.lastName != null Then
            $silContributorIndividualName.lastName := $cmnkycSowInheritanceDonation.lastName;
         End
         If $cmnkycSowInheritanceDonation.firstName != null Then
            $silContributorIndividualName.firstName := $cmnkycSowInheritanceDonation.firstName;
         End
         $silSOWContributor.contributor.names.addElement($silContributorIndividualName);
         $silInheritanceWealthDetails.contributors.addElement($silSOWContributor);
         IF($cmnkycSowInheritanceDonation.relationshipType != null, $silInheritanceWealthDetails.relationshipWithDonator := $cmnkycSowInheritanceDonation.relationshipType);
         IF($cmnkycSowInheritanceDonation.receivedDate != null, $silInheritanceWealthDetails.dateOfInheritance := $cmnkycSowInheritanceDonation.receivedDate);
         IF($cmnkycSowInheritanceDonation.totalValue != null, $silInheritanceWealthDetails.netWorthEstimatedAmount := $cmnkycSowInheritanceDonation.totalValue);
         IF($cmnkycSowInheritanceDonation.assetType != null, $silInheritanceWealthDetails.typeOfAssetDonated := $cmnkycSowInheritanceDonation.assetType);
         IF($cmnkycSowInheritanceDonation.originalWealthDescription != null, $silInheritanceWealthDetails.originalWealthDescription := $cmnkycSowInheritanceDonation.originalWealthDescription);
         If LIB_Validator.validateNotEmptyIndexed($cmnkycSowInheritanceDonation.countriesBusinessExposure) Then
            CMN_KycBusinessExposure $cmnKycBusinessExposure;
            ForEach $cmnKycBusinessExposure In $cmnkycSowInheritanceDonation.countriesBusinessExposure Do
               If $cmnKycBusinessExposure != null Then
                  SIL_SOWsowCountry $silSowCountry := INT_SILMappingCMNtoSIL_v2.createSILSowCountry($cmnKycBusinessExposure.businessExposure, null, $cmnKycBusinessExposure.comments);
                  $silInheritanceWealthDetails.countriesContribution.addElement($silSowCountry);
               End
            End
         End
         ForEach CMN_hyperlink $cmnLink In $cmnkycSowInheritanceDonation.evidences Do
            SIL_CMSdocument $silDocument := INT_SILMappingCMNtoSIL_v2.createSILDocument($cmnLink.hyperlink, $cmnLink.description);
            $silInheritanceWealthDetails.verificationDocuments.addElement($silDocument);
         End
         $silSourceOfWealth.addElement($silInheritanceWealthDetails);
      End
   End
   /************************************** SoW Family **********************/
   If LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPersonKycSow.sowFamilyRelationsRoyalty) Then
      CMN_KycSowFamilyRelationsRoyalty $cmnSowFamilyRelationsRoyalty;
      ForEach $cmnSowFamilyRelationsRoyalty In $cmnPhysicalPersonKycSow.sowFamilyRelationsRoyalty Do
         If $cmnSowFamilyRelationsRoyalty == null Then
            Continue;
         End
         SIL_SOWfamilyWealthDetails $silFamilyWealthDetails := CAST(SIL_SOWfamilyWealthDetails, CreateSkeletonDataClass(SIL_SOWfamilyWealthDetails));
         IF($cmnSowFamilyRelationsRoyalty.estimatedValue != null, $silFamilyWealthDetails.netWorthEstimatedAmount := $cmnSowFamilyRelationsRoyalty.estimatedValue);
         IF($cmnSowFamilyRelationsRoyalty.originalWealthDescription != null, $silFamilyWealthDetails.originalWealthDescription := $cmnSowFamilyRelationsRoyalty.originalWealthDescription);
         IF($cmnSowFamilyRelationsRoyalty.originAndProvenanceSow != null, $silFamilyWealthDetails.originAndProvenance := $cmnSowFamilyRelationsRoyalty.originAndProvenanceSow);
         If LIB_Validator.validateNotEmptyIndexed($cmnSowFamilyRelationsRoyalty.countriesBusinessExposure) Then
            CMN_KycBusinessExposure $cmnKycBusinessExposure;
            ForEach $cmnKycBusinessExposure In $cmnSowFamilyRelationsRoyalty.countriesBusinessExposure Do
               If $cmnKycBusinessExposure != null Then
                  SIL_SOWsowCountry $silSowCountry := INT_SILMappingCMNtoSIL_v2.createSILSowCountry($cmnKycBusinessExposure.businessExposure, null, $cmnKycBusinessExposure.comments);
                  $silFamilyWealthDetails.countriesContribution.addElement($silSowCountry);
               End
            End
         End
         ForEach CMN_hyperlink $cmnLink In $cmnSowFamilyRelationsRoyalty.evidences Do
            SIL_CMSdocument $silDocument := INT_SILMappingCMNtoSIL_v2.createSILDocument($cmnLink.hyperlink, $cmnLink.description);
            $silFamilyWealthDetails.verificationDocuments.addElement($silDocument);
         End
         $silSourceOfWealth.addElement($silFamilyWealthDetails);
      End
   End
   /************************************** SoW Other **********************/
   If LIB_Validator.validateNotEmptyIndexed($cmnPhysicalPersonKycSow.sowOthers) Then
      CMN_KycSowOthers $cmnKycSowOthers;
      ForEach $cmnKycSowOthers In $cmnPhysicalPersonKycSow.sowOthers Do
         If $cmnKycSowOthers == null Then
            Continue;
         End
         SIL_SOWotherWealthDetails $silOtherWealthDetails := CAST(SIL_SOWotherWealthDetails, CreateSkeletonDataClass(SIL_SOWotherWealthDetails));
         IF($cmnKycSowOthers.dateReceived != null, $silOtherWealthDetails.dateReceived := $cmnKycSowOthers.dateReceived);
         IF($cmnKycSowOthers.estimatedValue != null, $silOtherWealthDetails.netWorthEstimatedAmount := $cmnKycSowOthers.estimatedValue);
         IF($cmnKycSowOthers.originalWealthDescription != null, $silOtherWealthDetails.originalWealthDescription := $cmnKycSowOthers.originalWealthDescription);
         IF($cmnKycSowOthers.originAndProvenanceSow != null, $silOtherWealthDetails.originAndProvenance := $cmnKycSowOthers.originAndProvenanceSow);
         If LIB_Validator.validateNotEmptyIndexed($cmnKycSowOthers.countriesBusinessExposure) Then
            CMN_KycBusinessExposure $cmnKycBusinessExposure;
            ForEach $cmnKycBusinessExposure In $cmnKycSowOthers.countriesBusinessExposure Do
               If $cmnKycBusinessExposure != null Then
                  SIL_SOWsowCountry $silSowCountry := INT_SILMappingCMNtoSIL_v2.createSILSowCountry($cmnKycBusinessExposure.businessExposure, null, $cmnKycBusinessExposure.comments);
                  $silOtherWealthDetails.countriesContribution.addElement($silSowCountry);
               End
            End
         End
         ForEach CMN_hyperlink $cmnLink In $cmnKycSowOthers.evidences Do
            SIL_CMSdocument $silDocument := INT_SILMappingCMNtoSIL_v2.createSILDocument($cmnLink.hyperlink, $cmnLink.description);
            $silOtherWealthDetails.verificationDocuments.addElement($silDocument);
         End
         $silSourceOfWealth.addElement($silOtherWealthDetails);
      End
   End
   Return $silSourceOfWealth;
End]]></definition>
        </method>
        <method name="createSILSowCountry" userId="pezzi" uuid="00000000-4e90-c755-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILSowCountry'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILSowCountry(String $countryCode, Double $percent, String $comment) : SIL_SOWsowCountry Begin
   SIL_SOWsowCountry $silSowCountry := CAST(SIL_SOWsowCountry, CreateSkeletonDataClass(SIL_SOWsowCountry));
   IF(NotEmpty($countryCode), $silSowCountry.country := INT_SILMappingCMNtoSIL_v2.createSILCountry($countryCode));
   IF($comment != null, $silSowCountry.comment := $comment);
   IF($percent != null, $silSowCountry.contributionPercent := $percent);
   Return $silSowCountry;
End]]></definition>
        </method>
        <method name="createSILSpecialCategoryCustomer" userId="pezzi" uuid="00000000-43a0-fe3b-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILCustomerRoleClassifications'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILSpecialCategoryCustomer(CMN_Party $cmnParty) : SIL_CUSTOMERCLASSIFICATIONspecialCategoryCustomer Begin
   CMN_PEPSCCDetails $pepDetails := $cmnParty.kycProfile.pepSCCDetails;
   SIL_CUSTOMERCLASSIFICATIONspecialCategoryCustomer $specialCategoryCustomer;
   /********************************** PEP SCCDetails **********************************/
   If $pepDetails != null Then
      SIL_CUSTOMERCLASSIFICATIONpepCustomer $pepCustomer;
      If $pepDetails.pepTypeSCCConnectedParty != null && $pepDetails.pepTypeSCCConnectedParty.contains('SCC01') Then
         $specialCategoryCustomer := CAST(SIL_CUSTOMERCLASSIFICATIONpepCustomer, CreateSkeletonDataClass(SIL_CUSTOMERCLASSIFICATIONpepCustomer));
         $pepCustomer := CAST(SIL_CUSTOMERCLASSIFICATIONpepCustomer, $specialCategoryCustomer);
      Else
         $specialCategoryCustomer := CAST(SIL_CUSTOMERCLASSIFICATIONspecialCategoryCustomer, CreateSkeletonDataClass(SIL_CUSTOMERCLASSIFICATIONspecialCategoryCustomer));
      End
      /************* GENERAL SCC *************/
      IF(NotEmpty($pepDetails.getSILID()), $specialCategoryCustomer.id := $pepDetails.getSILID());
      IF($pepDetails.isPartyScc != null, $specialCategoryCustomer.sccIndicator := $pepDetails.isPartyScc);
      IF($pepDetails.basicReasonForSCCDesignation != null, $specialCategoryCustomer.sccDescription := $pepDetails.basicReasonForSCCDesignation);
      IF(NotEmpty($pepDetails.finalPEPCategory), $specialCategoryCustomer.finalPEPCategory := LIST($pepDetails.finalPEPCategory, 'CMN_KYCPEPCategory', 'sil_id'));
      If LIB_Validator.validateNotEmptyIndexed($pepDetails.automaticDetectedSCCReasons) Then
         $specialCategoryCustomer.autoSCCReasons := NewIndexed(SIL_CUSTOMERCLASSIFICATIONsccCategory);
         SIL_CUSTOMERCLASSIFICATIONsccCategory $sccCategory;
         ForEach String $automatedDetectedSCCReason In UNIQUE($pepDetails.automaticDetectedSCCReasons) Do
            $sccCategory := CAST(SIL_CUSTOMERCLASSIFICATIONsccCategory, CreateSkeletonDataClass(SIL_CUSTOMERCLASSIFICATIONsccCategory));
            $sccCategory.type := LIST($automatedDetectedSCCReason, 'CMN_KYCSccConnectedParty', 'SIL_Id');
            $specialCategoryCustomer.autoSCCReasons.addElement($sccCategory);
         End
      End
      $specialCategoryCustomer.sccOverrides := NewIndexed(SIL_CUSTOMERCLASSIFICATIONsccOverride);
      $specialCategoryCustomer.sccOverrides[1] := CAST(SIL_CUSTOMERCLASSIFICATIONsccOverride, CreateSkeletonDataClass(SIL_CUSTOMERCLASSIFICATIONsccOverride));
      If $cmnParty.kycProfile.pepSCCDetails.fccSccOverride Then
         IF($cmnParty.kycProfile.pepSCCDetails.complianceOverrideSCCStatus != null, $specialCategoryCustomer.sccOverrides[1].sccIndicator := $cmnParty.kycProfile.pepSCCDetails.complianceOverrideSCCStatus);
         IF(NotEmpty($cmnParty.kycProfile.pepSCCDetails.fccSccOverrideReason), $specialCategoryCustomer.sccOverrides[1].overrideReason := LIST($cmnParty.kycProfile.pepSCCDetails.fccSccOverrideReason, 'CMN_KYCSCCOverrideReasons', 'sil_id', 'id'));
         IF($cmnParty.kycProfile.pepSCCDetails.sccOverrideDescription != null, $specialCategoryCustomer.sccOverrides[1].overrideDescription := $cmnParty.kycProfile.pepSCCDetails.sccOverrideDescription);
         $specialCategoryCustomer.sccOverrides[1].overrideIndicator := true;
      Else
         $specialCategoryCustomer.sccOverrides[1].overrideIndicator := false;
      End
      SIL_STATICcountry $silCountry;
      If SIZE($pepDetails.pepTypeSCCConnectedParty) > 0 Then
         If $pepDetails.pepTypeSCCConnectedParty.contains('SCC01') Then
            $pepCustomer.pepCustomerInformation := CAST(SIL_CUSTOMERCLASSIFICATIONpepInformation, CreateSkeletonDataClass(SIL_CUSTOMERCLASSIFICATIONpepInformation));
            IF($pepDetails.pepReason != null, $pepCustomer.pepCustomerInformation.pepReason := LIST($pepDetails.pepReason, 'CMN_KYCAssociatedPepReason', 'sil_id'));
            IF($pepDetails.pepDescriptionHeld != null, $pepCustomer.pepCustomerInformation.pepDescription := $pepDetails.pepDescriptionHeld);
            IF($pepDetails.startAppointedPEPDate != null, $pepCustomer.pepCustomerInformation.startDate := $pepDetails.startAppointedPEPDate);
            IF($pepDetails.endAppointedPEPDate != null, $pepCustomer.pepCustomerInformation.endDate := $pepDetails.endAppointedPEPDate);
            If NotEmpty($pepDetails.countryPoliticalExposure) Then
               $silCountry := INT_SILMappingCMNtoSIL_v2.createSILCountry($pepDetails.countryPoliticalExposure);
               If $silCountry != null and $pepDetails.isAppHighRiskjurisdiction != null Then
                  $silCountry.highRiskJuridictionIndicator := $pepDetails.isAppHighRiskjurisdiction;
               End
               IF(NotEmpty($pepDetails.countryPoliticalExposure), $pepCustomer.pepCustomerInformation.relatedCountry := $silCountry);
            End
         End
         If $pepDetails.pepTypeSCCConnectedParty.contains('SCC02') Then
            $specialCategoryCustomer.relatedParties := NewIndexed(SIL_CUSTOMERCLASSIFICATIONpepRelatedParty);
            SIL_CUSTOMERCLASSIFICATIONpepRelatedParty $pepRelatedParty := CAST(SIL_CUSTOMERCLASSIFICATIONpepRelatedParty, CreateSkeletonDataClass(SIL_CUSTOMERCLASSIFICATIONpepRelatedParty));
            $specialCategoryCustomer.relatedParties.addElement($pepRelatedParty);
            $pepRelatedParty.pepRelatedPartyInformation := NewIndexed(SIL_CUSTOMERCLASSIFICATIONpepInformation);
            SIL_CUSTOMERCLASSIFICATIONpepInformation $pepRelatedPartyInformation := CAST(SIL_CUSTOMERCLASSIFICATIONpepInformation, CreateSkeletonDataClass(SIL_CUSTOMERCLASSIFICATIONpepInformation));
            $pepRelatedParty.pepRelatedPartyInformation.addElement($pepRelatedPartyInformation);
            IF($pepDetails.associatedPEPReason != null, $pepRelatedPartyInformation.pepReason := LIST($pepDetails.associatedPEPReason, 'CMN_KYCAssociatedPepReason', 'sil_id'));
            IF($pepDetails.associatedPEPDescription != null, $pepRelatedPartyInformation.pepDescription := $pepDetails.associatedPEPDescription);
            IF($pepDetails.associatedStartPEPDate != null, $pepRelatedPartyInformation.startDate := $pepDetails.associatedStartPEPDate);
            IF($pepDetails.associatedEndPEPDate != null, $pepRelatedPartyInformation.endDate := $pepDetails.associatedEndPEPDate);
            IF($pepDetails.hasAssociatedPepControl != null, $pepRelatedParty.hasEffectiveControlOverCompanyIndicator := $pepDetails.hasAssociatedPepControl);
            IF($pepDetails.hasAssociatedPepConflicts != null, $pepRelatedParty.hasEthicalConflictWithCustomerIndicator := $pepDetails.hasAssociatedPepConflicts);
            IF($pepDetails.associatedPepPositionTimeHeld != null, $pepRelatedParty.notInLastPEPPositionSince := $pepDetails.associatedPepPositionTimeHeld);
            IF($pepDetails.associatedPepCustomerRelation != null, $pepRelatedParty.ethicalConflictWithCustomerDescription := $pepDetails.associatedPepCustomerRelation);
            If NotEmpty($pepDetails.associatedMainCountryRelate) Then
               $silCountry := INT_SILMappingCMNtoSIL_v2.createSILCountry($pepDetails.associatedMainCountryRelate);
               If $silCountry != null and $pepDetails.isAssHighRiskjurisdiction != null Then
                  $silCountry.highRiskJuridictionIndicator := $pepDetails.isAssHighRiskjurisdiction;
               End
               IF(NotEmpty($pepDetails.associatedMainCountryRelate), $pepRelatedPartyInformation.relatedCountry := $silCountry);
            End
            If NotEmpty($pepDetails.associatedPEPPosition) && $cmnParty.type.isLegalEntity() Then
               $pepRelatedParty.involvedParty := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual));
               SIL_INVOLVEDPARTYemployeeRole $silEmployeeRole := CAST(SIL_INVOLVEDPARTYemployeeRole, CreateSkeletonDataClass(SIL_INVOLVEDPARTYemployeeRole));
               $pepRelatedParty.involvedParty.roles.addElement($silEmployeeRole);
               SIL_INVOLVEDPARTYinvolvedPartyRelationship $silRelation := CAST(SIL_INVOLVEDPARTYinvolvedPartyRelationship, CreateSkeletonDataClass(SIL_INVOLVEDPARTYinvolvedPartyRelationship));
               $pepRelatedParty.involvedParty.roles[1].involvedPartyRelationships.addElement($silRelation);
               $silRelation.relationshipRole := LIST($pepDetails.associatedPEPPosition, 'CMN_AssociatedPepRoles', 'sil_Id');
               IF($pepDetails.relationEntityDescription != null, $silRelation.details := $pepDetails.relationEntityDescription);
            ElseIf NotEmpty($pepDetails.relationshipPEPToCustomer) && $cmnParty.type.isPhysicalPerson() Then
               $pepRelatedParty.involvedParty := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual));
               SIL_INVOLVEDPARTYemployeeRole $silEmployeeRole := CAST(SIL_INVOLVEDPARTYemployeeRole, CreateSkeletonDataClass(SIL_INVOLVEDPARTYemployeeRole));
               $pepRelatedParty.involvedParty.roles.addElement($silEmployeeRole);
               SIL_INVOLVEDPARTYinvolvedPartyRelationship $silRelation := CAST(SIL_INVOLVEDPARTYinvolvedPartyRelationship, CreateSkeletonDataClass(SIL_INVOLVEDPARTYinvolvedPartyRelationship));
               $pepRelatedParty.involvedParty.roles[1].involvedPartyRelationships.addElement($silRelation);
               $silRelation.relationshipType := LIST($pepDetails.relationshipPEPToCustomer, 'CMN_KYCPEPRelationship', 'sil_Id');
               If $pepDetails.relationshipPEPToCustomer == 'other' Then
                  $silRelation.relationshipSubType := $pepDetails.relationshipPEPToCustomerOther;
               End
               IF($pepDetails.relationshipDescription != null, $silRelation.details := $pepDetails.relationshipDescription);
            End
            IF($pepDetails.isAssociatedExistBankPartner != null, $pepRelatedParty.isAnExistingCustomer := $pepDetails.isAssociatedExistBankPartner);
            If NotEmpty($pepDetails.associatedPEPID) Then
               IF($pepRelatedParty.involvedParty == null, $pepRelatedParty.involvedParty := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual)));
               $pepRelatedParty.involvedParty.id := $pepDetails.associatedPEPID;
            End
            SIL_INVOLVEDPARTYindividualName $silIndividualName := null;
            If $pepDetails.associatedPEPName != null Then
               IF($pepRelatedParty.involvedParty == null, $pepRelatedParty.involvedParty := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual)));
               IF(LIB_Validator.validateNotEmptyIndexed($pepRelatedParty.involvedParty.names), $pepRelatedParty.involvedParty.names := NewIndexed(SIL_INVOLVEDPARTYinvolvedPartyName));
               IF($silIndividualName == null, $silIndividualName := CAST(SIL_INVOLVEDPARTYindividualName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividualName)));
               $silIndividualName.firstName := $pepDetails.associatedPEPName;
               $silIndividualName.fullName := $pepDetails.associatedPEPName;
            End
            If $pepDetails.associatedPEPLastName != null Then
               IF($pepRelatedParty.involvedParty == null, $pepRelatedParty.involvedParty := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual)));
               IF(LIB_Validator.validateNotEmptyIndexed($pepRelatedParty.involvedParty.names), $pepRelatedParty.involvedParty.names := NewIndexed(SIL_INVOLVEDPARTYinvolvedPartyName));
               If $silIndividualName == null Then
                  $silIndividualName := CAST(SIL_INVOLVEDPARTYindividualName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividualName));
                  $silIndividualName.fullName := $pepDetails.associatedPEPLastName;
               Else
                  $silIndividualName.fullName := JOIN($pepDetails.associatedPEPName, ' ', $pepDetails.associatedPEPLastName);
               End
               $silIndividualName.lastName := $pepDetails.associatedPEPLastName;
            End
            If $silIndividualName != null Then
               $pepRelatedParty.involvedParty.names.addElement($silIndividualName);
            End
            If NotEmpty($pepDetails.associatedPEPNationality) Then
               IF($pepRelatedParty.involvedParty == null, $pepRelatedParty.involvedParty := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual)));
               IF(LIB_Validator.validateNotEmptyIndexed($pepRelatedParty.involvedParty.nationalities), $pepRelatedParty.involvedParty.nationalities := NewIndexed(SIL_STATICcountry));
               $silCountry := INT_SILMappingCMNtoSIL_v2.createSILCountry($pepDetails.associatedPEPNationality);
               $pepRelatedParty.involvedParty.nationalities.addElement($silCountry);
            End
         Else
            $specialCategoryCustomer.relatedParties := null;
         End
      End
      Indexed String $cmnSCCReasons := UNION($pepDetails.typeSCCConnectedParty, $pepDetails.pepTypeSCCConnectedParty);
      If LIB_Validator.validateNotEmptyIndexed($cmnSCCReasons) Then
         $specialCategoryCustomer.manualSCCReasons := NewIndexed(SIL_CUSTOMERCLASSIFICATIONsccCategory);
         SIL_CUSTOMERCLASSIFICATIONsccCategory $sccCategory;
         ForEach String $sccType In $cmnSCCReasons Do
            $sccCategory := CAST(SIL_CUSTOMERCLASSIFICATIONsccCategory, CreateSkeletonDataClass(SIL_CUSTOMERCLASSIFICATIONsccCategory));
            $sccCategory.type := LIST($sccType, 'CMN_KYCSccConnectedParty', 'SIL_Id');
            $specialCategoryCustomer.manualSCCReasons.addElement($sccCategory);
         End
      End
   End
   Return $specialCategoryCustomer;
End]]></definition>
        </method>
        <method name="createSILTaxIdentificationNumberFromCMNCRSObligation" userId="pezzi" uuid="ffffffff-bd57-3790-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILTaxIdentificationNumberFromCMNCRSObligation'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILTaxIdentificationNumberFromCMNCRSObligation(CMN_CRSObligation $cmnCRSObligation) : SIL_INVOLVEDPARTYtaxIdentificationNumber Begin
   If $cmnCRSObligation == null Then
      Return null;
   End
   SIL_INVOLVEDPARTYtaxIdentificationNumber $silTaxIdentificationNumber;
   If NotEmpty($cmnCRSObligation.getGIIN()) Then
      $silTaxIdentificationNumber := CAST(SIL_INVOLVEDPARTYtaxIdentificationNumber, CreateSkeletonDataClass(SIL_INVOLVEDPARTYtaxIdentificationNumber));
      $silTaxIdentificationNumber.type := 'GIN';
      $silTaxIdentificationNumber.identificationNumber := $cmnCRSObligation.getGIIN();
   End
   Return $silTaxIdentificationNumber;
End]]></definition>
        </method>
        <method name="createSILTaxIdentificationNumberFromCMNResidencyForTaxPurposes" userId="pezzi" uuid="ffffffff-b872-5c9f-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILTaxIdentificationNumber'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILTaxIdentificationNumberFromCMNResidencyForTaxPurposes(CMN_ResidencyForTaxPurposes $cmnResidencyForTaxPurposes, String $type) : SIL_INVOLVEDPARTYtaxIdentificationNumber Begin
   If $cmnResidencyForTaxPurposes == null Then
      Return null;
   End
   SIL_INVOLVEDPARTYtaxIdentificationNumber $silTaxIdentificationNumber := CAST(SIL_INVOLVEDPARTYtaxIdentificationNumber, CreateSkeletonDataClass(SIL_INVOLVEDPARTYtaxIdentificationNumber));
   $silTaxIdentificationNumber.type := $type;
   If NotEmpty($cmnResidencyForTaxPurposes.country) Then
      $silTaxIdentificationNumber.country := INT_SILMappingCMNtoSIL_v2.createSILCountry($cmnResidencyForTaxPurposes.country);
   End
   IF(NotEmpty($cmnResidencyForTaxPurposes.type), $silTaxIdentificationNumber.TaxResidentOption := LIST($cmnResidencyForTaxPurposes.type, 'COB_ResidencyForTaxPurpose', 'sil_Id'));
   If EQUAL($cmnResidencyForTaxPurposes.type, 'tin') and $cmnResidencyForTaxPurposes.tin != null Then
      $silTaxIdentificationNumber.identificationNumber := $cmnResidencyForTaxPurposes.tin;
   End
   If EQUAL($cmnResidencyForTaxPurposes.type, 'tin') Then
      $silTaxIdentificationNumber.identificationNumber := $cmnResidencyForTaxPurposes.tin;
   ElseIf EQUAL($cmnResidencyForTaxPurposes.type, 'noCountryTin') Then
   ElseIf EQUAL($cmnResidencyForTaxPurposes.type, 'obtainTin') Then
      IF($cmnResidencyForTaxPurposes.reason != null, $silTaxIdentificationNumber.reasonOfUnableToObtainTIN := LIST($cmnResidencyForTaxPurposes.reason, 'CMN_UnableObtainTINReasons', 'sil_Id'));
      IF($cmnResidencyForTaxPurposes.reason == 'otherReason', $silTaxIdentificationNumber.reasonOfUnableToObtainTINDescription := $cmnResidencyForTaxPurposes.commentReason);
   ElseIf EQUAL($cmnResidencyForTaxPurposes.type, 'localLawNoTin') Then
   End
   /* If $cmnResidencyForTaxPurposes.noCountryTaxReason != null Then
      $. := $cmnResidencyForTaxPurposes.noCountryTaxReason;
   End
   
   If $cmnResidencyForTaxPurposes.reason != null Then
      $. := $cmnResidencyForTaxPurposes.reason;
   End
   If $cmnResidencyForTaxPurposes.commentReason != null Then
      $. := $cmnResidencyForTaxPurposess.commentReason;
   End*/
   Return $silTaxIdentificationNumber;
End]]></definition>
        </method>
        <method name="createSILTaxInformation" userId="pezzi" uuid="00000000-2b69-015b-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILTaxInformation'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILTaxInformation(CMN_Party $cmnParty) : SIL_INVOLVEDPARTYtaxInformation Begin
   If $cmnParty == null Then
      Return null;
   End
   /****************************************** Tax and Regulatory ****************************************/
   SIL_INVOLVEDPARTYtaxInformation $silTaxInformation := CAST(SIL_INVOLVEDPARTYtaxInformation, CreateSkeletonDataClass(SIL_INVOLVEDPARTYtaxInformation));
   $silTaxInformation.taxDetails := NewIndexed(SIL_INVOLVEDPARTYtaxDetail);
   SIL_INVOLVEDPARTYtaxIdentificationNumber $silTaxIdentificationNumber;
   CMN_TaxTransparency $cmnTaxTransparency;
   If $cmnParty.type.isPhysicalPerson() Then
      CMN_RegulatoryProfilePhysical $cmnRegulatoryProfilePhysical := CAST(CMN_PhysicalPerson, $cmnParty).regulatoryProfile;
      $cmnTaxTransparency := $cmnRegulatoryProfilePhysical.taxTransparency;
   ElseIf $cmnParty.type.isLegalEntity() Then
      CMN_RegulatoryProfileLegal $cmnRegulatoryProfileLegal := CAST(CMN_LegalEntity, $cmnParty).regulatoryProfile;
      /******************************** Tax & Regulatory ****************************************************/
      $cmnTaxTransparency := $cmnRegulatoryProfileLegal.taxTransparency;
   End
   Try
      If $cmnTaxTransparency != null Then
         /*If $cmnTaxTransparency.openingAccountReason != null Then
            SIL_INVOLVEDPARTYtaxDetail $taxDetail := CAST(SIL_INVOLVEDPARTYtaxDetail, CreateSkeletonDataClass(SIL_INVOLVEDPARTYtaxDetail));
            $taxDetail.bookingCentreDissemblanceOpenReason := $cmnTaxTransparency.openingAccountReason;
            $silTaxInformation.taxDetails.addElement($taxDetail);
         End*/
         $silTaxInformation.tins := NewIndexed(SIL_INVOLVEDPARTYtaxIdentificationNumber);
         $silTaxIdentificationNumber := INT_SILMappingCMNtoSIL_v2.createSILTaxIdentificationNumberFromCMNResidencyForTaxPurposes($cmnTaxTransparency.residencyForTaxPurposes, 'Tax identification number');
         IF($cmnTaxTransparency.residencyForTaxPurposes.hasTaxTrasparent != null, $silTaxInformation.fiscallyTransparentEntityIndicator := $cmnTaxTransparency.residencyForTaxPurposes.hasTaxTrasparent);
         $silTaxInformation.tins.addElement($silTaxIdentificationNumber);
         If LIB_Validator.validateNotEmptyIndexed($cmnTaxTransparency.additionalResidencyInformation) Then
            For Integer $i := 1 Condition $i <= $cmnTaxTransparency.additionalResidencyInformation.size() Step $i := $i + 1 Do
               CMN_ResidencyForTaxPurposes $cmnResidencyForTaxPurposes := $cmnTaxTransparency.additionalResidencyInformation[$i];
               If $i == 1 Then
                  $silTaxIdentificationNumber := INT_SILMappingCMNtoSIL_v2.createSILTaxIdentificationNumberFromCMNResidencyForTaxPurposes($cmnResidencyForTaxPurposes, 'Tax Residence Country (Primary)');
               Else
                  $silTaxIdentificationNumber := INT_SILMappingCMNtoSIL_v2.createSILTaxIdentificationNumberFromCMNResidencyForTaxPurposes($cmnResidencyForTaxPurposes, 'Tax Residence Country (Additional)');
               End
               IF($silTaxIdentificationNumber != null, $silTaxInformation.tins.addElement($silTaxIdentificationNumber));
            End
         End
      End
   Catch
      LIB_Logger.integrationError('[TAX_INFORMATION] Exception store: ' & TOSTRING($exception));
   End
   If $cmnParty.type.isPhysicalPerson() Then
      CMN_RegulatoryProfilePhysical $cmnRegulatoryProfilePhysical := CAST(CMN_PhysicalPerson, $cmnParty).regulatoryProfile;
      IF(NotEmpty($cmnRegulatoryProfilePhysical.getSILID()), $silTaxInformation.id := $cmnRegulatoryProfilePhysical.getSILID());
      /************************************** FATCA **********************/
      CMN_FatcaProfilePhysical $cmnFatcaProfilePhysical := $cmnRegulatoryProfilePhysical.fatcaProfile;
      If $cmnFatcaProfilePhysical != null Then
         //***tax & regulatory ***
         IF($cmnFatcaProfilePhysical.citizen != null, $silTaxInformation.usPersonIndicator := $cmnFatcaProfilePhysical.citizen);
         /********** US POLICY *************/
         SIL_INVOLVEDPARTYusTaxPolicy $silUsTaxPolicy := CAST(SIL_INVOLVEDPARTYusTaxPolicy, CreateSkeletonDataClass(SIL_INVOLVEDPARTYusTaxPolicy));
         $silTaxInformation.taxDetails.addElement($silUsTaxPolicy);
         $silUsTaxPolicy.finalClassification := CAST(SIL_FATCAfinalClassification, CreateSkeletonDataClass(SIL_FATCAfinalClassification));
         IF(NotEmpty($cmnFatcaProfilePhysical.fatcaClassification), $silUsTaxPolicy.finalClassification.classification := LIST($cmnFatcaProfilePhysical.fatcaClassification, 'CMN_FatcaClassificationList', 'sil_Id'));
         //IF(NotEmpty($cmnFatcaProfilePhysical.fatcaClassification), $silUsTaxPolicy.finalClassification.subClassification := $cmnFatcaProfilePhysical.fatcaClassification);
         IF($cmnFatcaProfilePhysical.hasUSTins != null, $silUsTaxPolicy.hasUSTINIndicator := $cmnFatcaProfilePhysical.hasUSTins);
         IF($cmnFatcaProfilePhysical.taxpayer != null, $silUsTaxPolicy.usPresenceIndicator := $cmnFatcaProfilePhysical.taxpayer);
         IF($cmnFatcaProfilePhysical.isUSPersonForTaxPurposes != null, $silUsTaxPolicy.usPersonOtherReasonIndicator := $cmnFatcaProfilePhysical.isUSPersonForTaxPurposes);
         IF($cmnFatcaProfilePhysical.hasPartyLiveInUsFrom12Months != null, $silUsTaxPolicy.organizationUSPlaceOfBusinessIndicator := $cmnFatcaProfilePhysical.hasPartyLiveInUsFrom12Months);
         IF($cmnFatcaProfilePhysical.amountOfTimeInUSComment != null, $silUsTaxPolicy.moreThan30DaysinUSLast12MonthsDescription := $cmnFatcaProfilePhysical.amountOfTimeInUSComment);
         IF($cmnFatcaProfilePhysical.hasAddressInUS != null, $silUsTaxPolicy.nonUSEntityUSLocationIndicator := $cmnFatcaProfilePhysical.hasAddressInUS);
         IF($cmnFatcaProfilePhysical.hasConstructiveControl != null, $silUsTaxPolicy.hasConstructiveControlOfAccountIndicator := $cmnFatcaProfilePhysical.hasConstructiveControl);
         IF($cmnFatcaProfilePhysical.confirmNatureOfBusiness != null, $silUsTaxPolicy.purposeOfUSAddress := $cmnFatcaProfilePhysical.confirmNatureOfBusiness);
         IF($cmnFatcaProfilePhysical.otherUSConnection != null, $silUsTaxPolicy.usConnectionOtherComment := $cmnFatcaProfilePhysical.otherUSConnection);
         /************************************** UKRND **********************/
         CMN_UKResidentNonDomiciled $cmnUKResidentNonDomiciled := $cmnRegulatoryProfilePhysical.ukResidenceNonDomiciled;
         If $cmnUKResidentNonDomiciled != null Then
            IF($cmnUKResidentNonDomiciled.isUKResidentNoNDomiciled != null, $silTaxInformation.ukrndIndicator := $cmnUKResidentNonDomiciled.isUKResidentNoNDomiciled);
            If $cmnRegulatoryProfilePhysical.ukResidenceNonDomiciled.countryOfDomicile != null Then
               SIL_INVOLVEDPARTYukrnd $silUKRND := CAST(SIL_INVOLVEDPARTYukrnd, CreateSkeletonDataClass(SIL_INVOLVEDPARTYukrnd));
               $silTaxInformation.taxDetails.addElement($silUKRND);
               $silUKRND.accountRelevantParty := CAST(SIL_INVOLVEDPARTYcustomerRole, CreateSkeletonDataClass(SIL_INVOLVEDPARTYcustomerRole));
               SIL_INVOLVEDPARTYindividual $silIndividual := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual));
               $silUKRND.accountRelevantParty.party := $silIndividual;
               $silIndividual.domicile := $cmnUKResidentNonDomiciled.countryOfDomicile;
            End
         End
      End
   ElseIf $cmnParty.type.isLegalEntity() Then
      CMN_RegulatoryProfileLegal $cmnRegulatoryProfileLegal := CAST(CMN_LegalEntity, $cmnParty).regulatoryProfile;
      /******************************** Tax & Regulatory ****************************************************/
      CMN_CRSObligation $cmnCRSObligation := $cmnRegulatoryProfileLegal.CRSObligation;
      If $cmnCRSObligation.isCRSEntityTypeKnow Then
         SIL_INVOLVEDPARTYcrs $silCRS := CAST(SIL_INVOLVEDPARTYcrs, CreateSkeletonDataClass(SIL_INVOLVEDPARTYcrs));
         IF(NotEmpty($cmnCRSObligation.CRSentityType), $silCRS.crsEntityTyp := LIST($cmnCRSObligation.CRSentityType, 'CMN_CRSEntityTypes', 'sil_Id'));
         If $cmnCRSObligation.CRSentityType == 'activeNFETradedCorporation' Then
            $silCRS.accountRelevantParty := CAST(SIL_INVOLVEDPARTYcustomerRole, CreateSkeletonDataClass(SIL_INVOLVEDPARTYcustomerRole));
            SIL_INVOLVEDPARTYorganization $silMarketOrganization := CAST(SIL_INVOLVEDPARTYorganization, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganization));
            $silCRS.accountRelevantParty.party := $silMarketOrganization;
            If $cmnCRSObligation.activeNFENameSecuritiesMarket != null Then
               $silMarketOrganization.stockExchangeCode := $cmnCRSObligation.activeNFENameSecuritiesMarket;
            End
            If $cmnCRSObligation.activeNFENameTradedCorp != null Then
               SIL_INVOLVEDPARTYorganizationName $silOrganizationName := CAST(SIL_INVOLVEDPARTYorganizationName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganizationName));
               $silOrganizationName.businessName := $cmnCRSObligation.activeNFENameTradedCorp;
               $silMarketOrganization.names.addElement($silOrganizationName);
            End
         End
         IF($cmnCRSObligation.CRSInvestmentEntitySubCat != null, $silCRS.crsEntitySubType := LIST($cmnCRSObligation.CRSInvestmentEntitySubCat, 'CMN_CRSEntitySubTypes', 'sil_Id'));
         IF($cmnCRSObligation.hasControllingPerson != null, $silCRS.organizationKnowControllingPersonIndicator := $cmnCRSObligation.hasControllingPerson);
         If $cmnCRSObligation.firstPartGIIN != null and $cmnCRSObligation.secondPartGIIN != null and $cmnCRSObligation.thirdPartGIIN != null and $cmnCRSObligation.fourthPartGIIN != null Then
            $silCRS.giinCode := $cmnCRSObligation.getGIIN();
         End
         $silTaxInformation.taxDetails.addElement($silCRS);
         If $cmnCRSObligation.hasControllingPerson && LIB_Validator.validateNotEmptyIndexed($cmnCRSObligation.financialInstControllingPerson) Then
            CMN_ControllingPerson $cmnControllingPerson;
            ForEach $cmnControllingPerson In $cmnCRSObligation.financialInstControllingPerson Do
               If NotEmpty($cmnControllingPerson.id) Then
                  SIL_INVOLVEDPARTYcontrollingPersonRole $silRole := CAST(SIL_INVOLVEDPARTYcontrollingPersonRole, CreateSkeletonDataClass(SIL_INVOLVEDPARTYcontrollingPersonRole));
                  $silCRS.controllingPersons.addElement($silRole);
                  $silRole.party := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual));
                  SIL_INVOLVEDPARTYindividualName $silCRSName := CAST(SIL_INVOLVEDPARTYindividualName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividualName));
                  $silCRSName.firstName := $cmnControllingPerson.firstName;
                  $silCRSName.lastName := $cmnControllingPerson.lastName;
                  $silRole.party.names.addElement($silCRSName);
                  IF($cmnControllingPerson.type != null, $silRole.controllingPersonType := LIST($cmnControllingPerson.type, 'CMN_ControllingPersonType', 'sil_Id'));
               End
            End
         End
      End
      //IF($cmnCRSObligation.nonReportingCategory!=null,$silTaxInformation.:=$cmnCRSObligation.nonReportingCategory);
      If $cmnCRSObligation.CRSentityType == 'passiveNFE' Then
         If $cmnCRSObligation.hasPassiveNFEControllingPerson && LIB_Validator.validateNotEmptyIndexed($cmnCRSObligation.passiveNFEControllingPerson) Then
            CMN_ControllingPerson $cmnControllingPerson;
            ForEach $cmnControllingPerson In $cmnCRSObligation.passiveNFEControllingPerson Do
               //IF($cmnControllingPerson.id != null,   $silTaxInformation.:=$cmnControllingPerson.id);
               //IF($cmnControllingPerson.type != null,   $silTaxInformation.:=$cmnControllingPerson.type);
            End
         End
      End
      /**************************** FATCA *******************************/
      CMN_FatcaProfileLegal $cmnFatcaProfileLegal := $cmnRegulatoryProfileLegal.fatcaProfile;
      If $cmnFatcaProfileLegal != null Then
         IF($cmnFatcaProfileLegal.isEntityUS != null, $silTaxInformation.usCompanyIndicator := $cmnFatcaProfileLegal.isEntityUS);
         /********** US POLICY *************/
         SIL_INVOLVEDPARTYusTaxPolicy $silUsTaxPolicy := CAST(SIL_INVOLVEDPARTYusTaxPolicy, CreateSkeletonDataClass(SIL_INVOLVEDPARTYusTaxPolicy));
         $silTaxInformation.taxDetails.addElement($silUsTaxPolicy);
         IF($cmnFatcaProfileLegal.chapterThree != null, $silUsTaxPolicy.chapter3Status := LIST($cmnFatcaProfileLegal.chapterThree, 'CMN_ChapterThree', 'sil_Id'));
         IF($cmnFatcaProfileLegal.w8FormClassification != null, $silUsTaxPolicy.w8Classification := LIST($cmnFatcaProfileLegal.w8FormClassification, 'CMN_W8FormClassification', 'sil_Id'));
         $silUsTaxPolicy.finalClassification := CAST(SIL_FATCAfinalClassification, CreateSkeletonDataClass(SIL_FATCAfinalClassification));
         IF(NotEmpty($cmnFatcaProfileLegal.fatcaClassification), $silUsTaxPolicy.finalClassification.classification := LIST($cmnFatcaProfileLegal.fatcaClassification, 'CMN_FatcaClassificationList', 'sil_Id'));
         IF($cmnFatcaProfileLegal.isEntityActivity != null, $silUsTaxPolicy.organizationUSTaxLiableIndicator := $cmnFatcaProfileLegal.isEntityActivity);
         IF($cmnFatcaProfileLegal.descUSPersonCapacitiesTrust != null, $silUsTaxPolicy.entityContainingUSPersonDescription := $cmnFatcaProfileLegal.descUSPersonCapacitiesTrust);
         IF($cmnFatcaProfileLegal.commentsDetailUsePerson != null, $silUsTaxPolicy.entityContainingUSPersonDescription := $cmnFatcaProfileLegal.commentsDetailUsePerson);
         IF($cmnFatcaProfileLegal.hasUSPersCapacities != null, $silUsTaxPolicy.organizationUSExternalPersonRoleCode := INT_SILMatchingTools_v2.matchCMNBooleanToSILYesNo($cmnFatcaProfileLegal.hasUSPersCapacities));
         IF($cmnFatcaProfileLegal.hasUSPersonCapacitiesTrust != null, $silUsTaxPolicy.organizationUSExternalPersonRoleCode := INT_SILMatchingTools_v2.matchCMNBooleanToSILYesNo($cmnFatcaProfileLegal.hasUSPersonCapacitiesTrust));
         IF($cmnFatcaProfileLegal.hasUSTins != null, $silUsTaxPolicy.hasUSTINIndicator := $cmnFatcaProfileLegal.hasUSTins);
         IF($cmnFatcaProfileLegal.isformationDocuments != null, $silUsTaxPolicy.organizationUSCourtJusidictionLiableIndicator := $cmnFatcaProfileLegal.isformationDocuments);
         IF($cmnFatcaProfileLegal.isPlanEmployeesUsPerson != null, $silUsTaxPolicy.organizationPensionPlanUSPersonIndicator := $cmnFatcaProfileLegal.isPlanEmployeesUsPerson);
         IF($cmnFatcaProfileLegal.hasUSPersonCapacitiesTrust != null, $silUsTaxPolicy.organizationUSExternalPersonRoleCode := INT_SILMatchingTools_v2.matchCMNBooleanToSILYesNo($cmnFatcaProfileLegal.hasUSPersonCapacitiesTrust));
         IF($cmnFatcaProfileLegal.isDisregardedOrTaxExempt != null, $silUsTaxPolicy.organizationUSTaxExemptionIndicator := $cmnFatcaProfileLegal.isDisregardedOrTaxExempt);
         //IF($cmnFatcaProfileLegal.formationDocumentsCountry!=null,$silOrganization.:=$cmnFatcaProfileLegal.formationDocumentsCountry);
         If $cmnFatcaProfileLegal.isDecentUsPerson != null Then
            $silUsTaxPolicy.accountRelevantParty := CAST(SIL_INVOLVEDPARTYcustomerRole, CreateSkeletonDataClass(SIL_INVOLVEDPARTYcustomerRole));
            SIL_INVOLVEDPARTYindividual $silIndividual := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual));
            $silUsTaxPolicy.accountRelevantParty.party := $silIndividual;
            $silIndividual.deceasedIndicator := $cmnFatcaProfileLegal.isDecentUsPerson;
            IF($silIndividual.deceasedIndicator, $silTaxInformation.usPersonIndicator := true);
         End
         IF($cmnFatcaProfileLegal.isFlowThorugh != null, $silUsTaxPolicy.organisationFlowThroughIndicator := $cmnFatcaProfileLegal.isFlowThorugh);
         IF($cmnFatcaProfileLegal.isAllBOIndividual != null, $silUsTaxPolicy.organisationFlowThroughBeneficiaryisIndividualIndicator := $cmnFatcaProfileLegal.isAllBOIndividual);
         IF($cmnFatcaProfileLegal.isAllBOIndividual && $cmnFatcaProfileLegal.isAnyUSPersonInBO != null, $silUsTaxPolicy.organisationFlowThroughBeneficiaryisUsPersonIndicator := $cmnFatcaProfileLegal.isAnyUSPersonInBO);
         IF($cmnFatcaProfileLegal.isIncorporatedUnderUSCountry != null, $silUsTaxPolicy.organizationUSEstabilshedEntityIndicator := $cmnFatcaProfileLegal.isIncorporatedUnderUSCountry);
         IF($cmnFatcaProfileLegal.isUSPrincipalPlace != null, $silUsTaxPolicy.organizationUSPlaceOfBusinessIndicator := $cmnFatcaProfileLegal.isUSPrincipalPlace);
         If $cmnFatcaProfileLegal.isUSPrincipalPlace && LIB_Validator.validateNotEmptyIndexed($cmnFatcaProfileLegal.principalPlaceCountry) Then
            ForEach String $cmnCountryCode In $cmnFatcaProfileLegal.principalPlaceCountry Do
               $silUsTaxPolicy.organizationUSPlaceOfBusinessCounties.addElement(INT_SILMappingCMNtoSIL_v2.createSILCountry($cmnCountryCode));
            End
         End
         IF($cmnFatcaProfileLegal.isNotUSAgency != null, $silUsTaxPolicy.organizationNonUSEstabilshedEntityIndicator := $cmnFatcaProfileLegal.isNotUSAgency);
         If $cmnFatcaProfileLegal.isNotUSAgency && LIB_Validator.validateNotEmptyIndexed($cmnFatcaProfileLegal.notUSAgencyCountry) Then
            ForEach String $cmnCountryCode In $cmnFatcaProfileLegal.notUSAgencyCountry Do
               $silUsTaxPolicy.organizationNonUSEstabilshedEntityCountries.addElement(INT_SILMappingCMNtoSIL_v2.createSILCountry($cmnCountryCode));
            End
         End
      End
   End
   IF($cmnTaxTransparency.hasTaxAdvisor != null, $silTaxInformation.taxAdvisorIndicator := $cmnTaxTransparency.hasTaxAdvisor);
   If $cmnTaxTransparency.hasTaxAdvisor Then
      SIL_INVOLVEDPARTYtaxAdvisor $silTaxAdvisor := CAST(SIL_INVOLVEDPARTYtaxAdvisor, CreateSkeletonDataClass(SIL_INVOLVEDPARTYtaxAdvisor));
      If NotEmpty($cmnTaxTransparency.taxAdvisorFirstName) or NotEmpty($cmnTaxTransparency.taxAdvisorLastName) Then
         $silTaxAdvisor.party := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual));
         SIL_INVOLVEDPARTYindividualName $silIndividualName := CAST(SIL_INVOLVEDPARTYindividualName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividualName));
         $silIndividualName.firstName := $cmnTaxTransparency.taxAdvisorFirstName;
         $silIndividualName.lastName := $cmnTaxTransparency.taxAdvisorLastName;
         $silTaxAdvisor.party.names.addElement($silIndividualName);
      ElseIf NotEmpty($cmnTaxTransparency.taxAdvisoTradingName) Then
         $silTaxAdvisor.party := CAST(SIL_INVOLVEDPARTYorganization, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganization));
         SIL_INVOLVEDPARTYorganizationName $silOrganizationName := CAST(SIL_INVOLVEDPARTYorganizationName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganizationName));
         $silOrganizationName.businessName := $cmnTaxTransparency.taxAdvisoTradingName;
         $silTaxAdvisor.party.names.addElement($silOrganizationName);
      End
      SIL_INVOLVEDPARTYpostalAddress $postalAddress := INT_SILMappingCMNtoSIL_v2.createSILPostalAddress($cmnTaxTransparency.taxAdvisorProfessionalAddress);
      $postalAddress.type := LIST('generic', 'CMN_AddressTypes__selector', 'code');
      $silTaxAdvisor.party.addresses.addElement($postalAddress);
      $silTaxInformation.taxAdvisors.addElement($silTaxAdvisor);
   End
   IF($cmnTaxTransparency.hasOtherCountryConnections != null, $silTaxInformation.otherCountryConnectionIndicator := $cmnTaxTransparency.hasOtherCountryConnections);
   IF($cmnTaxTransparency.hasOtherCountryConnections && $cmnTaxTransparency.otherCountryConnections != null, $silTaxInformation.otherCountryConnectionDescription := $cmnTaxTransparency.otherCountryConnections);
   INT_SILMappingCMNtoSILVariationFactory__selector().createSILTaxInformation($cmnParty, $silTaxInformation);
   Return $silTaxInformation;
End]]></definition>
        </method>
        <method name="createSILTransfer" userId="pezzi" uuid="00000000-0d50-7045-0000-000000000000">
            <definition><![CDATA[/**
  Description of function 'createSILTransfer'.
  @param $value Description of parameter '$value'.
  @return       Description of return value.
*/
StaticFunction createSILTransfer(Double $ammount, String $transferType, CMN_KYTSourceOfFund $cmnTransfer := null, CMN_BusinessRelationship $cmnBusinessRelationship := null) : SIL_ORDERtransfer Begin
   If EMPTY($transferType) Then
      Return null;
   End
   SIL_ORDERtransfer $silOrderTransfer := CAST(SIL_ORDERtransfer, CreateSkeletonDataClass(SIL_ORDERtransfer));
   IF($ammount != null, $silOrderTransfer.amount := $ammount);
   $silOrderTransfer.type := $transferType;
   If $cmnBusinessRelationship == null || $cmnTransfer == null Then
      Return $silOrderTransfer;
   End
   IF(NotEmpty($cmnTransfer.getSILID()), $silOrderTransfer.id := $cmnTransfer.getSILID());
   /******************* Debtor Name *****************/
   $silOrderTransfer.debtorRole := CAST(SIL_INVOLVEDPARTYaccountHolder, CreateSkeletonDataClass(SIL_INVOLVEDPARTYaccountHolder));
   SIL_INVOLVEDPARTYinvolvedPartyName $debtorName;
   If EQUAL($cmnTransfer.orderingParty, 'thirdParty') Then
      $silOrderTransfer.debtorRole.party := CAST(SIL_INVOLVEDPARTYorganization, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganization));
      $silOrderTransfer.debtorRole.type := LIST('thirdParty', 'CMN_KYTOrderingParty', 'sil_id', 'id');
      If $cmnTransfer.thirdPartyName != null Then
         $debtorName := CAST(SIL_INVOLVEDPARTYorganizationName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganizationName));
         $debtorName.fullName := $cmnTransfer.thirdPartyName;
      End
   Else
      CMN_Party $debtor;
      If EQUAL($cmnTransfer.orderingParty, 'ah') Then
         $silOrderTransfer.debtorRole.type := LIST('ah', 'CMN_KYTOrderingParty', 'sil_id', 'id');
         If LIB_Validator.validateNotEmptyIndexed($cmnBusinessRelationship.getCustomers()) Then
            $debtor := $cmnBusinessRelationship.getCustomers()[1];
         End
      ElseIf EQUAL($cmnTransfer.orderingParty, 'bo') Then
         $silOrderTransfer.debtorRole.type := LIST('bo', 'CMN_KYTOrderingParty', 'sil_id', 'id');
         If LIB_Validator.validateNotEmptyIndexed($cmnBusinessRelationship.getRoleManager().getPartiesInRole('bo')) Then
            $debtor := $cmnBusinessRelationship.getRoleManager().getPartiesInRole('bo')[1];
         End
      End
      If $debtor != null Then
         If $debtor.type.isPhysicalPerson() Then
            $debtorName := CAST(SIL_INVOLVEDPARTYindividualName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividualName));
            $silOrderTransfer.debtorRole.party := CAST(SIL_INVOLVEDPARTYindividual, CreateSkeletonDataClass(SIL_INVOLVEDPARTYindividual));
            $silOrderTransfer.debtorRole.party.id := $debtor.getSILID();
         ElseIf $debtor.type.isLegalEntity() Then
            $debtorName := CAST(SIL_INVOLVEDPARTYorganizationName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganizationName));
            $silOrderTransfer.debtorRole.party := CAST(SIL_INVOLVEDPARTYorganization, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganization));
            $silOrderTransfer.debtorRole.party.id := $debtor.getSILID();
         End
         $debtorName.fullName := $debtor.getFullName();
      End
   End
   If $debtorName != null Then
      $silOrderTransfer.debtorRole.party.names := NewIndexed(SIL_INVOLVEDPARTYinvolvedPartyName);
      $silOrderTransfer.debtorRole.party.names.addElement($debtorName);
   End
   If NotEmpty($cmnTransfer.bank) Then
      SIL_INVOLVEDPARTYinvolvedPartyName $bankName;
      $silOrderTransfer.debtorBank := CAST(SIL_INVOLVEDPARTYorganization, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganization));
      $silOrderTransfer.debtorBank.type := LIST($cmnTransfer.bank, 'SIL_KYTBank', 'sil_id');
      If $cmnTransfer.bank == CMN_KYTSourceOfFund.getHSBCBank() and NotEmpty($cmnTransfer.entity) Then
         /************* ENTITY **********************/
         $bankName := CAST(SIL_INVOLVEDPARTYorganizationName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganizationName));
         CAST(SIL_INVOLVEDPARTYorganizationName, $bankName).businessName := LIST($cmnTransfer.entity, 'CMN_HSBCEntities__selector', 'description', 'id');
      ElseIf $cmnTransfer.bank == CMN_KYTSourceOfFund.getOthersBank() and $cmnTransfer.bankName != null Then
         /************* Others **********************/
         $bankName := CAST(SIL_INVOLVEDPARTYorganizationName, CreateSkeletonDataClass(SIL_INVOLVEDPARTYorganizationName));
         CAST(SIL_INVOLVEDPARTYorganizationName, $bankName).businessName := $cmnTransfer.bankName;
      ElseIf NotEmpty($cmnTransfer.accountNumber) Then
         /************* PBRS **********************/
         $silOrderTransfer.subAccountSell := CAST(SIL_ACCOUNTsubAccount, CreateSkeletonDataClass(SIL_ACCOUNTsubAccount));
         $silOrderTransfer.subAccountSell.id := $cmnTransfer.accountNumber;
      End
      If $bankName != null Then
         $silOrderTransfer.debtorBank.names := NewIndexed(SIL_INVOLVEDPARTYinvolvedPartyName);
         $silOrderTransfer.debtorBank.names.addElement($bankName);
      End
   End
   IF(NotEmpty($cmnTransfer.country), $silOrderTransfer.originOfFundsCountry := INT_SILMappingCMNtoSIL_v2.createSILCountry($cmnTransfer.country));
   Return $silOrderTransfer;
End]]></definition>
        </method>
    </methods>
</class>

                                                                                                                                                                                                                                                                     1,1030,942,0
<?xml version="1.0" encoding="UTF-8"?>
<object xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="object.xsd">
    <id>SOAP12_Fault</id>
    <uuid>22b46961-8fbe-4837-ae4a-8f6499aca6c9</uuid>
    <type>DataStructure</type>
    <name/>
    <description/>
    <creator/>
    <creationTime>1473229169007</creationTime>
    <modifier/>
    <modificationTime>1473229169007</modificationTime>
    <active>true</active>
    <versionUuid>ca6289a6-68a0-49ae-82f0-3f40fc90c826</versionUuid>
    <parentVersionUuid/>
    <timestamp>1475260129806</timestamp>
    <systemId>h-global-predev.appway.com</systemId>
    <copyOfUuid>3c7a8540-c73d-4f06-adf0-731df3d4252c</copyOfUuid>
    <committed>true</committed>
    <deleted>false</deleted>
    <userId>magloire</userId>
    <metaData>
        <property name="qn" value="{http://www.w3.org/2003/05/soap-envelope}Fault"/>
        <property name="Adapter-Version" value="2.2.31"/>
        <property name="Generator" value="WebServices"/>
    </metaData>
</object>

<?xml version="1.0" encoding="UTF-8"?>
<class dname="" name="SOAP12_Fault" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="dataitemclass.xsd">
    <superclasses>
        <superclass class="Fault"/>
    </superclasses>
    <properties>
        <property collection="none" description="" name="Node" reference="false" sequenceNr="0" type="XmlNode" uuid="a8abcce9-78e5-4c14-96c7-f0244f351aa9"/>
        <property collection="none" description="" name="Role" reference="false" sequenceNr="1" type="String" uuid="078d3d2c-2b7c-4506-bb02-9e96f18badda"/>
        <property collection="none" description="" name="Code" reference="false" sequenceNr="2" type="String" uuid="c52fc39e-c2d2-4d1c-8227-1254bcb79175"/>
        <property collection="none" description="" name="Detail" reference="false" sequenceNr="3" type="XmlNode" uuid="0e717cd6-df4a-4f00-8c7f-ea47c44d70b3"/>
    </properties>
    <methods/>
</class>

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             1,909,50014,2
<?xml version="1.0" encoding="UTF-8"?>
<object xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="object.xsd">
    <id>CMN_1608035699AoBCPTD5D9EN</id>
    <uuid>39d53fae-2ede-4c74-9e6b-fa7cf7e02b33</uuid>
    <type>PdfOutput</type>
    <name/>
    <description/>
    <creator>foo</creator>
    <creationTime>1471325865812</creationTime>
    <modifier>bernard</modifier>
    <modificationTime>1473435990591</modificationTime>
    <active>true</active>
    <versionUuid>1382777b-8241-433d-b16c-921d4a81deff</versionUuid>
    <parentVersionUuid>ac122a83-d09b-4497-81ed-215508a5b296</parentVersionUuid>
    <timestamp>1475260129806</timestamp>
    <systemId>h-global-predev.appway.com</systemId>
    <copyOfUuid>020d6414-65bb-4623-8a9a-f043250680ce</copyOfUuid>
    <committed>true</committed>
    <deleted>false</deleted>
    <userId>magloire</userId>
    <metaData/>
</object>

<?xml version="1.0" encoding="UTF-8"?>
<outputform version="1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="pdfoutput.xsd">
    <parameterDefinitions>
        <parameterDefinition collectionType="none" defaultExpression="" description="" mode="assigned" type="CMN_Party" variable="partyOib1"/>
        <parameterDefinition collectionType="none" defaultExpression="" description="" mode="assigned" type="CMN_Party" variable="partyOib2"/>
        <parameterDefinition collectionType="none" defaultExpression="" description="" mode="assigned" type="CMN_Party" variable="partyOib3"/>
        <parameterDefinition collectionType="none" defaultExpression="NEW(CMN_DocumentHelperPhysicalPerson, $partyOib1)" description="" mode="local" type="CMN_DocumentHelperPhysicalPerson" variable="partyOibHelper1"/>
        <parameterDefinition collectionType="none" defaultExpression="NEW(CMN_DocumentHelperPhysicalPerson, $partyOib2)" description="" mode="local" type="CMN_DocumentHelperPhysicalPerson" variable="partyOibHelper2"/>
        <parameterDefinition collectionType="none" defaultExpression="NEW(CMN_DocumentHelperPhysicalPerson, $partyOib3)" description="" mode="local" type="CMN_DocumentHelperPhysicalPerson" variable="partyOibHelper3"/>
        <parameterDefinition collectionType="none" defaultExpression="" description="" mode="assigned" type="Integer" variable="itemNumber"/>
        <parameterDefinition collectionType="none" defaultExpression="" description="" mode="assigned" type="LIB_IntegerWrapper" variable="pageNumber"/>
        <parameterDefinition collectionType="none" defaultExpression="" description="" mode="assigned" type="Integer" variable="totalNumberOfPage"/>
        <parameterDefinition collectionType="none" defaultExpression="" description="" mode="assigned" type="Integer" variable="iterationNumber"/>
        <parameterDefinition collectionType="none" defaultExpression="" description="The document ID of single document version that is used for document tracking" mode="assigned" type="String" variable="singleDocumentId"/>
    </parameterDefinitions>
    <originalfile>160803_5699_AoB_CPT_D5.pdf</originalfile>
    <sourcefileversion/>
    <languageid>en</languageid>
    <outputformpage>
        <rotation>0</rotation>
        <visibility/>
        <replicationstrategy>0</replicationstrategy>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857069_0</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>107.00000000000001</leftposition>
            <topposition>115.83333333333333</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression>IF($partyOibHelper1.isMiss(), 'X', '')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857082_1</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>138.06666666666644</leftposition>
            <topposition>116.0</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression>IF($partyOibHelper1.isMs(), 'X', '')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857089_2</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>54.83333333333319</leftposition>
            <topposition>115.83333333333333</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression>IF($partyOibHelper1.isMr(), 'X', '')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857096_3</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>78.83333333333337</leftposition>
            <topposition>116.0</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression>IF($partyOibHelper1.isMrs(), 'X', '')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857104_4</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>12.755905511811024</height>
            <leftposition>210.99999968503937</leftposition>
            <topposition>204.79999999999995</topposition>
            <width>138.89763779527559</width>
            <zindex>1</zindex>
            <expression>$partyOibHelper1.getPermanentAddress().getCity()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857112_5</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>159.70000000000005</leftposition>
            <topposition>247.99999999999991</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression>IF($partyOibHelper1.isInternetBankingOperating(), 'X', '')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857122_6</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>159.7</leftposition>
            <topposition>265.93333333333345</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression>IF($partyOibHelper1.isInternetBankingViewInfoReport(), 'X', '')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857127_7</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>12.755905511811024</height>
            <leftposition>167.24409448818898</leftposition>
            <topposition>106.59999999999997</topposition>
            <width>382.6771653543307</width>
            <zindex>1</zindex>
            <expression>$partyOibHelper1.getLastName()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857134_8</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>12.755905511811024</height>
            <leftposition>167.24409448818898</leftposition>
            <topposition>136.3999999999999</topposition>
            <width>382.6771653543307</width>
            <zindex>1</zindex>
            <expression>CONCAT($partyOibHelper1.getFirstName(), ' ', $partyOibHelper1.getMiddleName())</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857140_9</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>12.755905511811024</height>
            <leftposition>167.24409448818898</leftposition>
            <topposition>226.13333333333318</topposition>
            <width>382.6771653543307</width>
            <zindex>1</zindex>
            <expression>$partyOibHelper1.getEmailAddress()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857148_10</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>36.0</height>
            <leftposition>167.24409448818898</leftposition>
            <topposition>163.3999999999998</topposition>
            <width>382.6771653543307</width>
            <zindex>1</zindex>
            <expression>$partyOibHelper1.getPermanentAddress().getFullAddress()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>lead</name>
                <value>21.0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857155_11</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>12.755905511811024</height>
            <leftposition>410.40000000000003</leftposition>
            <topposition>204.79999999999995</topposition>
            <width>138.89763779527559</width>
            <zindex>1</zindex>
            <expression>$partyOibHelper1.getPermanentAddress().getCountry()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857162_12</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>159.83333333333312</leftposition>
            <topposition>284.1333333333334</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression>IF($partyOibHelper1.isInternetBankingViewInfoReportNoAccess(), 'X', '')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857168_13</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>12.755905511811024</height>
            <leftposition>167.24409448818898</leftposition>
            <topposition>313.2333333333335</topposition>
            <width>382.6771653543307</width>
            <zindex>1</zindex>
            <expression>$partyOibHelper2.getLastName()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857177_14</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>107.10000000000015</leftposition>
            <topposition>322.9666666666669</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression>IF($partyOibHelper2.isMiss(), 'X', '')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857184_15</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>138.16666666666657</leftposition>
            <topposition>322.9666666666669</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression/>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857192_16</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>54.59999999999996</leftposition>
            <topposition>322.9666666666669</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression>IF($partyOibHelper2.isMr(), 'X', '')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857198_17</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>78.60000000000018</leftposition>
            <topposition>322.9666666666669</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression>IF($partyOibHelper2.isMrs(), 'X', '')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857205_18</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>12.755905511811024</height>
            <leftposition>167.24409448818898</leftposition>
            <topposition>342.76666666666677</topposition>
            <width>382.6771653543307</width>
            <zindex>1</zindex>
            <expression>CONCAT($partyOibHelper2.getFirstName(), ' ', $partyOibHelper2.getMiddleName())</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857212_19</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>36.0</height>
            <leftposition>167.24409448818898</leftposition>
            <topposition>373.3666666666666</topposition>
            <width>382.6771653543307</width>
            <zindex>1</zindex>
            <expression>$partyOibHelper2.getPermanentAddress().getFullAddress()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>lead</name>
                <value>21.0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857219_20</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>12.755905511811024</height>
            <leftposition>210.99999968503937</leftposition>
            <topposition>414.80000000000007</topposition>
            <width>138.89763779527559</width>
            <zindex>1</zindex>
            <expression>$partyOibHelper2.getPermanentAddress().getCity()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857226_21</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>12.755905511811024</height>
            <leftposition>410.40000000000003</leftposition>
            <topposition>414.80000000000007</topposition>
            <width>138.89763779527559</width>
            <zindex>1</zindex>
            <expression>$partyOibHelper2.getPermanentAddress().getCountry()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857234_22</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>12.755905511811024</height>
            <leftposition>167.24409448818898</leftposition>
            <topposition>436.2666666666669</topposition>
            <width>382.6771653543307</width>
            <zindex>1</zindex>
            <expression>$partyOibHelper2.getEmailAddress()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857244_23</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>159.73333333333343</leftposition>
            <topposition>457.80000000000007</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression>IF($partyOibHelper2.isInternetBankingOperating(), 'X', '')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857252_24</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>159.80000000000018</leftposition>
            <topposition>475.73333333333375</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression>IF($partyOibHelper2.isInternetBankingViewInfoReport(), 'X', '')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857259_25</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>159.5</leftposition>
            <topposition>493.60000000000025</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression>IF($partyOibHelper2.isInternetBankingViewInfoReportNoAccess(), 'X', '')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857265_26</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>12.755905511811024</height>
            <leftposition>167.24409448818898</leftposition>
            <topposition>522.9000000000002</topposition>
            <width>382.6771653543307</width>
            <zindex>1</zindex>
            <expression>$partyOibHelper3.getLastName()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857274_27</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>106.86666666666684</leftposition>
            <topposition>533.1333333333336</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression>IF($partyOibHelper3.isMiss(), 'X', '')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857282_28</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>138.1000000000001</leftposition>
            <topposition>532.9666666666669</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression/>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857288_29</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>54.70000000000015</leftposition>
            <topposition>533.1333333333336</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression>IF($partyOibHelper3.isMr(), 'X', '')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857294_30</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>78.70000000000023</leftposition>
            <topposition>533.1333333333336</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression>IF($partyOibHelper3.isMrs(), 'X', '')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857300_31</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>12.755905511811024</height>
            <leftposition>167.57742782152232</leftposition>
            <topposition>553.100000000001</topposition>
            <width>382.6771653543307</width>
            <zindex>1</zindex>
            <expression>CONCAT($partyOibHelper3.getFirstName(), ' ', $partyOibHelper3.getMiddleName())</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857305_32</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>36.0</height>
            <leftposition>167.57742782152232</leftposition>
            <topposition>583.0333333333342</topposition>
            <width>382.6771653543307</width>
            <zindex>1</zindex>
            <expression>$partyOibHelper3.getPermanentAddress().getFullAddress()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>lead</name>
                <value>21.0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857311_33</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>12.755905511811024</height>
            <leftposition>210.99999968503937</leftposition>
            <topposition>624.8000000000008</topposition>
            <width>138.89763779527559</width>
            <zindex>1</zindex>
            <expression>$partyOibHelper3.getPermanentAddress().getCity()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857319_34</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>12.755905511811024</height>
            <leftposition>410.40000000000003</leftposition>
            <topposition>624.8000000000008</topposition>
            <width>138.89763779527559</width>
            <zindex>1</zindex>
            <expression>$partyOibHelper3.getPermanentAddress().getCountry()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857325_35</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>12.755905511811024</height>
            <leftposition>167.57742782152232</leftposition>
            <topposition>645.9333333333343</topposition>
            <width>382.6771653543307</width>
            <zindex>1</zindex>
            <expression>$partyOibHelper3.getEmailAddress()</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857332_36</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>159.50000000000023</leftposition>
            <topposition>667.8000000000008</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression>IF($partyOibHelper3.isInternetBankingOperating(), 'X', '')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857340_37</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>159.40000000000032</leftposition>
            <topposition>685.7333333333345</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression>IF($partyOibHelper3.isInternetBankingViewInfoReport(), 'X', '')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574857346_38</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>11.200000000000045</height>
            <leftposition>159.70000000000005</leftposition>
            <topposition>703.6000000000009</topposition>
            <width>12.0</width>
            <zindex>1</zindex>
            <expression>IF($partyOibHelper3.isInternetBankingViewInfoReportNoAccess(), 'X', '')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574915462_39</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <bgcolor>255,255,255</bgcolor>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>14.0</height>
            <leftposition>290.5</leftposition>
            <topposition>47.5</topposition>
            <width>114.0</width>
            <zindex>1</zindex>
            <expression/>
            <visibility>If $iterationNumber == 1 Then
   Return true;
Else
   Return false;
End</visibility>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>fontstyle</name>
                <value>'UI_UniversHSBCPB-Light-8-black'</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>valign</name>
                <value>'middle'</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470574966549_40</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>20.0</height>
            <leftposition>467.7165354330709</leftposition>
            <topposition>799.3700787401575</topposition>
            <width>85.0393700787402</width>
            <zindex>1</zindex>
            <expression>$pageNumber.increaseCounter() &amp; '/' &amp; $totalNumberOfPage</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>align</name>
                <value>'right'</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>fontstyle</name>
                <value>'UI_UniversHSBCPB-Light-8-black'</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470575036403_41</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>18.400000000000034</height>
            <leftposition>29.530709291338585</leftposition>
            <topposition>103.09999999999997</topposition>
            <width>17.599999999999994</width>
            <zindex>1</zindex>
            <expression>JOIN($itemNumber + 1, '.')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>align</name>
                <value>'right'</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>fontstyle</name>
                <value>'UI_UniversHSBCPB-Light-6-black'</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>valign</name>
                <value>'middle'</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470575036714_42</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>18.400000000000034</height>
            <leftposition>29.530709291338585</leftposition>
            <topposition>309.9000000000004</topposition>
            <width>17.599999999999994</width>
            <zindex>1</zindex>
            <expression>JOIN($itemNumber + 2, '.')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>align</name>
                <value>'right'</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>fontstyle</name>
                <value>'UI_UniversHSBCPB-Light-6-black'</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>valign</name>
                <value>'middle'</value>
            </valuefieldparameter>
        </formfield>
        <formfield>
            <name/>
            <description/>
            <formfieldid>field_1470575036721_43</formfieldid>
            <nextformfieldid/>
            <replicationstrategy>0</replicationstrategy>
            <emptyvisibility>false</emptyvisibility>
            <transparency>1.0</transparency>
            <fieldMarkerExpression/>
            <fieldMarkerVisible>false</fieldMarkerVisible>
            <copy>nocopy</copy>
            <height>18.399999999999977</height>
            <leftposition>29.530709291338585</leftposition>
            <topposition>519.9</topposition>
            <width>17.599999999999994</width>
            <zindex>1</zindex>
            <expression>JOIN($itemNumber + 3, '.')</expression>
            <visibility/>
            <blank>false</blank>
            <valuefieldtype>TEXT</valuefieldtype>
            <valuefieldparameter>
                <name>align</name>
                <value>'right'</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>fontstyle</name>
                <value>'UI_UniversHSBCPB-Light-6-black'</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>indent</name>
                <value>0</value>
            </valuefieldparameter>
            <valuefieldparameter>
                <name>valign</name>
                <value>'middle'</value>
            </valuefieldparameter